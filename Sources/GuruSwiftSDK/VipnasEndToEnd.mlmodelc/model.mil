program(1.0) {
    func main<ios15>(tensor<fp32, [1, 4]> bbox_xywh, tensor<fp32, [1, 3, 640, 480]> image_nchw) {
            tensor<int32, [1]> bbox_axes_0 = const()[name = tensor<string, []>("bbox_axes_0"), val = tensor<int32, [1]>([0])];
            tensor<string, []> bbox_xywh_to_fp16_dtype_0 = const()[name = tensor<string, []>("bbox_xywh_to_fp16_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<fp16, [1, 4]> cast_518 = cast(dtype = bbox_xywh_to_fp16_dtype_0, x = bbox_xywh);
            tensor<fp16, [4]> bbox_cast = squeeze(axes = bbox_axes_0, x = cast_518);
            tensor<int32, []> var_21 = const()[name = tensor<string, []>("op_21"), val = tensor<int32, []>(0)];
            tensor<int32, [1]> var_22_axes_0 = const()[name = tensor<string, []>("op_22_axes_0"), val = tensor<int32, [1]>([0])];
            tensor<string, []> image_nchw_to_fp16_dtype_0 = const()[name = tensor<string, []>("image_nchw_to_fp16_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<fp16, [1, 3, 640, 480]> cast_516 = cast(dtype = image_nchw_to_fp16_dtype_0, x = image_nchw);
            tensor<fp16, [3, 640, 480]> var_22_cast = squeeze(axes = var_22_axes_0, x = cast_516);
            tensor<int32, [1]> var_24_begin_0 = const()[name = tensor<string, []>("op_24_begin_0"), val = tensor<int32, [1]>([0])];
            tensor<int32, [1]> var_24_end_0 = const()[name = tensor<string, []>("op_24_end_0"), val = tensor<int32, [1]>([4])];
            tensor<bool, [1]> var_24_end_mask_0 = const()[name = tensor<string, []>("op_24_end_mask_0"), val = tensor<bool, [1]>([true])];
            tensor<int32, [1]> var_24_stride_0 = const()[name = tensor<string, []>("op_24_stride_0"), val = tensor<int32, [1]>([2])];
            tensor<fp16, [2]> var_24_cast = slice_by_index(begin = var_24_begin_0, end = var_24_end_0, end_mask = var_24_end_mask_0, stride = var_24_stride_0, x = bbox_cast);
            tensor<bool, []> center_x_keep_dims_0 = const()[name = tensor<string, []>("center_x_keep_dims_0"), val = tensor<bool, []>(false)];
            tensor<fp16, []> center_x_cast = reduce_mean(keep_dims = center_x_keep_dims_0, x = var_24_cast);
            tensor<int32, [1]> var_26_begin_0 = const()[name = tensor<string, []>("op_26_begin_0"), val = tensor<int32, [1]>([1])];
            tensor<int32, [1]> var_26_end_0 = const()[name = tensor<string, []>("op_26_end_0"), val = tensor<int32, [1]>([4])];
            tensor<bool, [1]> var_26_end_mask_0 = const()[name = tensor<string, []>("op_26_end_mask_0"), val = tensor<bool, [1]>([true])];
            tensor<int32, [1]> var_26_stride_0 = const()[name = tensor<string, []>("op_26_stride_0"), val = tensor<int32, [1]>([2])];
            tensor<fp16, [2]> var_26_cast = slice_by_index(begin = var_26_begin_0, end = var_26_end_0, end_mask = var_26_end_mask_0, stride = var_26_stride_0, x = bbox_cast);
            tensor<bool, []> center_y_keep_dims_0 = const()[name = tensor<string, []>("center_y_keep_dims_0"), val = tensor<bool, []>(false)];
            tensor<fp16, []> center_y_cast = reduce_mean(keep_dims = center_y_keep_dims_0, x = var_26_cast);
            tensor<int32, [1]> w_1_begin_0 = const()[name = tensor<string, []>("w_1_begin_0"), val = tensor<int32, [1]>([2])];
            tensor<int32, [1]> w_1_end_0 = const()[name = tensor<string, []>("w_1_end_0"), val = tensor<int32, [1]>([3])];
            tensor<bool, [1]> w_1_end_mask_0 = const()[name = tensor<string, []>("w_1_end_mask_0"), val = tensor<bool, [1]>([false])];
            tensor<bool, [1]> w_1_squeeze_mask_0 = const()[name = tensor<string, []>("w_1_squeeze_mask_0"), val = tensor<bool, [1]>([true])];
            tensor<fp16, []> w_1_cast = slice_by_index(begin = w_1_begin_0, end = w_1_end_0, end_mask = w_1_end_mask_0, squeeze_mask = w_1_squeeze_mask_0, x = bbox_cast);
            tensor<int32, [1]> h_1_begin_0 = const()[name = tensor<string, []>("h_1_begin_0"), val = tensor<int32, [1]>([3])];
            tensor<int32, [1]> h_1_end_0 = const()[name = tensor<string, []>("h_1_end_0"), val = tensor<int32, [1]>([4])];
            tensor<bool, [1]> h_1_end_mask_0 = const()[name = tensor<string, []>("h_1_end_mask_0"), val = tensor<bool, [1]>([false])];
            tensor<bool, [1]> h_1_squeeze_mask_0 = const()[name = tensor<string, []>("h_1_squeeze_mask_0"), val = tensor<bool, [1]>([true])];
            tensor<fp16, []> h_1_cast = slice_by_index(begin = h_1_begin_0, end = h_1_end_0, end_mask = h_1_end_mask_0, squeeze_mask = h_1_squeeze_mask_0, x = bbox_cast);
            tensor<fp16, []> _inversed_31_y_0_to_fp16 = const()[name = tensor<string, []>("_inversed_31_y_0_to_fp16"), val = tensor<fp16, []>(0x1.554p+0)];
            tensor<fp16, []> _inversed_31_cast = mul(x = w_1_cast, y = _inversed_31_y_0_to_fp16);
            tensor<fp16, []> h_cast = maximum(x = _inversed_31_cast, y = h_1_cast);
            tensor<fp16, []> var_33_to_fp16 = const()[name = tensor<string, []>("op_33_to_fp16"), val = tensor<fp16, []>(0x1.8p-1)];
            tensor<fp16, []> var_34_cast = mul(x = h_cast, y = var_33_to_fp16);
            tensor<fp16, []> w_cast = maximum(x = var_34_cast, y = w_1_cast);
            tensor<fp16, [2]> var_37_cast = stack(axis = var_21, values = (w_cast, h_cast));
            tensor<fp16, []> _inversed_scale_1_y_0_to_fp16 = const()[name = tensor<string, []>("_inversed_scale_1_y_0_to_fp16"), val = tensor<fp16, []>(0x1.47cp-8)];
            tensor<fp16, [2]> _inversed_scale_1_cast = mul(x = var_37_cast, y = _inversed_scale_1_y_0_to_fp16);
            tensor<fp16, []> var_17_to_fp16 = const()[name = tensor<string, []>("op_17_to_fp16"), val = tensor<fp16, []>(0x1.4p+0)];
            tensor<fp16, [2]> scale_3_cast = mul(x = _inversed_scale_1_cast, y = var_17_to_fp16);
            tensor<fp16, []> var_50_y_0_promoted = const()[name = tensor<string, []>("op_50_y_0_promoted"), val = tensor<fp16, []>(-0x1p+0)];
            tensor<fp16, []> var_50_cast = mul(x = center_x_cast, y = var_50_y_0_promoted);
            tensor<fp16, []> var_49_to_fp16 = const()[name = tensor<string, []>("op_49_to_fp16"), val = tensor<fp16, []>(0x1.ep+7)];
            tensor<fp16, []> dx_3_cast = add(x = var_50_cast, y = var_49_to_fp16);
            tensor<fp16, []> var_53_y_0_promoted = const()[name = tensor<string, []>("op_53_y_0_promoted"), val = tensor<fp16, []>(-0x1p+0)];
            tensor<fp16, []> var_53_cast = mul(x = center_y_cast, y = var_53_y_0_promoted);
            tensor<fp16, []> var_52_to_fp16 = const()[name = tensor<string, []>("op_52_to_fp16"), val = tensor<fp16, []>(0x1.4p+8)];
            tensor<fp16, []> dy_3_cast = add(x = var_53_cast, y = var_52_to_fp16);
            tensor<bool, []> s_1_keep_dims_0 = const()[name = tensor<string, []>("s_1_keep_dims_0"), val = tensor<bool, []>(false)];
            tensor<fp16, []> s_1_cast = reduce_min(keep_dims = s_1_keep_dims_0, x = scale_3_cast);
            tensor<fp16, []> var_10_promoted = const()[name = tensor<string, []>("op_10_promoted"), val = tensor<fp16, []>(-0x1p+1)];
            tensor<fp16, []> var_56_cast = mul(x = dx_3_cast, y = var_10_promoted);
            tensor<fp16, []> _inversed_px_1_y_0_to_fp16 = const()[name = tensor<string, []>("_inversed_px_1_y_0_to_fp16"), val = tensor<fp16, []>(0x1.11p-9)];
            tensor<fp16, []> _inversed_px_1_cast = mul(x = var_56_cast, y = _inversed_px_1_y_0_to_fp16);
            tensor<fp16, []> var_10_promoted_0 = const()[name = tensor<string, []>("op_10_promoted_0"), val = tensor<fp16, []>(-0x1p+1)];
            tensor<fp16, []> var_58_cast = mul(x = dy_3_cast, y = var_10_promoted_0);
            tensor<fp16, []> _inversed_py_1_y_0_to_fp16 = const()[name = tensor<string, []>("_inversed_py_1_y_0_to_fp16"), val = tensor<fp16, []>(0x1.998p-10)];
            tensor<fp16, []> _inversed_py_1_cast = mul(x = var_58_cast, y = _inversed_py_1_y_0_to_fp16);
            tensor<fp16, []> var_61_to_fp16 = const()[name = tensor<string, []>("op_61_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, [3]> top_row_1_cast = stack(axis = var_21, values = (s_1_cast, var_61_to_fp16, _inversed_px_1_cast));
            tensor<fp16, []> var_65_to_fp16 = const()[name = tensor<string, []>("op_65_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, [3]> bottom_row_1_cast = stack(axis = var_21, values = (var_65_to_fp16, s_1_cast, _inversed_py_1_cast));
            tensor<fp16, [2, 3]> T_cast = stack(axis = var_21, values = (top_row_1_cast, bottom_row_1_cast));
            tensor<int32, [1]> theta_axes_0 = const()[name = tensor<string, []>("theta_axes_0"), val = tensor<int32, [1]>([0])];
            tensor<fp16, [1, 2, 3]> theta_cast = expand_dims(axes = theta_axes_0, x = T_cast);
            tensor<int32, [1]> img_5_axes_0 = const()[name = tensor<string, []>("img_5_axes_0"), val = tensor<int32, [1]>([0])];
            tensor<fp16, [1, 3, 640, 480]> img_5_cast = expand_dims(axes = img_5_axes_0, x = var_22_cast);
            tensor<int32, [2]> var_78_theta_reshape_shape_0 = const()[name = tensor<string, []>("op_78_theta_reshape_shape_0"), val = tensor<int32, [2]>([-1, 6])];
            tensor<fp16, [1, 6]> var_78_theta_reshape_cast = reshape(shape = var_78_theta_reshape_shape_0, x = theta_cast);
            tensor<int32, []> var_78_output_height_0 = const()[name = tensor<string, []>("op_78_output_height_0"), val = tensor<int32, []>(640)];
            tensor<int32, []> var_78_output_width_0 = const()[name = tensor<string, []>("op_78_output_width_0"), val = tensor<int32, []>(480)];
            tensor<string, []> var_78_sampling_mode_0 = const()[name = tensor<string, []>("op_78_sampling_mode_0"), val = tensor<string, []>("bilinear")];
            tensor<string, []> var_78_padding_mode_0 = const()[name = tensor<string, []>("op_78_padding_mode_0"), val = tensor<string, []>("constant")];
            tensor<string, []> var_78_coordinates_mode_0 = const()[name = tensor<string, []>("op_78_coordinates_mode_0"), val = tensor<string, []>("normalized_minus_one_to_one")];
            tensor<bool, []> var_78_align_corners_0 = const()[name = tensor<string, []>("op_78_align_corners_0"), val = tensor<bool, []>(false)];
            tensor<fp16, []> var_78_padding_value_0_to_fp16 = const()[name = tensor<string, []>("op_78_padding_value_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, [1, 3, 640, 480]> var_78_cast = affine(align_corners = var_78_align_corners_0, coordinates_mode = var_78_coordinates_mode_0, output_height = var_78_output_height_0, output_width = var_78_output_width_0, padding_mode = var_78_padding_mode_0, padding_value = var_78_padding_value_0_to_fp16, sampling_mode = var_78_sampling_mode_0, transform_matrix = var_78_theta_reshape_cast, x = img_5_cast);
            tensor<int32, [1]> result_1_axes_0 = const()[name = tensor<string, []>("result_1_axes_0"), val = tensor<int32, [1]>([0])];
            tensor<fp16, [3, 640, 480]> result_1_cast = squeeze(axes = result_1_axes_0, x = var_78_cast);
            tensor<int32, [3]> var_105_begin_0 = const()[name = tensor<string, []>("op_105_begin_0"), val = tensor<int32, [3]>([0, 192, 0])];
            tensor<int32, [3]> var_105_end_0 = const()[name = tensor<string, []>("op_105_end_0"), val = tensor<int32, [3]>([3, 448, 480])];
            tensor<bool, [3]> var_105_end_mask_0 = const()[name = tensor<string, []>("op_105_end_mask_0"), val = tensor<bool, [3]>([true, false, true])];
            tensor<fp16, [3, 256, 480]> var_105_cast = slice_by_index(begin = var_105_begin_0, end = var_105_end_0, end_mask = var_105_end_mask_0, x = result_1_cast);
            tensor<int32, [3]> result_begin_0 = const()[name = tensor<string, []>("result_begin_0"), val = tensor<int32, [3]>([0, 0, 144])];
            tensor<int32, [3]> result_end_0 = const()[name = tensor<string, []>("result_end_0"), val = tensor<int32, [3]>([3, 256, 336])];
            tensor<bool, [3]> result_end_mask_0 = const()[name = tensor<string, []>("result_end_mask_0"), val = tensor<bool, [3]>([true, true, false])];
            tensor<fp16, [3, 256, 192]> result_cast = slice_by_index(begin = result_begin_0, end = result_end_0, end_mask = result_end_mask_0, x = var_105_cast);
            tensor<int32, [1]> var_107 = const()[name = tensor<string, []>("op_107"), val = tensor<int32, [1]>([0])];
            tensor<fp16, [3, 256, 192]> img_cast = reverse(axes = var_107, x = result_cast);
            tensor<fp16, []> _inversed_tensor_1_y_0_to_fp16 = const()[name = tensor<string, []>("_inversed_tensor_1_y_0_to_fp16"), val = tensor<fp16, []>(0x1.01p-8)];
            tensor<fp16, [3, 256, 192]> _inversed_tensor_1_cast = mul(x = img_cast, y = _inversed_tensor_1_y_0_to_fp16);
            tensor<fp16, [3, 1, 1]> mean_to_fp16 = const()[name = tensor<string, []>("mean_to_fp16"), val = tensor<fp16, [3, 1, 1]>([[[0x1.f0cp-2]], [[0x1.d3p-2]], [[0x1.9fcp-2]]])];
            tensor<fp16, [3, 256, 192]> tensor_cast = sub(x = _inversed_tensor_1_cast, y = mean_to_fp16);
            tensor<fp16, [3, 1, 1]> _inversed_feats_1_y_0_to_fp16 = const()[name = tensor<string, []>("_inversed_feats_1_y_0_to_fp16"), val = tensor<fp16, [3, 1, 1]>([[[0x1.178p+2]], [[0x1.1dcp+2]], [[0x1.1c8p+2]]])];
            tensor<fp16, [3, 256, 192]> _inversed_feats_1_cast = mul(x = tensor_cast, y = _inversed_feats_1_y_0_to_fp16);
            tensor<int32, [1]> feats_axes_0 = const()[name = tensor<string, []>("feats_axes_0"), val = tensor<int32, [1]>([0])];
            tensor<fp16, [1, 3, 256, 192]> feats_cast = expand_dims(axes = feats_axes_0, x = _inversed_feats_1_cast);
            tensor<int32, [1]> scale_axes_0 = const()[name = tensor<string, []>("scale_axes_0"), val = tensor<int32, [1]>([0])];
            tensor<fp16, [1, 2]> scale_cast = expand_dims(axes = scale_axes_0, x = scale_3_cast);
            tensor<int32, []> var_133 = const()[name = tensor<string, []>("op_133"), val = tensor<int32, []>(1)];
            tensor<int32, []> var_135 = const()[name = tensor<string, []>("op_135"), val = tensor<int32, []>(2)];
            tensor<int32, []> var_137 = const()[name = tensor<string, []>("op_137"), val = tensor<int32, []>(16)];
            tensor<int32, [2]> var_151 = const()[name = tensor<string, []>("op_151"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_153 = const()[name = tensor<string, []>("op_153"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_1_pad_type_0 = const()[name = tensor<string, []>("input_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_1_pad_0 = const()[name = tensor<string, []>("input_1_pad_0"), val = tensor<int32, [4]>([3, 3, 3, 3])];
            tensor<fp16, [48, 3, 7, 7]> pose_model_backbone_conv1_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_conv1_weight_to_fp16"), val = tensor<fp16, [48, 3, 7, 7]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(64)))];
            tensor<fp16, [48]> pose_model_backbone_conv1_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_conv1_bias_to_fp16"), val = tensor<fp16, [48]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14272)))];
            tensor<fp16, [1, 48, 128, 96]> input_1_cast = conv(bias = pose_model_backbone_conv1_bias_to_fp16, dilations = var_153, groups = var_133, pad = input_1_pad_0, pad_type = input_1_pad_type_0, strides = var_151, weight = pose_model_backbone_conv1_weight_to_fp16, x = feats_cast);
            tensor<fp16, [1, 48, 128, 96]> input_3_cast = relu(x = input_1_cast);
            tensor<int32, [2]> var_157 = const()[name = tensor<string, []>("op_157"), val = tensor<int32, [2]>([3, 3])];
            tensor<int32, [2]> var_158 = const()[name = tensor<string, []>("op_158"), val = tensor<int32, [2]>([2, 2])];
            tensor<string, []> input_5_pad_type_0 = const()[name = tensor<string, []>("input_5_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_5_pad_0 = const()[name = tensor<string, []>("input_5_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<bool, []> input_5_ceil_mode_0 = const()[name = tensor<string, []>("input_5_ceil_mode_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 48, 64, 48]> input_5_cast = max_pool(ceil_mode = input_5_ceil_mode_0, kernel_sizes = var_157, pad = input_5_pad_0, pad_type = input_5_pad_type_0, strides = var_158, x = input_3_cast);
            tensor<int32, [2]> var_173 = const()[name = tensor<string, []>("op_173"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_175 = const()[name = tensor<string, []>("op_175"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_7_pad_type_0 = const()[name = tensor<string, []>("input_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_7_pad_0 = const()[name = tensor<string, []>("input_7_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [80, 48, 1, 1]> pose_model_backbone_layer1_0_conv1_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer1_0_conv1_weight_to_fp16"), val = tensor<fp16, [80, 48, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14464)))];
            tensor<fp16, [80]> pose_model_backbone_layer1_0_conv1_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer1_0_conv1_bias_to_fp16"), val = tensor<fp16, [80]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(22208)))];
            tensor<fp16, [1, 80, 64, 48]> input_7_cast = conv(bias = pose_model_backbone_layer1_0_conv1_bias_to_fp16, dilations = var_175, groups = var_133, pad = input_7_pad_0, pad_type = input_7_pad_type_0, strides = var_173, weight = pose_model_backbone_layer1_0_conv1_weight_to_fp16, x = input_5_cast);
            tensor<fp16, [1, 80, 64, 48]> input_9_cast = relu(x = input_7_cast);
            tensor<int32, [2]> var_181 = const()[name = tensor<string, []>("op_181"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_183 = const()[name = tensor<string, []>("op_183"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_11_pad_type_0 = const()[name = tensor<string, []>("input_11_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_11_pad_0 = const()[name = tensor<string, []>("input_11_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [80, 5, 3, 3]> pose_model_backbone_layer1_0_conv2_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer1_0_conv2_weight_to_fp16"), val = tensor<fp16, [80, 5, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(22464)))];
            tensor<fp16, [80]> pose_model_backbone_layer1_0_conv2_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer1_0_conv2_bias_to_fp16"), val = tensor<fp16, [80]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(29760)))];
            tensor<fp16, [1, 80, 64, 48]> input_11_cast = conv(bias = pose_model_backbone_layer1_0_conv2_bias_to_fp16, dilations = var_183, groups = var_137, pad = input_11_pad_0, pad_type = input_11_pad_type_0, strides = var_181, weight = pose_model_backbone_layer1_0_conv2_weight_to_fp16, x = input_9_cast);
            tensor<fp16, [1, 80, 64, 48]> input_13_cast = relu(x = input_11_cast);
            tensor<int32, [2]> var_189 = const()[name = tensor<string, []>("op_189"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_191 = const()[name = tensor<string, []>("op_191"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_1_pad_type_0 = const()[name = tensor<string, []>("x_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_1_pad_0 = const()[name = tensor<string, []>("x_1_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [80, 80, 1, 1]> pose_model_backbone_layer1_0_conv3_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer1_0_conv3_weight_to_fp16"), val = tensor<fp16, [80, 80, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(30016)))];
            tensor<fp16, [80]> pose_model_backbone_layer1_0_conv3_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer1_0_conv3_bias_to_fp16"), val = tensor<fp16, [80]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(42880)))];
            tensor<fp16, [1, 80, 64, 48]> x_1_cast = conv(bias = pose_model_backbone_layer1_0_conv3_bias_to_fp16, dilations = var_191, groups = var_133, pad = x_1_pad_0, pad_type = x_1_pad_type_0, strides = var_189, weight = pose_model_backbone_layer1_0_conv3_weight_to_fp16, x = input_13_cast);
            tensor<int32, [3]> var_204 = const()[name = tensor<string, []>("op_204"), val = tensor<int32, [3]>([1, 80, 3072])];
            tensor<fp16, [1, 80, 3072]> input_x_1_cast = reshape(shape = var_204, x = x_1_cast);
            tensor<int32, [1]> input_x_3_axes_0 = const()[name = tensor<string, []>("input_x_3_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 80, 3072]> input_x_3_cast = expand_dims(axes = input_x_3_axes_0, x = input_x_1_cast);
            tensor<int32, [2]> var_209 = const()[name = tensor<string, []>("op_209"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_211 = const()[name = tensor<string, []>("op_211"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> context_mask_1_pad_type_0 = const()[name = tensor<string, []>("context_mask_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> context_mask_1_pad_0 = const()[name = tensor<string, []>("context_mask_1_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1, 80, 1, 1]> pose_model_backbone_layer1_0_attention_conv_mask_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer1_0_attention_conv_mask_weight_to_fp16"), val = tensor<fp16, [1, 80, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(43136)))];
            tensor<fp16, [1]> pose_model_backbone_layer1_0_attention_conv_mask_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer1_0_attention_conv_mask_bias_to_fp16"), val = tensor<fp16, [1]>([-0x1.8p-23])];
            tensor<fp16, [1, 1, 64, 48]> context_mask_1_cast = conv(bias = pose_model_backbone_layer1_0_attention_conv_mask_bias_to_fp16, dilations = var_211, groups = var_133, pad = context_mask_1_pad_0, pad_type = context_mask_1_pad_type_0, strides = var_209, weight = pose_model_backbone_layer1_0_attention_conv_mask_weight_to_fp16, x = x_1_cast);
            tensor<int32, [3]> var_216 = const()[name = tensor<string, []>("op_216"), val = tensor<int32, [3]>([1, 1, 3072])];
            tensor<fp16, [1, 1, 3072]> input_15_cast = reshape(shape = var_216, x = context_mask_1_cast);
            tensor<fp16, [1, 1, 3072]> context_mask_3_cast = softmax(axis = var_135, x = input_15_cast);
            tensor<int32, [1]> context_mask_5_axes_0 = const()[name = tensor<string, []>("context_mask_5_axes_0"), val = tensor<int32, [1]>([-1])];
            tensor<fp16, [1, 1, 3072, 1]> context_mask_5_cast = expand_dims(axes = context_mask_5_axes_0, x = context_mask_3_cast);
            tensor<bool, []> context_1_transpose_x_0 = const()[name = tensor<string, []>("context_1_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> context_1_transpose_y_0 = const()[name = tensor<string, []>("context_1_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1, 80, 1]> context_1_cast = matmul(transpose_x = context_1_transpose_x_0, transpose_y = context_1_transpose_y_0, x = input_x_3_cast, y = context_mask_5_cast);
            tensor<int32, [4]> var_221 = const()[name = tensor<string, []>("op_221"), val = tensor<int32, [4]>([1, 80, 1, 1])];
            tensor<fp16, [1, 80, 1, 1]> input_17_cast = reshape(shape = var_221, x = context_1_cast);
            tensor<int32, [2]> var_228 = const()[name = tensor<string, []>("op_228"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_230 = const()[name = tensor<string, []>("op_230"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_19_pad_type_0 = const()[name = tensor<string, []>("input_19_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_19_pad_0 = const()[name = tensor<string, []>("input_19_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [16, 80, 1, 1]> pose_model_backbone_layer1_0_attention_channel_add_conv_0_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer1_0_attention_channel_add_conv_0_weight_to_fp16"), val = tensor<fp16, [16, 80, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(43392)))];
            tensor<fp16, [16]> pose_model_backbone_layer1_0_attention_channel_add_conv_0_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer1_0_attention_channel_add_conv_0_bias_to_fp16"), val = tensor<fp16, [16]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(46016)))];
            tensor<fp16, [1, 16, 1, 1]> input_19_cast = conv(bias = pose_model_backbone_layer1_0_attention_channel_add_conv_0_bias_to_fp16, dilations = var_230, groups = var_133, pad = input_19_pad_0, pad_type = input_19_pad_type_0, strides = var_228, weight = pose_model_backbone_layer1_0_attention_channel_add_conv_0_weight_to_fp16, x = input_17_cast);
            tensor<int32, [3]> input_21_axes_0 = const()[name = tensor<string, []>("input_21_axes_0"), val = tensor<int32, [3]>([-3, -2, -1])];
            tensor<fp16, [16, 1, 1]> pose_model_backbone_layer1_0_attention_channel_add_conv_1_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer1_0_attention_channel_add_conv_1_weight_to_fp16"), val = tensor<fp16, [16, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(46144)))];
            tensor<fp16, [16, 1, 1]> pose_model_backbone_layer1_0_attention_channel_add_conv_1_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer1_0_attention_channel_add_conv_1_bias_to_fp16"), val = tensor<fp16, [16, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(46272)))];
            tensor<fp16, []> var_138_to_fp16 = const()[name = tensor<string, []>("op_138_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 16, 1, 1]> input_21_cast = layer_norm(axes = input_21_axes_0, beta = pose_model_backbone_layer1_0_attention_channel_add_conv_1_bias_to_fp16, epsilon = var_138_to_fp16, gamma = pose_model_backbone_layer1_0_attention_channel_add_conv_1_weight_to_fp16, x = input_19_cast);
            tensor<fp16, [1, 16, 1, 1]> input_23_cast = relu(x = input_21_cast);
            tensor<int32, [2]> var_240 = const()[name = tensor<string, []>("op_240"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_242 = const()[name = tensor<string, []>("op_242"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> channel_add_term_1_pad_type_0 = const()[name = tensor<string, []>("channel_add_term_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> channel_add_term_1_pad_0 = const()[name = tensor<string, []>("channel_add_term_1_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [80, 16, 1, 1]> pose_model_backbone_layer1_0_attention_channel_add_conv_3_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer1_0_attention_channel_add_conv_3_weight_to_fp16"), val = tensor<fp16, [80, 16, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(46400)))];
            tensor<fp16, [80]> pose_model_backbone_layer1_0_attention_channel_add_conv_3_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer1_0_attention_channel_add_conv_3_bias_to_fp16"), val = tensor<fp16, [80]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(49024)))];
            tensor<fp16, [1, 80, 1, 1]> channel_add_term_1_cast = conv(bias = pose_model_backbone_layer1_0_attention_channel_add_conv_3_bias_to_fp16, dilations = var_242, groups = var_133, pad = channel_add_term_1_pad_0, pad_type = channel_add_term_1_pad_type_0, strides = var_240, weight = pose_model_backbone_layer1_0_attention_channel_add_conv_3_weight_to_fp16, x = input_23_cast);
            tensor<fp16, [1, 80, 64, 48]> out_1_cast = add(x = x_1_cast, y = channel_add_term_1_cast);
            tensor<int32, [2]> var_249 = const()[name = tensor<string, []>("op_249"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_251 = const()[name = tensor<string, []>("op_251"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> identity_1_pad_type_0 = const()[name = tensor<string, []>("identity_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> identity_1_pad_0 = const()[name = tensor<string, []>("identity_1_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [80, 48, 1, 1]> pose_model_backbone_layer1_0_downsample_0_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer1_0_downsample_0_weight_to_fp16"), val = tensor<fp16, [80, 48, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(49280)))];
            tensor<fp16, [80]> pose_model_backbone_layer1_0_downsample_0_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer1_0_downsample_0_bias_to_fp16"), val = tensor<fp16, [80]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(57024)))];
            tensor<fp16, [1, 80, 64, 48]> identity_1_cast = conv(bias = pose_model_backbone_layer1_0_downsample_0_bias_to_fp16, dilations = var_251, groups = var_133, pad = identity_1_pad_0, pad_type = identity_1_pad_type_0, strides = var_249, weight = pose_model_backbone_layer1_0_downsample_0_weight_to_fp16, x = input_5_cast);
            tensor<fp16, [1, 80, 64, 48]> input_25_cast = add(x = out_1_cast, y = identity_1_cast);
            tensor<fp16, [1, 80, 64, 48]> input_27_cast = relu(x = input_25_cast);
            tensor<int32, [2]> var_262 = const()[name = tensor<string, []>("op_262"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_264 = const()[name = tensor<string, []>("op_264"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_29_pad_type_0 = const()[name = tensor<string, []>("input_29_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_29_pad_0 = const()[name = tensor<string, []>("input_29_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [80, 80, 1, 1]> pose_model_backbone_layer1_1_conv1_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer1_1_conv1_weight_to_fp16"), val = tensor<fp16, [80, 80, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(57280)))];
            tensor<fp16, [80]> pose_model_backbone_layer1_1_conv1_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer1_1_conv1_bias_to_fp16"), val = tensor<fp16, [80]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(70144)))];
            tensor<fp16, [1, 80, 64, 48]> input_29_cast = conv(bias = pose_model_backbone_layer1_1_conv1_bias_to_fp16, dilations = var_264, groups = var_133, pad = input_29_pad_0, pad_type = input_29_pad_type_0, strides = var_262, weight = pose_model_backbone_layer1_1_conv1_weight_to_fp16, x = input_27_cast);
            tensor<fp16, [1, 80, 64, 48]> input_31_cast = relu(x = input_29_cast);
            tensor<int32, [2]> var_270 = const()[name = tensor<string, []>("op_270"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_272 = const()[name = tensor<string, []>("op_272"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_33_pad_type_0 = const()[name = tensor<string, []>("input_33_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_33_pad_0 = const()[name = tensor<string, []>("input_33_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [80, 5, 3, 3]> pose_model_backbone_layer1_1_conv2_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer1_1_conv2_weight_to_fp16"), val = tensor<fp16, [80, 5, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(70400)))];
            tensor<fp16, [80]> pose_model_backbone_layer1_1_conv2_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer1_1_conv2_bias_to_fp16"), val = tensor<fp16, [80]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(77696)))];
            tensor<fp16, [1, 80, 64, 48]> input_33_cast = conv(bias = pose_model_backbone_layer1_1_conv2_bias_to_fp16, dilations = var_272, groups = var_137, pad = input_33_pad_0, pad_type = input_33_pad_type_0, strides = var_270, weight = pose_model_backbone_layer1_1_conv2_weight_to_fp16, x = input_31_cast);
            tensor<fp16, [1, 80, 64, 48]> input_35_cast = relu(x = input_33_cast);
            tensor<int32, [2]> var_278 = const()[name = tensor<string, []>("op_278"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_280 = const()[name = tensor<string, []>("op_280"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_3_pad_type_0 = const()[name = tensor<string, []>("x_3_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_3_pad_0 = const()[name = tensor<string, []>("x_3_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [80, 80, 1, 1]> pose_model_backbone_layer1_1_conv3_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer1_1_conv3_weight_to_fp16"), val = tensor<fp16, [80, 80, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(77952)))];
            tensor<fp16, [80]> pose_model_backbone_layer1_1_conv3_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer1_1_conv3_bias_to_fp16"), val = tensor<fp16, [80]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(90816)))];
            tensor<fp16, [1, 80, 64, 48]> x_3_cast = conv(bias = pose_model_backbone_layer1_1_conv3_bias_to_fp16, dilations = var_280, groups = var_133, pad = x_3_pad_0, pad_type = x_3_pad_type_0, strides = var_278, weight = pose_model_backbone_layer1_1_conv3_weight_to_fp16, x = input_35_cast);
            tensor<int32, [3]> var_293 = const()[name = tensor<string, []>("op_293"), val = tensor<int32, [3]>([1, 80, 3072])];
            tensor<fp16, [1, 80, 3072]> input_x_5_cast = reshape(shape = var_293, x = x_3_cast);
            tensor<int32, [1]> input_x_7_axes_0 = const()[name = tensor<string, []>("input_x_7_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 80, 3072]> input_x_7_cast = expand_dims(axes = input_x_7_axes_0, x = input_x_5_cast);
            tensor<int32, [2]> var_298 = const()[name = tensor<string, []>("op_298"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_300 = const()[name = tensor<string, []>("op_300"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> context_mask_7_pad_type_0 = const()[name = tensor<string, []>("context_mask_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> context_mask_7_pad_0 = const()[name = tensor<string, []>("context_mask_7_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1, 80, 1, 1]> pose_model_backbone_layer1_1_attention_conv_mask_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer1_1_attention_conv_mask_weight_to_fp16"), val = tensor<fp16, [1, 80, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(91072)))];
            tensor<fp16, [1]> pose_model_backbone_layer1_1_attention_conv_mask_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer1_1_attention_conv_mask_bias_to_fp16"), val = tensor<fp16, [1]>([-0x1.7p-20])];
            tensor<fp16, [1, 1, 64, 48]> context_mask_7_cast = conv(bias = pose_model_backbone_layer1_1_attention_conv_mask_bias_to_fp16, dilations = var_300, groups = var_133, pad = context_mask_7_pad_0, pad_type = context_mask_7_pad_type_0, strides = var_298, weight = pose_model_backbone_layer1_1_attention_conv_mask_weight_to_fp16, x = x_3_cast);
            tensor<int32, [3]> var_305 = const()[name = tensor<string, []>("op_305"), val = tensor<int32, [3]>([1, 1, 3072])];
            tensor<fp16, [1, 1, 3072]> input_37_cast = reshape(shape = var_305, x = context_mask_7_cast);
            tensor<fp16, [1, 1, 3072]> context_mask_9_cast = softmax(axis = var_135, x = input_37_cast);
            tensor<int32, [1]> context_mask_11_axes_0 = const()[name = tensor<string, []>("context_mask_11_axes_0"), val = tensor<int32, [1]>([-1])];
            tensor<fp16, [1, 1, 3072, 1]> context_mask_11_cast = expand_dims(axes = context_mask_11_axes_0, x = context_mask_9_cast);
            tensor<bool, []> context_3_transpose_x_0 = const()[name = tensor<string, []>("context_3_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> context_3_transpose_y_0 = const()[name = tensor<string, []>("context_3_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1, 80, 1]> context_3_cast = matmul(transpose_x = context_3_transpose_x_0, transpose_y = context_3_transpose_y_0, x = input_x_7_cast, y = context_mask_11_cast);
            tensor<int32, [4]> var_310 = const()[name = tensor<string, []>("op_310"), val = tensor<int32, [4]>([1, 80, 1, 1])];
            tensor<fp16, [1, 80, 1, 1]> input_39_cast = reshape(shape = var_310, x = context_3_cast);
            tensor<int32, [2]> var_317 = const()[name = tensor<string, []>("op_317"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_319 = const()[name = tensor<string, []>("op_319"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_41_pad_type_0 = const()[name = tensor<string, []>("input_41_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_41_pad_0 = const()[name = tensor<string, []>("input_41_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [16, 80, 1, 1]> pose_model_backbone_layer1_1_attention_channel_add_conv_0_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer1_1_attention_channel_add_conv_0_weight_to_fp16"), val = tensor<fp16, [16, 80, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(91328)))];
            tensor<fp16, [16]> pose_model_backbone_layer1_1_attention_channel_add_conv_0_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer1_1_attention_channel_add_conv_0_bias_to_fp16"), val = tensor<fp16, [16]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(93952)))];
            tensor<fp16, [1, 16, 1, 1]> input_41_cast = conv(bias = pose_model_backbone_layer1_1_attention_channel_add_conv_0_bias_to_fp16, dilations = var_319, groups = var_133, pad = input_41_pad_0, pad_type = input_41_pad_type_0, strides = var_317, weight = pose_model_backbone_layer1_1_attention_channel_add_conv_0_weight_to_fp16, x = input_39_cast);
            tensor<int32, [3]> input_43_axes_0 = const()[name = tensor<string, []>("input_43_axes_0"), val = tensor<int32, [3]>([-3, -2, -1])];
            tensor<fp16, [16, 1, 1]> pose_model_backbone_layer1_1_attention_channel_add_conv_1_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer1_1_attention_channel_add_conv_1_weight_to_fp16"), val = tensor<fp16, [16, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(94080)))];
            tensor<fp16, [16, 1, 1]> pose_model_backbone_layer1_1_attention_channel_add_conv_1_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer1_1_attention_channel_add_conv_1_bias_to_fp16"), val = tensor<fp16, [16, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(94208)))];
            tensor<fp16, [1, 16, 1, 1]> input_43_cast = layer_norm(axes = input_43_axes_0, beta = pose_model_backbone_layer1_1_attention_channel_add_conv_1_bias_to_fp16, epsilon = var_138_to_fp16, gamma = pose_model_backbone_layer1_1_attention_channel_add_conv_1_weight_to_fp16, x = input_41_cast);
            tensor<fp16, [1, 16, 1, 1]> input_45_cast = relu(x = input_43_cast);
            tensor<int32, [2]> var_329 = const()[name = tensor<string, []>("op_329"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_331 = const()[name = tensor<string, []>("op_331"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> channel_add_term_3_pad_type_0 = const()[name = tensor<string, []>("channel_add_term_3_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> channel_add_term_3_pad_0 = const()[name = tensor<string, []>("channel_add_term_3_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [80, 16, 1, 1]> pose_model_backbone_layer1_1_attention_channel_add_conv_3_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer1_1_attention_channel_add_conv_3_weight_to_fp16"), val = tensor<fp16, [80, 16, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(94336)))];
            tensor<fp16, [80]> pose_model_backbone_layer1_1_attention_channel_add_conv_3_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer1_1_attention_channel_add_conv_3_bias_to_fp16"), val = tensor<fp16, [80]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(96960)))];
            tensor<fp16, [1, 80, 1, 1]> channel_add_term_3_cast = conv(bias = pose_model_backbone_layer1_1_attention_channel_add_conv_3_bias_to_fp16, dilations = var_331, groups = var_133, pad = channel_add_term_3_pad_0, pad_type = channel_add_term_3_pad_type_0, strides = var_329, weight = pose_model_backbone_layer1_1_attention_channel_add_conv_3_weight_to_fp16, x = input_45_cast);
            tensor<fp16, [1, 80, 64, 48]> out_3_cast = add(x = x_3_cast, y = channel_add_term_3_cast);
            tensor<fp16, [1, 80, 64, 48]> input_47_cast = add(x = out_3_cast, y = input_27_cast);
            tensor<fp16, [1, 80, 64, 48]> input_49_cast = relu(x = input_47_cast);
            tensor<int32, [2]> var_343 = const()[name = tensor<string, []>("op_343"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_345 = const()[name = tensor<string, []>("op_345"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_51_pad_type_0 = const()[name = tensor<string, []>("input_51_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_51_pad_0 = const()[name = tensor<string, []>("input_51_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [80, 80, 1, 1]> pose_model_backbone_layer1_2_conv1_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer1_2_conv1_weight_to_fp16"), val = tensor<fp16, [80, 80, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(97216)))];
            tensor<fp16, [80]> pose_model_backbone_layer1_2_conv1_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer1_2_conv1_bias_to_fp16"), val = tensor<fp16, [80]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(110080)))];
            tensor<fp16, [1, 80, 64, 48]> input_51_cast = conv(bias = pose_model_backbone_layer1_2_conv1_bias_to_fp16, dilations = var_345, groups = var_133, pad = input_51_pad_0, pad_type = input_51_pad_type_0, strides = var_343, weight = pose_model_backbone_layer1_2_conv1_weight_to_fp16, x = input_49_cast);
            tensor<fp16, [1, 80, 64, 48]> input_53_cast = relu(x = input_51_cast);
            tensor<int32, [2]> var_351 = const()[name = tensor<string, []>("op_351"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_353 = const()[name = tensor<string, []>("op_353"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_55_pad_type_0 = const()[name = tensor<string, []>("input_55_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_55_pad_0 = const()[name = tensor<string, []>("input_55_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [80, 5, 3, 3]> pose_model_backbone_layer1_2_conv2_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer1_2_conv2_weight_to_fp16"), val = tensor<fp16, [80, 5, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(110336)))];
            tensor<fp16, [80]> pose_model_backbone_layer1_2_conv2_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer1_2_conv2_bias_to_fp16"), val = tensor<fp16, [80]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(117632)))];
            tensor<fp16, [1, 80, 64, 48]> input_55_cast = conv(bias = pose_model_backbone_layer1_2_conv2_bias_to_fp16, dilations = var_353, groups = var_137, pad = input_55_pad_0, pad_type = input_55_pad_type_0, strides = var_351, weight = pose_model_backbone_layer1_2_conv2_weight_to_fp16, x = input_53_cast);
            tensor<fp16, [1, 80, 64, 48]> input_57_cast = relu(x = input_55_cast);
            tensor<int32, [2]> var_359 = const()[name = tensor<string, []>("op_359"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_361 = const()[name = tensor<string, []>("op_361"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_5_pad_type_0 = const()[name = tensor<string, []>("x_5_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_5_pad_0 = const()[name = tensor<string, []>("x_5_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [80, 80, 1, 1]> pose_model_backbone_layer1_2_conv3_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer1_2_conv3_weight_to_fp16"), val = tensor<fp16, [80, 80, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(117888)))];
            tensor<fp16, [80]> pose_model_backbone_layer1_2_conv3_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer1_2_conv3_bias_to_fp16"), val = tensor<fp16, [80]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(130752)))];
            tensor<fp16, [1, 80, 64, 48]> x_5_cast = conv(bias = pose_model_backbone_layer1_2_conv3_bias_to_fp16, dilations = var_361, groups = var_133, pad = x_5_pad_0, pad_type = x_5_pad_type_0, strides = var_359, weight = pose_model_backbone_layer1_2_conv3_weight_to_fp16, x = input_57_cast);
            tensor<int32, [3]> var_374 = const()[name = tensor<string, []>("op_374"), val = tensor<int32, [3]>([1, 80, 3072])];
            tensor<fp16, [1, 80, 3072]> input_x_9_cast = reshape(shape = var_374, x = x_5_cast);
            tensor<int32, [1]> input_x_11_axes_0 = const()[name = tensor<string, []>("input_x_11_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 80, 3072]> input_x_11_cast = expand_dims(axes = input_x_11_axes_0, x = input_x_9_cast);
            tensor<int32, [2]> var_379 = const()[name = tensor<string, []>("op_379"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_381 = const()[name = tensor<string, []>("op_381"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> context_mask_13_pad_type_0 = const()[name = tensor<string, []>("context_mask_13_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> context_mask_13_pad_0 = const()[name = tensor<string, []>("context_mask_13_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1, 80, 1, 1]> pose_model_backbone_layer1_2_attention_conv_mask_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer1_2_attention_conv_mask_weight_to_fp16"), val = tensor<fp16, [1, 80, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(131008)))];
            tensor<fp16, [1]> pose_model_backbone_layer1_2_attention_conv_mask_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer1_2_attention_conv_mask_bias_to_fp16"), val = tensor<fp16, [1]>([-0x1.c8p-19])];
            tensor<fp16, [1, 1, 64, 48]> context_mask_13_cast = conv(bias = pose_model_backbone_layer1_2_attention_conv_mask_bias_to_fp16, dilations = var_381, groups = var_133, pad = context_mask_13_pad_0, pad_type = context_mask_13_pad_type_0, strides = var_379, weight = pose_model_backbone_layer1_2_attention_conv_mask_weight_to_fp16, x = x_5_cast);
            tensor<int32, [3]> var_386 = const()[name = tensor<string, []>("op_386"), val = tensor<int32, [3]>([1, 1, 3072])];
            tensor<fp16, [1, 1, 3072]> input_59_cast = reshape(shape = var_386, x = context_mask_13_cast);
            tensor<fp16, [1, 1, 3072]> context_mask_15_cast = softmax(axis = var_135, x = input_59_cast);
            tensor<int32, [1]> context_mask_17_axes_0 = const()[name = tensor<string, []>("context_mask_17_axes_0"), val = tensor<int32, [1]>([-1])];
            tensor<fp16, [1, 1, 3072, 1]> context_mask_17_cast = expand_dims(axes = context_mask_17_axes_0, x = context_mask_15_cast);
            tensor<bool, []> context_5_transpose_x_0 = const()[name = tensor<string, []>("context_5_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> context_5_transpose_y_0 = const()[name = tensor<string, []>("context_5_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1, 80, 1]> context_5_cast = matmul(transpose_x = context_5_transpose_x_0, transpose_y = context_5_transpose_y_0, x = input_x_11_cast, y = context_mask_17_cast);
            tensor<int32, [4]> var_391 = const()[name = tensor<string, []>("op_391"), val = tensor<int32, [4]>([1, 80, 1, 1])];
            tensor<fp16, [1, 80, 1, 1]> input_61_cast = reshape(shape = var_391, x = context_5_cast);
            tensor<int32, [2]> var_398 = const()[name = tensor<string, []>("op_398"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_400 = const()[name = tensor<string, []>("op_400"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_63_pad_type_0 = const()[name = tensor<string, []>("input_63_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_63_pad_0 = const()[name = tensor<string, []>("input_63_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [16, 80, 1, 1]> pose_model_backbone_layer1_2_attention_channel_add_conv_0_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer1_2_attention_channel_add_conv_0_weight_to_fp16"), val = tensor<fp16, [16, 80, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(131264)))];
            tensor<fp16, [16]> pose_model_backbone_layer1_2_attention_channel_add_conv_0_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer1_2_attention_channel_add_conv_0_bias_to_fp16"), val = tensor<fp16, [16]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(133888)))];
            tensor<fp16, [1, 16, 1, 1]> input_63_cast = conv(bias = pose_model_backbone_layer1_2_attention_channel_add_conv_0_bias_to_fp16, dilations = var_400, groups = var_133, pad = input_63_pad_0, pad_type = input_63_pad_type_0, strides = var_398, weight = pose_model_backbone_layer1_2_attention_channel_add_conv_0_weight_to_fp16, x = input_61_cast);
            tensor<int32, [3]> input_65_axes_0 = const()[name = tensor<string, []>("input_65_axes_0"), val = tensor<int32, [3]>([-3, -2, -1])];
            tensor<fp16, [16, 1, 1]> pose_model_backbone_layer1_2_attention_channel_add_conv_1_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer1_2_attention_channel_add_conv_1_weight_to_fp16"), val = tensor<fp16, [16, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(134016)))];
            tensor<fp16, [16, 1, 1]> pose_model_backbone_layer1_2_attention_channel_add_conv_1_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer1_2_attention_channel_add_conv_1_bias_to_fp16"), val = tensor<fp16, [16, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(134144)))];
            tensor<fp16, [1, 16, 1, 1]> input_65_cast = layer_norm(axes = input_65_axes_0, beta = pose_model_backbone_layer1_2_attention_channel_add_conv_1_bias_to_fp16, epsilon = var_138_to_fp16, gamma = pose_model_backbone_layer1_2_attention_channel_add_conv_1_weight_to_fp16, x = input_63_cast);
            tensor<fp16, [1, 16, 1, 1]> input_67_cast = relu(x = input_65_cast);
            tensor<int32, [2]> var_410 = const()[name = tensor<string, []>("op_410"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_412 = const()[name = tensor<string, []>("op_412"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> channel_add_term_5_pad_type_0 = const()[name = tensor<string, []>("channel_add_term_5_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> channel_add_term_5_pad_0 = const()[name = tensor<string, []>("channel_add_term_5_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [80, 16, 1, 1]> pose_model_backbone_layer1_2_attention_channel_add_conv_3_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer1_2_attention_channel_add_conv_3_weight_to_fp16"), val = tensor<fp16, [80, 16, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(134272)))];
            tensor<fp16, [80]> pose_model_backbone_layer1_2_attention_channel_add_conv_3_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer1_2_attention_channel_add_conv_3_bias_to_fp16"), val = tensor<fp16, [80]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(136896)))];
            tensor<fp16, [1, 80, 1, 1]> channel_add_term_5_cast = conv(bias = pose_model_backbone_layer1_2_attention_channel_add_conv_3_bias_to_fp16, dilations = var_412, groups = var_133, pad = channel_add_term_5_pad_0, pad_type = channel_add_term_5_pad_type_0, strides = var_410, weight = pose_model_backbone_layer1_2_attention_channel_add_conv_3_weight_to_fp16, x = input_67_cast);
            tensor<fp16, [1, 80, 64, 48]> out_5_cast = add(x = x_5_cast, y = channel_add_term_5_cast);
            tensor<fp16, [1, 80, 64, 48]> input_69_cast = add(x = out_5_cast, y = input_49_cast);
            tensor<fp16, [1, 80, 64, 48]> input_71_cast = relu(x = input_69_cast);
            tensor<int32, [2]> var_424 = const()[name = tensor<string, []>("op_424"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_426 = const()[name = tensor<string, []>("op_426"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_73_pad_type_0 = const()[name = tensor<string, []>("input_73_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_73_pad_0 = const()[name = tensor<string, []>("input_73_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [80, 80, 1, 1]> pose_model_backbone_layer1_3_conv1_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer1_3_conv1_weight_to_fp16"), val = tensor<fp16, [80, 80, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(137152)))];
            tensor<fp16, [80]> pose_model_backbone_layer1_3_conv1_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer1_3_conv1_bias_to_fp16"), val = tensor<fp16, [80]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(150016)))];
            tensor<fp16, [1, 80, 64, 48]> input_73_cast = conv(bias = pose_model_backbone_layer1_3_conv1_bias_to_fp16, dilations = var_426, groups = var_133, pad = input_73_pad_0, pad_type = input_73_pad_type_0, strides = var_424, weight = pose_model_backbone_layer1_3_conv1_weight_to_fp16, x = input_71_cast);
            tensor<fp16, [1, 80, 64, 48]> input_75_cast = relu(x = input_73_cast);
            tensor<int32, [2]> var_432 = const()[name = tensor<string, []>("op_432"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_434 = const()[name = tensor<string, []>("op_434"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_77_pad_type_0 = const()[name = tensor<string, []>("input_77_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_77_pad_0 = const()[name = tensor<string, []>("input_77_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [80, 5, 3, 3]> pose_model_backbone_layer1_3_conv2_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer1_3_conv2_weight_to_fp16"), val = tensor<fp16, [80, 5, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(150272)))];
            tensor<fp16, [80]> pose_model_backbone_layer1_3_conv2_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer1_3_conv2_bias_to_fp16"), val = tensor<fp16, [80]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(157568)))];
            tensor<fp16, [1, 80, 64, 48]> input_77_cast = conv(bias = pose_model_backbone_layer1_3_conv2_bias_to_fp16, dilations = var_434, groups = var_137, pad = input_77_pad_0, pad_type = input_77_pad_type_0, strides = var_432, weight = pose_model_backbone_layer1_3_conv2_weight_to_fp16, x = input_75_cast);
            tensor<fp16, [1, 80, 64, 48]> input_79_cast = relu(x = input_77_cast);
            tensor<int32, [2]> var_440 = const()[name = tensor<string, []>("op_440"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_442 = const()[name = tensor<string, []>("op_442"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_7_pad_type_0 = const()[name = tensor<string, []>("x_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_7_pad_0 = const()[name = tensor<string, []>("x_7_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [80, 80, 1, 1]> pose_model_backbone_layer1_3_conv3_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer1_3_conv3_weight_to_fp16"), val = tensor<fp16, [80, 80, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(157824)))];
            tensor<fp16, [80]> pose_model_backbone_layer1_3_conv3_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer1_3_conv3_bias_to_fp16"), val = tensor<fp16, [80]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(170688)))];
            tensor<fp16, [1, 80, 64, 48]> x_7_cast = conv(bias = pose_model_backbone_layer1_3_conv3_bias_to_fp16, dilations = var_442, groups = var_133, pad = x_7_pad_0, pad_type = x_7_pad_type_0, strides = var_440, weight = pose_model_backbone_layer1_3_conv3_weight_to_fp16, x = input_79_cast);
            tensor<int32, [3]> var_455 = const()[name = tensor<string, []>("op_455"), val = tensor<int32, [3]>([1, 80, 3072])];
            tensor<fp16, [1, 80, 3072]> input_x_13_cast = reshape(shape = var_455, x = x_7_cast);
            tensor<int32, [1]> input_x_15_axes_0 = const()[name = tensor<string, []>("input_x_15_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 80, 3072]> input_x_15_cast = expand_dims(axes = input_x_15_axes_0, x = input_x_13_cast);
            tensor<int32, [2]> var_460 = const()[name = tensor<string, []>("op_460"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_462 = const()[name = tensor<string, []>("op_462"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> context_mask_19_pad_type_0 = const()[name = tensor<string, []>("context_mask_19_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> context_mask_19_pad_0 = const()[name = tensor<string, []>("context_mask_19_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1, 80, 1, 1]> pose_model_backbone_layer1_3_attention_conv_mask_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer1_3_attention_conv_mask_weight_to_fp16"), val = tensor<fp16, [1, 80, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(170944)))];
            tensor<fp16, [1]> pose_model_backbone_layer1_3_attention_conv_mask_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer1_3_attention_conv_mask_bias_to_fp16"), val = tensor<fp16, [1]>([0x1.8p-19])];
            tensor<fp16, [1, 1, 64, 48]> context_mask_19_cast = conv(bias = pose_model_backbone_layer1_3_attention_conv_mask_bias_to_fp16, dilations = var_462, groups = var_133, pad = context_mask_19_pad_0, pad_type = context_mask_19_pad_type_0, strides = var_460, weight = pose_model_backbone_layer1_3_attention_conv_mask_weight_to_fp16, x = x_7_cast);
            tensor<int32, [3]> var_467 = const()[name = tensor<string, []>("op_467"), val = tensor<int32, [3]>([1, 1, 3072])];
            tensor<fp16, [1, 1, 3072]> input_81_cast = reshape(shape = var_467, x = context_mask_19_cast);
            tensor<fp16, [1, 1, 3072]> context_mask_21_cast = softmax(axis = var_135, x = input_81_cast);
            tensor<int32, [1]> context_mask_23_axes_0 = const()[name = tensor<string, []>("context_mask_23_axes_0"), val = tensor<int32, [1]>([-1])];
            tensor<fp16, [1, 1, 3072, 1]> context_mask_23_cast = expand_dims(axes = context_mask_23_axes_0, x = context_mask_21_cast);
            tensor<bool, []> context_7_transpose_x_0 = const()[name = tensor<string, []>("context_7_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> context_7_transpose_y_0 = const()[name = tensor<string, []>("context_7_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1, 80, 1]> context_7_cast = matmul(transpose_x = context_7_transpose_x_0, transpose_y = context_7_transpose_y_0, x = input_x_15_cast, y = context_mask_23_cast);
            tensor<int32, [4]> var_472 = const()[name = tensor<string, []>("op_472"), val = tensor<int32, [4]>([1, 80, 1, 1])];
            tensor<fp16, [1, 80, 1, 1]> input_83_cast = reshape(shape = var_472, x = context_7_cast);
            tensor<int32, [2]> var_479 = const()[name = tensor<string, []>("op_479"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_481 = const()[name = tensor<string, []>("op_481"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_85_pad_type_0 = const()[name = tensor<string, []>("input_85_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_85_pad_0 = const()[name = tensor<string, []>("input_85_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [16, 80, 1, 1]> pose_model_backbone_layer1_3_attention_channel_add_conv_0_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer1_3_attention_channel_add_conv_0_weight_to_fp16"), val = tensor<fp16, [16, 80, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(171200)))];
            tensor<fp16, [16]> pose_model_backbone_layer1_3_attention_channel_add_conv_0_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer1_3_attention_channel_add_conv_0_bias_to_fp16"), val = tensor<fp16, [16]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(173824)))];
            tensor<fp16, [1, 16, 1, 1]> input_85_cast = conv(bias = pose_model_backbone_layer1_3_attention_channel_add_conv_0_bias_to_fp16, dilations = var_481, groups = var_133, pad = input_85_pad_0, pad_type = input_85_pad_type_0, strides = var_479, weight = pose_model_backbone_layer1_3_attention_channel_add_conv_0_weight_to_fp16, x = input_83_cast);
            tensor<int32, [3]> input_87_axes_0 = const()[name = tensor<string, []>("input_87_axes_0"), val = tensor<int32, [3]>([-3, -2, -1])];
            tensor<fp16, [16, 1, 1]> pose_model_backbone_layer1_3_attention_channel_add_conv_1_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer1_3_attention_channel_add_conv_1_weight_to_fp16"), val = tensor<fp16, [16, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(173952)))];
            tensor<fp16, [16, 1, 1]> pose_model_backbone_layer1_3_attention_channel_add_conv_1_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer1_3_attention_channel_add_conv_1_bias_to_fp16"), val = tensor<fp16, [16, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(174080)))];
            tensor<fp16, [1, 16, 1, 1]> input_87_cast = layer_norm(axes = input_87_axes_0, beta = pose_model_backbone_layer1_3_attention_channel_add_conv_1_bias_to_fp16, epsilon = var_138_to_fp16, gamma = pose_model_backbone_layer1_3_attention_channel_add_conv_1_weight_to_fp16, x = input_85_cast);
            tensor<fp16, [1, 16, 1, 1]> input_89_cast = relu(x = input_87_cast);
            tensor<int32, [2]> var_491 = const()[name = tensor<string, []>("op_491"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_493 = const()[name = tensor<string, []>("op_493"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> channel_add_term_7_pad_type_0 = const()[name = tensor<string, []>("channel_add_term_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> channel_add_term_7_pad_0 = const()[name = tensor<string, []>("channel_add_term_7_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [80, 16, 1, 1]> pose_model_backbone_layer1_3_attention_channel_add_conv_3_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer1_3_attention_channel_add_conv_3_weight_to_fp16"), val = tensor<fp16, [80, 16, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(174208)))];
            tensor<fp16, [80]> pose_model_backbone_layer1_3_attention_channel_add_conv_3_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer1_3_attention_channel_add_conv_3_bias_to_fp16"), val = tensor<fp16, [80]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(176832)))];
            tensor<fp16, [1, 80, 1, 1]> channel_add_term_7_cast = conv(bias = pose_model_backbone_layer1_3_attention_channel_add_conv_3_bias_to_fp16, dilations = var_493, groups = var_133, pad = channel_add_term_7_pad_0, pad_type = channel_add_term_7_pad_type_0, strides = var_491, weight = pose_model_backbone_layer1_3_attention_channel_add_conv_3_weight_to_fp16, x = input_89_cast);
            tensor<fp16, [1, 80, 64, 48]> out_7_cast = add(x = x_7_cast, y = channel_add_term_7_cast);
            tensor<fp16, [1, 80, 64, 48]> input_91_cast = add(x = out_7_cast, y = input_71_cast);
            tensor<fp16, [1, 80, 64, 48]> input_93_cast = relu(x = input_91_cast);
            tensor<int32, [2]> var_511 = const()[name = tensor<string, []>("op_511"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_513 = const()[name = tensor<string, []>("op_513"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_95_pad_type_0 = const()[name = tensor<string, []>("input_95_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_95_pad_0 = const()[name = tensor<string, []>("input_95_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [160, 80, 1, 1]> pose_model_backbone_layer2_0_conv1_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer2_0_conv1_weight_to_fp16"), val = tensor<fp16, [160, 80, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(177088)))];
            tensor<fp16, [160]> pose_model_backbone_layer2_0_conv1_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer2_0_conv1_bias_to_fp16"), val = tensor<fp16, [160]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(202752)))];
            tensor<fp16, [1, 160, 64, 48]> input_95_cast = conv(bias = pose_model_backbone_layer2_0_conv1_bias_to_fp16, dilations = var_513, groups = var_133, pad = input_95_pad_0, pad_type = input_95_pad_type_0, strides = var_511, weight = pose_model_backbone_layer2_0_conv1_weight_to_fp16, x = input_93_cast);
            tensor<fp16, [1, 160, 64, 48]> input_97_cast = relu(x = input_95_cast);
            tensor<int32, [2]> var_519 = const()[name = tensor<string, []>("op_519"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_521 = const()[name = tensor<string, []>("op_521"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_99_pad_type_0 = const()[name = tensor<string, []>("input_99_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_99_pad_0 = const()[name = tensor<string, []>("input_99_pad_0"), val = tensor<int32, [4]>([2, 2, 2, 2])];
            tensor<fp16, [160, 10, 5, 5]> pose_model_backbone_layer2_0_conv2_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer2_0_conv2_weight_to_fp16"), val = tensor<fp16, [160, 10, 5, 5]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(203136)))];
            tensor<fp16, [160]> pose_model_backbone_layer2_0_conv2_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer2_0_conv2_bias_to_fp16"), val = tensor<fp16, [160]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(283200)))];
            tensor<fp16, [1, 160, 32, 24]> input_99_cast = conv(bias = pose_model_backbone_layer2_0_conv2_bias_to_fp16, dilations = var_521, groups = var_137, pad = input_99_pad_0, pad_type = input_99_pad_type_0, strides = var_519, weight = pose_model_backbone_layer2_0_conv2_weight_to_fp16, x = input_97_cast);
            tensor<fp16, [1, 160, 32, 24]> input_101_cast = relu(x = input_99_cast);
            tensor<int32, [2]> var_527 = const()[name = tensor<string, []>("op_527"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_529 = const()[name = tensor<string, []>("op_529"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> out_9_pad_type_0 = const()[name = tensor<string, []>("out_9_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> out_9_pad_0 = const()[name = tensor<string, []>("out_9_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [160, 160, 1, 1]> pose_model_backbone_layer2_0_conv3_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer2_0_conv3_weight_to_fp16"), val = tensor<fp16, [160, 160, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(283584)))];
            tensor<fp16, [160]> pose_model_backbone_layer2_0_conv3_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer2_0_conv3_bias_to_fp16"), val = tensor<fp16, [160]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(334848)))];
            tensor<fp16, [1, 160, 32, 24]> out_9_cast = conv(bias = pose_model_backbone_layer2_0_conv3_bias_to_fp16, dilations = var_529, groups = var_133, pad = out_9_pad_0, pad_type = out_9_pad_type_0, strides = var_527, weight = pose_model_backbone_layer2_0_conv3_weight_to_fp16, x = input_101_cast);
            tensor<int32, [2]> var_535 = const()[name = tensor<string, []>("op_535"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_537 = const()[name = tensor<string, []>("op_537"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> identity_3_pad_type_0 = const()[name = tensor<string, []>("identity_3_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> identity_3_pad_0 = const()[name = tensor<string, []>("identity_3_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [160, 80, 1, 1]> pose_model_backbone_layer2_0_downsample_0_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer2_0_downsample_0_weight_to_fp16"), val = tensor<fp16, [160, 80, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(335232)))];
            tensor<fp16, [160]> pose_model_backbone_layer2_0_downsample_0_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer2_0_downsample_0_bias_to_fp16"), val = tensor<fp16, [160]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(360896)))];
            tensor<fp16, [1, 160, 32, 24]> identity_3_cast = conv(bias = pose_model_backbone_layer2_0_downsample_0_bias_to_fp16, dilations = var_537, groups = var_133, pad = identity_3_pad_0, pad_type = identity_3_pad_type_0, strides = var_535, weight = pose_model_backbone_layer2_0_downsample_0_weight_to_fp16, x = input_93_cast);
            tensor<fp16, [1, 160, 32, 24]> input_103_cast = add(x = out_9_cast, y = identity_3_cast);
            tensor<fp16, [1, 160, 32, 24]> input_105_cast = relu(x = input_103_cast);
            tensor<int32, [2]> var_547 = const()[name = tensor<string, []>("op_547"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_549 = const()[name = tensor<string, []>("op_549"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_107_pad_type_0 = const()[name = tensor<string, []>("input_107_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_107_pad_0 = const()[name = tensor<string, []>("input_107_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [160, 160, 1, 1]> pose_model_backbone_layer2_1_conv1_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer2_1_conv1_weight_to_fp16"), val = tensor<fp16, [160, 160, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(361280)))];
            tensor<fp16, [160]> pose_model_backbone_layer2_1_conv1_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer2_1_conv1_bias_to_fp16"), val = tensor<fp16, [160]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(412544)))];
            tensor<fp16, [1, 160, 32, 24]> input_107_cast = conv(bias = pose_model_backbone_layer2_1_conv1_bias_to_fp16, dilations = var_549, groups = var_133, pad = input_107_pad_0, pad_type = input_107_pad_type_0, strides = var_547, weight = pose_model_backbone_layer2_1_conv1_weight_to_fp16, x = input_105_cast);
            tensor<fp16, [1, 160, 32, 24]> input_109_cast = relu(x = input_107_cast);
            tensor<int32, [2]> var_555 = const()[name = tensor<string, []>("op_555"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_557 = const()[name = tensor<string, []>("op_557"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_111_pad_type_0 = const()[name = tensor<string, []>("input_111_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_111_pad_0 = const()[name = tensor<string, []>("input_111_pad_0"), val = tensor<int32, [4]>([2, 2, 2, 2])];
            tensor<fp16, [160, 10, 5, 5]> pose_model_backbone_layer2_1_conv2_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer2_1_conv2_weight_to_fp16"), val = tensor<fp16, [160, 10, 5, 5]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(412928)))];
            tensor<fp16, [160]> pose_model_backbone_layer2_1_conv2_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer2_1_conv2_bias_to_fp16"), val = tensor<fp16, [160]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(492992)))];
            tensor<fp16, [1, 160, 32, 24]> input_111_cast = conv(bias = pose_model_backbone_layer2_1_conv2_bias_to_fp16, dilations = var_557, groups = var_137, pad = input_111_pad_0, pad_type = input_111_pad_type_0, strides = var_555, weight = pose_model_backbone_layer2_1_conv2_weight_to_fp16, x = input_109_cast);
            tensor<fp16, [1, 160, 32, 24]> input_113_cast = relu(x = input_111_cast);
            tensor<int32, [2]> var_563 = const()[name = tensor<string, []>("op_563"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_565 = const()[name = tensor<string, []>("op_565"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> out_11_pad_type_0 = const()[name = tensor<string, []>("out_11_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> out_11_pad_0 = const()[name = tensor<string, []>("out_11_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [160, 160, 1, 1]> pose_model_backbone_layer2_1_conv3_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer2_1_conv3_weight_to_fp16"), val = tensor<fp16, [160, 160, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(493376)))];
            tensor<fp16, [160]> pose_model_backbone_layer2_1_conv3_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer2_1_conv3_bias_to_fp16"), val = tensor<fp16, [160]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(544640)))];
            tensor<fp16, [1, 160, 32, 24]> out_11_cast = conv(bias = pose_model_backbone_layer2_1_conv3_bias_to_fp16, dilations = var_565, groups = var_133, pad = out_11_pad_0, pad_type = out_11_pad_type_0, strides = var_563, weight = pose_model_backbone_layer2_1_conv3_weight_to_fp16, x = input_113_cast);
            tensor<fp16, [1, 160, 32, 24]> input_115_cast = add(x = out_11_cast, y = input_105_cast);
            tensor<fp16, [1, 160, 32, 24]> input_117_cast = relu(x = input_115_cast);
            tensor<int32, [2]> var_575 = const()[name = tensor<string, []>("op_575"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_577 = const()[name = tensor<string, []>("op_577"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_119_pad_type_0 = const()[name = tensor<string, []>("input_119_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_119_pad_0 = const()[name = tensor<string, []>("input_119_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [160, 160, 1, 1]> pose_model_backbone_layer2_2_conv1_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer2_2_conv1_weight_to_fp16"), val = tensor<fp16, [160, 160, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(545024)))];
            tensor<fp16, [160]> pose_model_backbone_layer2_2_conv1_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer2_2_conv1_bias_to_fp16"), val = tensor<fp16, [160]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(596288)))];
            tensor<fp16, [1, 160, 32, 24]> input_119_cast = conv(bias = pose_model_backbone_layer2_2_conv1_bias_to_fp16, dilations = var_577, groups = var_133, pad = input_119_pad_0, pad_type = input_119_pad_type_0, strides = var_575, weight = pose_model_backbone_layer2_2_conv1_weight_to_fp16, x = input_117_cast);
            tensor<fp16, [1, 160, 32, 24]> input_121_cast = relu(x = input_119_cast);
            tensor<int32, [2]> var_583 = const()[name = tensor<string, []>("op_583"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_585 = const()[name = tensor<string, []>("op_585"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_123_pad_type_0 = const()[name = tensor<string, []>("input_123_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_123_pad_0 = const()[name = tensor<string, []>("input_123_pad_0"), val = tensor<int32, [4]>([2, 2, 2, 2])];
            tensor<fp16, [160, 10, 5, 5]> pose_model_backbone_layer2_2_conv2_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer2_2_conv2_weight_to_fp16"), val = tensor<fp16, [160, 10, 5, 5]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(596672)))];
            tensor<fp16, [160]> pose_model_backbone_layer2_2_conv2_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer2_2_conv2_bias_to_fp16"), val = tensor<fp16, [160]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(676736)))];
            tensor<fp16, [1, 160, 32, 24]> input_123_cast = conv(bias = pose_model_backbone_layer2_2_conv2_bias_to_fp16, dilations = var_585, groups = var_137, pad = input_123_pad_0, pad_type = input_123_pad_type_0, strides = var_583, weight = pose_model_backbone_layer2_2_conv2_weight_to_fp16, x = input_121_cast);
            tensor<fp16, [1, 160, 32, 24]> input_125_cast = relu(x = input_123_cast);
            tensor<int32, [2]> var_591 = const()[name = tensor<string, []>("op_591"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_593 = const()[name = tensor<string, []>("op_593"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> out_13_pad_type_0 = const()[name = tensor<string, []>("out_13_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> out_13_pad_0 = const()[name = tensor<string, []>("out_13_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [160, 160, 1, 1]> pose_model_backbone_layer2_2_conv3_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer2_2_conv3_weight_to_fp16"), val = tensor<fp16, [160, 160, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(677120)))];
            tensor<fp16, [160]> pose_model_backbone_layer2_2_conv3_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer2_2_conv3_bias_to_fp16"), val = tensor<fp16, [160]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(728384)))];
            tensor<fp16, [1, 160, 32, 24]> out_13_cast = conv(bias = pose_model_backbone_layer2_2_conv3_bias_to_fp16, dilations = var_593, groups = var_133, pad = out_13_pad_0, pad_type = out_13_pad_type_0, strides = var_591, weight = pose_model_backbone_layer2_2_conv3_weight_to_fp16, x = input_125_cast);
            tensor<fp16, [1, 160, 32, 24]> input_127_cast = add(x = out_13_cast, y = input_117_cast);
            tensor<fp16, [1, 160, 32, 24]> input_129_cast = relu(x = input_127_cast);
            tensor<int32, [2]> var_603 = const()[name = tensor<string, []>("op_603"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_605 = const()[name = tensor<string, []>("op_605"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_131_pad_type_0 = const()[name = tensor<string, []>("input_131_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_131_pad_0 = const()[name = tensor<string, []>("input_131_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [160, 160, 1, 1]> pose_model_backbone_layer2_3_conv1_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer2_3_conv1_weight_to_fp16"), val = tensor<fp16, [160, 160, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(728768)))];
            tensor<fp16, [160]> pose_model_backbone_layer2_3_conv1_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer2_3_conv1_bias_to_fp16"), val = tensor<fp16, [160]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(780032)))];
            tensor<fp16, [1, 160, 32, 24]> input_131_cast = conv(bias = pose_model_backbone_layer2_3_conv1_bias_to_fp16, dilations = var_605, groups = var_133, pad = input_131_pad_0, pad_type = input_131_pad_type_0, strides = var_603, weight = pose_model_backbone_layer2_3_conv1_weight_to_fp16, x = input_129_cast);
            tensor<fp16, [1, 160, 32, 24]> input_133_cast = relu(x = input_131_cast);
            tensor<int32, [2]> var_611 = const()[name = tensor<string, []>("op_611"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_613 = const()[name = tensor<string, []>("op_613"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_135_pad_type_0 = const()[name = tensor<string, []>("input_135_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_135_pad_0 = const()[name = tensor<string, []>("input_135_pad_0"), val = tensor<int32, [4]>([2, 2, 2, 2])];
            tensor<fp16, [160, 10, 5, 5]> pose_model_backbone_layer2_3_conv2_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer2_3_conv2_weight_to_fp16"), val = tensor<fp16, [160, 10, 5, 5]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(780416)))];
            tensor<fp16, [160]> pose_model_backbone_layer2_3_conv2_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer2_3_conv2_bias_to_fp16"), val = tensor<fp16, [160]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(860480)))];
            tensor<fp16, [1, 160, 32, 24]> input_135_cast = conv(bias = pose_model_backbone_layer2_3_conv2_bias_to_fp16, dilations = var_613, groups = var_137, pad = input_135_pad_0, pad_type = input_135_pad_type_0, strides = var_611, weight = pose_model_backbone_layer2_3_conv2_weight_to_fp16, x = input_133_cast);
            tensor<fp16, [1, 160, 32, 24]> input_137_cast = relu(x = input_135_cast);
            tensor<int32, [2]> var_619 = const()[name = tensor<string, []>("op_619"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_621 = const()[name = tensor<string, []>("op_621"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> out_15_pad_type_0 = const()[name = tensor<string, []>("out_15_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> out_15_pad_0 = const()[name = tensor<string, []>("out_15_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [160, 160, 1, 1]> pose_model_backbone_layer2_3_conv3_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer2_3_conv3_weight_to_fp16"), val = tensor<fp16, [160, 160, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(860864)))];
            tensor<fp16, [160]> pose_model_backbone_layer2_3_conv3_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer2_3_conv3_bias_to_fp16"), val = tensor<fp16, [160]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(912128)))];
            tensor<fp16, [1, 160, 32, 24]> out_15_cast = conv(bias = pose_model_backbone_layer2_3_conv3_bias_to_fp16, dilations = var_621, groups = var_133, pad = out_15_pad_0, pad_type = out_15_pad_type_0, strides = var_619, weight = pose_model_backbone_layer2_3_conv3_weight_to_fp16, x = input_137_cast);
            tensor<fp16, [1, 160, 32, 24]> input_139_cast = add(x = out_15_cast, y = input_129_cast);
            tensor<fp16, [1, 160, 32, 24]> input_141_cast = relu(x = input_139_cast);
            tensor<int32, [2]> var_631 = const()[name = tensor<string, []>("op_631"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_633 = const()[name = tensor<string, []>("op_633"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_143_pad_type_0 = const()[name = tensor<string, []>("input_143_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_143_pad_0 = const()[name = tensor<string, []>("input_143_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [160, 160, 1, 1]> pose_model_backbone_layer2_4_conv1_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer2_4_conv1_weight_to_fp16"), val = tensor<fp16, [160, 160, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(912512)))];
            tensor<fp16, [160]> pose_model_backbone_layer2_4_conv1_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer2_4_conv1_bias_to_fp16"), val = tensor<fp16, [160]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(963776)))];
            tensor<fp16, [1, 160, 32, 24]> input_143_cast = conv(bias = pose_model_backbone_layer2_4_conv1_bias_to_fp16, dilations = var_633, groups = var_133, pad = input_143_pad_0, pad_type = input_143_pad_type_0, strides = var_631, weight = pose_model_backbone_layer2_4_conv1_weight_to_fp16, x = input_141_cast);
            tensor<fp16, [1, 160, 32, 24]> input_145_cast = relu(x = input_143_cast);
            tensor<int32, [2]> var_639 = const()[name = tensor<string, []>("op_639"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_641 = const()[name = tensor<string, []>("op_641"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_147_pad_type_0 = const()[name = tensor<string, []>("input_147_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_147_pad_0 = const()[name = tensor<string, []>("input_147_pad_0"), val = tensor<int32, [4]>([2, 2, 2, 2])];
            tensor<fp16, [160, 10, 5, 5]> pose_model_backbone_layer2_4_conv2_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer2_4_conv2_weight_to_fp16"), val = tensor<fp16, [160, 10, 5, 5]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(964160)))];
            tensor<fp16, [160]> pose_model_backbone_layer2_4_conv2_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer2_4_conv2_bias_to_fp16"), val = tensor<fp16, [160]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1044224)))];
            tensor<fp16, [1, 160, 32, 24]> input_147_cast = conv(bias = pose_model_backbone_layer2_4_conv2_bias_to_fp16, dilations = var_641, groups = var_137, pad = input_147_pad_0, pad_type = input_147_pad_type_0, strides = var_639, weight = pose_model_backbone_layer2_4_conv2_weight_to_fp16, x = input_145_cast);
            tensor<fp16, [1, 160, 32, 24]> input_149_cast = relu(x = input_147_cast);
            tensor<int32, [2]> var_647 = const()[name = tensor<string, []>("op_647"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_649 = const()[name = tensor<string, []>("op_649"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> out_17_pad_type_0 = const()[name = tensor<string, []>("out_17_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> out_17_pad_0 = const()[name = tensor<string, []>("out_17_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [160, 160, 1, 1]> pose_model_backbone_layer2_4_conv3_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer2_4_conv3_weight_to_fp16"), val = tensor<fp16, [160, 160, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1044608)))];
            tensor<fp16, [160]> pose_model_backbone_layer2_4_conv3_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer2_4_conv3_bias_to_fp16"), val = tensor<fp16, [160]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1095872)))];
            tensor<fp16, [1, 160, 32, 24]> out_17_cast = conv(bias = pose_model_backbone_layer2_4_conv3_bias_to_fp16, dilations = var_649, groups = var_133, pad = out_17_pad_0, pad_type = out_17_pad_type_0, strides = var_647, weight = pose_model_backbone_layer2_4_conv3_weight_to_fp16, x = input_149_cast);
            tensor<fp16, [1, 160, 32, 24]> input_151_cast = add(x = out_17_cast, y = input_141_cast);
            tensor<fp16, [1, 160, 32, 24]> input_153_cast = relu(x = input_151_cast);
            tensor<int32, [2]> var_659 = const()[name = tensor<string, []>("op_659"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_661 = const()[name = tensor<string, []>("op_661"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_155_pad_type_0 = const()[name = tensor<string, []>("input_155_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_155_pad_0 = const()[name = tensor<string, []>("input_155_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [160, 160, 1, 1]> pose_model_backbone_layer2_5_conv1_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer2_5_conv1_weight_to_fp16"), val = tensor<fp16, [160, 160, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1096256)))];
            tensor<fp16, [160]> pose_model_backbone_layer2_5_conv1_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer2_5_conv1_bias_to_fp16"), val = tensor<fp16, [160]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1147520)))];
            tensor<fp16, [1, 160, 32, 24]> input_155_cast = conv(bias = pose_model_backbone_layer2_5_conv1_bias_to_fp16, dilations = var_661, groups = var_133, pad = input_155_pad_0, pad_type = input_155_pad_type_0, strides = var_659, weight = pose_model_backbone_layer2_5_conv1_weight_to_fp16, x = input_153_cast);
            tensor<fp16, [1, 160, 32, 24]> input_157_cast = relu(x = input_155_cast);
            tensor<int32, [2]> var_667 = const()[name = tensor<string, []>("op_667"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_669 = const()[name = tensor<string, []>("op_669"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_159_pad_type_0 = const()[name = tensor<string, []>("input_159_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_159_pad_0 = const()[name = tensor<string, []>("input_159_pad_0"), val = tensor<int32, [4]>([2, 2, 2, 2])];
            tensor<fp16, [160, 10, 5, 5]> pose_model_backbone_layer2_5_conv2_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer2_5_conv2_weight_to_fp16"), val = tensor<fp16, [160, 10, 5, 5]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1147904)))];
            tensor<fp16, [160]> pose_model_backbone_layer2_5_conv2_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer2_5_conv2_bias_to_fp16"), val = tensor<fp16, [160]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1227968)))];
            tensor<fp16, [1, 160, 32, 24]> input_159_cast = conv(bias = pose_model_backbone_layer2_5_conv2_bias_to_fp16, dilations = var_669, groups = var_137, pad = input_159_pad_0, pad_type = input_159_pad_type_0, strides = var_667, weight = pose_model_backbone_layer2_5_conv2_weight_to_fp16, x = input_157_cast);
            tensor<fp16, [1, 160, 32, 24]> input_161_cast = relu(x = input_159_cast);
            tensor<int32, [2]> var_675 = const()[name = tensor<string, []>("op_675"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_677 = const()[name = tensor<string, []>("op_677"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> out_19_pad_type_0 = const()[name = tensor<string, []>("out_19_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> out_19_pad_0 = const()[name = tensor<string, []>("out_19_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [160, 160, 1, 1]> pose_model_backbone_layer2_5_conv3_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer2_5_conv3_weight_to_fp16"), val = tensor<fp16, [160, 160, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1228352)))];
            tensor<fp16, [160]> pose_model_backbone_layer2_5_conv3_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer2_5_conv3_bias_to_fp16"), val = tensor<fp16, [160]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1279616)))];
            tensor<fp16, [1, 160, 32, 24]> out_19_cast = conv(bias = pose_model_backbone_layer2_5_conv3_bias_to_fp16, dilations = var_677, groups = var_133, pad = out_19_pad_0, pad_type = out_19_pad_type_0, strides = var_675, weight = pose_model_backbone_layer2_5_conv3_weight_to_fp16, x = input_161_cast);
            tensor<fp16, [1, 160, 32, 24]> input_163_cast = add(x = out_19_cast, y = input_153_cast);
            tensor<fp16, [1, 160, 32, 24]> input_165_cast = relu(x = input_163_cast);
            tensor<int32, [2]> var_696 = const()[name = tensor<string, []>("op_696"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_698 = const()[name = tensor<string, []>("op_698"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_167_pad_type_0 = const()[name = tensor<string, []>("input_167_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_167_pad_0 = const()[name = tensor<string, []>("input_167_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [304, 160, 1, 1]> pose_model_backbone_layer3_0_conv1_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_0_conv1_weight_to_fp16"), val = tensor<fp16, [304, 160, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1280000)))];
            tensor<fp16, [304]> pose_model_backbone_layer3_0_conv1_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_0_conv1_bias_to_fp16"), val = tensor<fp16, [304]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1377344)))];
            tensor<fp16, [1, 304, 32, 24]> input_167_cast = conv(bias = pose_model_backbone_layer3_0_conv1_bias_to_fp16, dilations = var_698, groups = var_133, pad = input_167_pad_0, pad_type = input_167_pad_type_0, strides = var_696, weight = pose_model_backbone_layer3_0_conv1_weight_to_fp16, x = input_165_cast);
            tensor<fp16, [1, 304, 32, 24]> input_169_cast = relu(x = input_167_cast);
            tensor<int32, [2]> var_704 = const()[name = tensor<string, []>("op_704"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_706 = const()[name = tensor<string, []>("op_706"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_171_pad_type_0 = const()[name = tensor<string, []>("input_171_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_171_pad_0 = const()[name = tensor<string, []>("input_171_pad_0"), val = tensor<int32, [4]>([2, 2, 2, 2])];
            tensor<fp16, [304, 19, 5, 5]> pose_model_backbone_layer3_0_conv2_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_0_conv2_weight_to_fp16"), val = tensor<fp16, [304, 19, 5, 5]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1378048)))];
            tensor<fp16, [304]> pose_model_backbone_layer3_0_conv2_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_0_conv2_bias_to_fp16"), val = tensor<fp16, [304]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1666944)))];
            tensor<fp16, [1, 304, 16, 12]> input_171_cast = conv(bias = pose_model_backbone_layer3_0_conv2_bias_to_fp16, dilations = var_706, groups = var_137, pad = input_171_pad_0, pad_type = input_171_pad_type_0, strides = var_704, weight = pose_model_backbone_layer3_0_conv2_weight_to_fp16, x = input_169_cast);
            tensor<fp16, [1, 304, 16, 12]> input_173_cast = relu(x = input_171_cast);
            tensor<int32, [2]> var_712 = const()[name = tensor<string, []>("op_712"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_714 = const()[name = tensor<string, []>("op_714"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_9_pad_type_0 = const()[name = tensor<string, []>("x_9_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_9_pad_0 = const()[name = tensor<string, []>("x_9_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [304, 304, 1, 1]> pose_model_backbone_layer3_0_conv3_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_0_conv3_weight_to_fp16"), val = tensor<fp16, [304, 304, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1667648)))];
            tensor<fp16, [304]> pose_model_backbone_layer3_0_conv3_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_0_conv3_bias_to_fp16"), val = tensor<fp16, [304]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1852544)))];
            tensor<fp16, [1, 304, 16, 12]> x_9_cast = conv(bias = pose_model_backbone_layer3_0_conv3_bias_to_fp16, dilations = var_714, groups = var_133, pad = x_9_pad_0, pad_type = x_9_pad_type_0, strides = var_712, weight = pose_model_backbone_layer3_0_conv3_weight_to_fp16, x = input_173_cast);
            tensor<int32, [3]> var_727 = const()[name = tensor<string, []>("op_727"), val = tensor<int32, [3]>([1, 304, 192])];
            tensor<fp16, [1, 304, 192]> input_x_17_cast = reshape(shape = var_727, x = x_9_cast);
            tensor<int32, [1]> input_x_19_axes_0 = const()[name = tensor<string, []>("input_x_19_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 304, 192]> input_x_19_cast = expand_dims(axes = input_x_19_axes_0, x = input_x_17_cast);
            tensor<int32, [2]> var_732 = const()[name = tensor<string, []>("op_732"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_734 = const()[name = tensor<string, []>("op_734"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> context_mask_25_pad_type_0 = const()[name = tensor<string, []>("context_mask_25_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> context_mask_25_pad_0 = const()[name = tensor<string, []>("context_mask_25_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1, 304, 1, 1]> pose_model_backbone_layer3_0_attention_conv_mask_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_0_attention_conv_mask_weight_to_fp16"), val = tensor<fp16, [1, 304, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1853248)))];
            tensor<fp16, [1]> pose_model_backbone_layer3_0_attention_conv_mask_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_0_attention_conv_mask_bias_to_fp16"), val = tensor<fp16, [1]>([0x1p-21])];
            tensor<fp16, [1, 1, 16, 12]> context_mask_25_cast = conv(bias = pose_model_backbone_layer3_0_attention_conv_mask_bias_to_fp16, dilations = var_734, groups = var_133, pad = context_mask_25_pad_0, pad_type = context_mask_25_pad_type_0, strides = var_732, weight = pose_model_backbone_layer3_0_attention_conv_mask_weight_to_fp16, x = x_9_cast);
            tensor<int32, [3]> var_739 = const()[name = tensor<string, []>("op_739"), val = tensor<int32, [3]>([1, 1, 192])];
            tensor<fp16, [1, 1, 192]> input_175_cast = reshape(shape = var_739, x = context_mask_25_cast);
            tensor<fp16, [1, 1, 192]> context_mask_27_cast = softmax(axis = var_135, x = input_175_cast);
            tensor<int32, [1]> context_mask_29_axes_0 = const()[name = tensor<string, []>("context_mask_29_axes_0"), val = tensor<int32, [1]>([-1])];
            tensor<fp16, [1, 1, 192, 1]> context_mask_29_cast = expand_dims(axes = context_mask_29_axes_0, x = context_mask_27_cast);
            tensor<bool, []> context_9_transpose_x_0 = const()[name = tensor<string, []>("context_9_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> context_9_transpose_y_0 = const()[name = tensor<string, []>("context_9_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1, 304, 1]> context_9_cast = matmul(transpose_x = context_9_transpose_x_0, transpose_y = context_9_transpose_y_0, x = input_x_19_cast, y = context_mask_29_cast);
            tensor<int32, [4]> var_744 = const()[name = tensor<string, []>("op_744"), val = tensor<int32, [4]>([1, 304, 1, 1])];
            tensor<fp16, [1, 304, 1, 1]> input_177_cast = reshape(shape = var_744, x = context_9_cast);
            tensor<int32, [2]> var_751 = const()[name = tensor<string, []>("op_751"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_753 = const()[name = tensor<string, []>("op_753"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_179_pad_type_0 = const()[name = tensor<string, []>("input_179_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_179_pad_0 = const()[name = tensor<string, []>("input_179_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [19, 304, 1, 1]> pose_model_backbone_layer3_0_attention_channel_add_conv_0_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_0_attention_channel_add_conv_0_weight_to_fp16"), val = tensor<fp16, [19, 304, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1853952)))];
            tensor<fp16, [19]> pose_model_backbone_layer3_0_attention_channel_add_conv_0_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_0_attention_channel_add_conv_0_bias_to_fp16"), val = tensor<fp16, [19]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1865600)))];
            tensor<fp16, [1, 19, 1, 1]> input_179_cast = conv(bias = pose_model_backbone_layer3_0_attention_channel_add_conv_0_bias_to_fp16, dilations = var_753, groups = var_133, pad = input_179_pad_0, pad_type = input_179_pad_type_0, strides = var_751, weight = pose_model_backbone_layer3_0_attention_channel_add_conv_0_weight_to_fp16, x = input_177_cast);
            tensor<int32, [3]> input_181_axes_0 = const()[name = tensor<string, []>("input_181_axes_0"), val = tensor<int32, [3]>([-3, -2, -1])];
            tensor<fp16, [19, 1, 1]> pose_model_backbone_layer3_0_attention_channel_add_conv_1_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_0_attention_channel_add_conv_1_weight_to_fp16"), val = tensor<fp16, [19, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1865728)))];
            tensor<fp16, [19, 1, 1]> pose_model_backbone_layer3_0_attention_channel_add_conv_1_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_0_attention_channel_add_conv_1_bias_to_fp16"), val = tensor<fp16, [19, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1865856)))];
            tensor<fp16, [1, 19, 1, 1]> input_181_cast = layer_norm(axes = input_181_axes_0, beta = pose_model_backbone_layer3_0_attention_channel_add_conv_1_bias_to_fp16, epsilon = var_138_to_fp16, gamma = pose_model_backbone_layer3_0_attention_channel_add_conv_1_weight_to_fp16, x = input_179_cast);
            tensor<fp16, [1, 19, 1, 1]> input_183_cast = relu(x = input_181_cast);
            tensor<int32, [2]> var_763 = const()[name = tensor<string, []>("op_763"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_765 = const()[name = tensor<string, []>("op_765"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> channel_add_term_9_pad_type_0 = const()[name = tensor<string, []>("channel_add_term_9_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> channel_add_term_9_pad_0 = const()[name = tensor<string, []>("channel_add_term_9_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [304, 19, 1, 1]> pose_model_backbone_layer3_0_attention_channel_add_conv_3_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_0_attention_channel_add_conv_3_weight_to_fp16"), val = tensor<fp16, [304, 19, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1865984)))];
            tensor<fp16, [304]> pose_model_backbone_layer3_0_attention_channel_add_conv_3_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_0_attention_channel_add_conv_3_bias_to_fp16"), val = tensor<fp16, [304]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1877632)))];
            tensor<fp16, [1, 304, 1, 1]> channel_add_term_9_cast = conv(bias = pose_model_backbone_layer3_0_attention_channel_add_conv_3_bias_to_fp16, dilations = var_765, groups = var_133, pad = channel_add_term_9_pad_0, pad_type = channel_add_term_9_pad_type_0, strides = var_763, weight = pose_model_backbone_layer3_0_attention_channel_add_conv_3_weight_to_fp16, x = input_183_cast);
            tensor<fp16, [1, 304, 16, 12]> out_21_cast = add(x = x_9_cast, y = channel_add_term_9_cast);
            tensor<int32, [2]> var_772 = const()[name = tensor<string, []>("op_772"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_774 = const()[name = tensor<string, []>("op_774"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> identity_5_pad_type_0 = const()[name = tensor<string, []>("identity_5_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> identity_5_pad_0 = const()[name = tensor<string, []>("identity_5_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [304, 160, 1, 1]> pose_model_backbone_layer3_0_downsample_0_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_0_downsample_0_weight_to_fp16"), val = tensor<fp16, [304, 160, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1878336)))];
            tensor<fp16, [304]> pose_model_backbone_layer3_0_downsample_0_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_0_downsample_0_bias_to_fp16"), val = tensor<fp16, [304]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1975680)))];
            tensor<fp16, [1, 304, 16, 12]> identity_5_cast = conv(bias = pose_model_backbone_layer3_0_downsample_0_bias_to_fp16, dilations = var_774, groups = var_133, pad = identity_5_pad_0, pad_type = identity_5_pad_type_0, strides = var_772, weight = pose_model_backbone_layer3_0_downsample_0_weight_to_fp16, x = input_165_cast);
            tensor<fp16, [1, 304, 16, 12]> input_185_cast = add(x = out_21_cast, y = identity_5_cast);
            tensor<fp16, [1, 304, 16, 12]> input_187_cast = relu(x = input_185_cast);
            tensor<int32, [2]> var_785 = const()[name = tensor<string, []>("op_785"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_787 = const()[name = tensor<string, []>("op_787"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_189_pad_type_0 = const()[name = tensor<string, []>("input_189_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_189_pad_0 = const()[name = tensor<string, []>("input_189_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [304, 304, 1, 1]> pose_model_backbone_layer3_1_conv1_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_1_conv1_weight_to_fp16"), val = tensor<fp16, [304, 304, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1976384)))];
            tensor<fp16, [304]> pose_model_backbone_layer3_1_conv1_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_1_conv1_bias_to_fp16"), val = tensor<fp16, [304]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2161280)))];
            tensor<fp16, [1, 304, 16, 12]> input_189_cast = conv(bias = pose_model_backbone_layer3_1_conv1_bias_to_fp16, dilations = var_787, groups = var_133, pad = input_189_pad_0, pad_type = input_189_pad_type_0, strides = var_785, weight = pose_model_backbone_layer3_1_conv1_weight_to_fp16, x = input_187_cast);
            tensor<fp16, [1, 304, 16, 12]> input_191_cast = relu(x = input_189_cast);
            tensor<int32, [2]> var_793 = const()[name = tensor<string, []>("op_793"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_795 = const()[name = tensor<string, []>("op_795"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_193_pad_type_0 = const()[name = tensor<string, []>("input_193_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_193_pad_0 = const()[name = tensor<string, []>("input_193_pad_0"), val = tensor<int32, [4]>([2, 2, 2, 2])];
            tensor<fp16, [304, 19, 5, 5]> pose_model_backbone_layer3_1_conv2_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_1_conv2_weight_to_fp16"), val = tensor<fp16, [304, 19, 5, 5]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2161984)))];
            tensor<fp16, [304]> pose_model_backbone_layer3_1_conv2_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_1_conv2_bias_to_fp16"), val = tensor<fp16, [304]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2450880)))];
            tensor<fp16, [1, 304, 16, 12]> input_193_cast = conv(bias = pose_model_backbone_layer3_1_conv2_bias_to_fp16, dilations = var_795, groups = var_137, pad = input_193_pad_0, pad_type = input_193_pad_type_0, strides = var_793, weight = pose_model_backbone_layer3_1_conv2_weight_to_fp16, x = input_191_cast);
            tensor<fp16, [1, 304, 16, 12]> input_195_cast = relu(x = input_193_cast);
            tensor<int32, [2]> var_801 = const()[name = tensor<string, []>("op_801"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_803 = const()[name = tensor<string, []>("op_803"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_11_pad_type_0 = const()[name = tensor<string, []>("x_11_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_11_pad_0 = const()[name = tensor<string, []>("x_11_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [304, 304, 1, 1]> pose_model_backbone_layer3_1_conv3_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_1_conv3_weight_to_fp16"), val = tensor<fp16, [304, 304, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2451584)))];
            tensor<fp16, [304]> pose_model_backbone_layer3_1_conv3_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_1_conv3_bias_to_fp16"), val = tensor<fp16, [304]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2636480)))];
            tensor<fp16, [1, 304, 16, 12]> x_11_cast = conv(bias = pose_model_backbone_layer3_1_conv3_bias_to_fp16, dilations = var_803, groups = var_133, pad = x_11_pad_0, pad_type = x_11_pad_type_0, strides = var_801, weight = pose_model_backbone_layer3_1_conv3_weight_to_fp16, x = input_195_cast);
            tensor<int32, [3]> var_816 = const()[name = tensor<string, []>("op_816"), val = tensor<int32, [3]>([1, 304, 192])];
            tensor<fp16, [1, 304, 192]> input_x_21_cast = reshape(shape = var_816, x = x_11_cast);
            tensor<int32, [1]> input_x_23_axes_0 = const()[name = tensor<string, []>("input_x_23_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 304, 192]> input_x_23_cast = expand_dims(axes = input_x_23_axes_0, x = input_x_21_cast);
            tensor<int32, [2]> var_821 = const()[name = tensor<string, []>("op_821"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_823 = const()[name = tensor<string, []>("op_823"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> context_mask_31_pad_type_0 = const()[name = tensor<string, []>("context_mask_31_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> context_mask_31_pad_0 = const()[name = tensor<string, []>("context_mask_31_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1, 304, 1, 1]> pose_model_backbone_layer3_1_attention_conv_mask_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_1_attention_conv_mask_weight_to_fp16"), val = tensor<fp16, [1, 304, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2637184)))];
            tensor<fp16, [1]> pose_model_backbone_layer3_1_attention_conv_mask_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_1_attention_conv_mask_bias_to_fp16"), val = tensor<fp16, [1]>([0x1p-22])];
            tensor<fp16, [1, 1, 16, 12]> context_mask_31_cast = conv(bias = pose_model_backbone_layer3_1_attention_conv_mask_bias_to_fp16, dilations = var_823, groups = var_133, pad = context_mask_31_pad_0, pad_type = context_mask_31_pad_type_0, strides = var_821, weight = pose_model_backbone_layer3_1_attention_conv_mask_weight_to_fp16, x = x_11_cast);
            tensor<int32, [3]> var_828 = const()[name = tensor<string, []>("op_828"), val = tensor<int32, [3]>([1, 1, 192])];
            tensor<fp16, [1, 1, 192]> input_197_cast = reshape(shape = var_828, x = context_mask_31_cast);
            tensor<fp16, [1, 1, 192]> context_mask_33_cast = softmax(axis = var_135, x = input_197_cast);
            tensor<int32, [1]> context_mask_35_axes_0 = const()[name = tensor<string, []>("context_mask_35_axes_0"), val = tensor<int32, [1]>([-1])];
            tensor<fp16, [1, 1, 192, 1]> context_mask_35_cast = expand_dims(axes = context_mask_35_axes_0, x = context_mask_33_cast);
            tensor<bool, []> context_11_transpose_x_0 = const()[name = tensor<string, []>("context_11_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> context_11_transpose_y_0 = const()[name = tensor<string, []>("context_11_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1, 304, 1]> context_11_cast = matmul(transpose_x = context_11_transpose_x_0, transpose_y = context_11_transpose_y_0, x = input_x_23_cast, y = context_mask_35_cast);
            tensor<int32, [4]> var_833 = const()[name = tensor<string, []>("op_833"), val = tensor<int32, [4]>([1, 304, 1, 1])];
            tensor<fp16, [1, 304, 1, 1]> input_199_cast = reshape(shape = var_833, x = context_11_cast);
            tensor<int32, [2]> var_840 = const()[name = tensor<string, []>("op_840"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_842 = const()[name = tensor<string, []>("op_842"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_201_pad_type_0 = const()[name = tensor<string, []>("input_201_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_201_pad_0 = const()[name = tensor<string, []>("input_201_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [19, 304, 1, 1]> pose_model_backbone_layer3_1_attention_channel_add_conv_0_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_1_attention_channel_add_conv_0_weight_to_fp16"), val = tensor<fp16, [19, 304, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2637888)))];
            tensor<fp16, [19]> pose_model_backbone_layer3_1_attention_channel_add_conv_0_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_1_attention_channel_add_conv_0_bias_to_fp16"), val = tensor<fp16, [19]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2649536)))];
            tensor<fp16, [1, 19, 1, 1]> input_201_cast = conv(bias = pose_model_backbone_layer3_1_attention_channel_add_conv_0_bias_to_fp16, dilations = var_842, groups = var_133, pad = input_201_pad_0, pad_type = input_201_pad_type_0, strides = var_840, weight = pose_model_backbone_layer3_1_attention_channel_add_conv_0_weight_to_fp16, x = input_199_cast);
            tensor<int32, [3]> input_203_axes_0 = const()[name = tensor<string, []>("input_203_axes_0"), val = tensor<int32, [3]>([-3, -2, -1])];
            tensor<fp16, [19, 1, 1]> pose_model_backbone_layer3_1_attention_channel_add_conv_1_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_1_attention_channel_add_conv_1_weight_to_fp16"), val = tensor<fp16, [19, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2649664)))];
            tensor<fp16, [19, 1, 1]> pose_model_backbone_layer3_1_attention_channel_add_conv_1_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_1_attention_channel_add_conv_1_bias_to_fp16"), val = tensor<fp16, [19, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2649792)))];
            tensor<fp16, [1, 19, 1, 1]> input_203_cast = layer_norm(axes = input_203_axes_0, beta = pose_model_backbone_layer3_1_attention_channel_add_conv_1_bias_to_fp16, epsilon = var_138_to_fp16, gamma = pose_model_backbone_layer3_1_attention_channel_add_conv_1_weight_to_fp16, x = input_201_cast);
            tensor<fp16, [1, 19, 1, 1]> input_205_cast = relu(x = input_203_cast);
            tensor<int32, [2]> var_852 = const()[name = tensor<string, []>("op_852"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_854 = const()[name = tensor<string, []>("op_854"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> channel_add_term_11_pad_type_0 = const()[name = tensor<string, []>("channel_add_term_11_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> channel_add_term_11_pad_0 = const()[name = tensor<string, []>("channel_add_term_11_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [304, 19, 1, 1]> pose_model_backbone_layer3_1_attention_channel_add_conv_3_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_1_attention_channel_add_conv_3_weight_to_fp16"), val = tensor<fp16, [304, 19, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2649920)))];
            tensor<fp16, [304]> pose_model_backbone_layer3_1_attention_channel_add_conv_3_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_1_attention_channel_add_conv_3_bias_to_fp16"), val = tensor<fp16, [304]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2661568)))];
            tensor<fp16, [1, 304, 1, 1]> channel_add_term_11_cast = conv(bias = pose_model_backbone_layer3_1_attention_channel_add_conv_3_bias_to_fp16, dilations = var_854, groups = var_133, pad = channel_add_term_11_pad_0, pad_type = channel_add_term_11_pad_type_0, strides = var_852, weight = pose_model_backbone_layer3_1_attention_channel_add_conv_3_weight_to_fp16, x = input_205_cast);
            tensor<fp16, [1, 304, 16, 12]> out_23_cast = add(x = x_11_cast, y = channel_add_term_11_cast);
            tensor<fp16, [1, 304, 16, 12]> input_207_cast = add(x = out_23_cast, y = input_187_cast);
            tensor<fp16, [1, 304, 16, 12]> input_209_cast = relu(x = input_207_cast);
            tensor<int32, [2]> var_866 = const()[name = tensor<string, []>("op_866"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_868 = const()[name = tensor<string, []>("op_868"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_211_pad_type_0 = const()[name = tensor<string, []>("input_211_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_211_pad_0 = const()[name = tensor<string, []>("input_211_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [304, 304, 1, 1]> pose_model_backbone_layer3_2_conv1_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_2_conv1_weight_to_fp16"), val = tensor<fp16, [304, 304, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2662272)))];
            tensor<fp16, [304]> pose_model_backbone_layer3_2_conv1_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_2_conv1_bias_to_fp16"), val = tensor<fp16, [304]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2847168)))];
            tensor<fp16, [1, 304, 16, 12]> input_211_cast = conv(bias = pose_model_backbone_layer3_2_conv1_bias_to_fp16, dilations = var_868, groups = var_133, pad = input_211_pad_0, pad_type = input_211_pad_type_0, strides = var_866, weight = pose_model_backbone_layer3_2_conv1_weight_to_fp16, x = input_209_cast);
            tensor<fp16, [1, 304, 16, 12]> input_213_cast = relu(x = input_211_cast);
            tensor<int32, [2]> var_874 = const()[name = tensor<string, []>("op_874"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_876 = const()[name = tensor<string, []>("op_876"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_215_pad_type_0 = const()[name = tensor<string, []>("input_215_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_215_pad_0 = const()[name = tensor<string, []>("input_215_pad_0"), val = tensor<int32, [4]>([2, 2, 2, 2])];
            tensor<fp16, [304, 19, 5, 5]> pose_model_backbone_layer3_2_conv2_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_2_conv2_weight_to_fp16"), val = tensor<fp16, [304, 19, 5, 5]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2847872)))];
            tensor<fp16, [304]> pose_model_backbone_layer3_2_conv2_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_2_conv2_bias_to_fp16"), val = tensor<fp16, [304]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3136768)))];
            tensor<fp16, [1, 304, 16, 12]> input_215_cast = conv(bias = pose_model_backbone_layer3_2_conv2_bias_to_fp16, dilations = var_876, groups = var_137, pad = input_215_pad_0, pad_type = input_215_pad_type_0, strides = var_874, weight = pose_model_backbone_layer3_2_conv2_weight_to_fp16, x = input_213_cast);
            tensor<fp16, [1, 304, 16, 12]> input_217_cast = relu(x = input_215_cast);
            tensor<int32, [2]> var_882 = const()[name = tensor<string, []>("op_882"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_884 = const()[name = tensor<string, []>("op_884"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_13_pad_type_0 = const()[name = tensor<string, []>("x_13_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_13_pad_0 = const()[name = tensor<string, []>("x_13_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [304, 304, 1, 1]> pose_model_backbone_layer3_2_conv3_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_2_conv3_weight_to_fp16"), val = tensor<fp16, [304, 304, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3137472)))];
            tensor<fp16, [304]> pose_model_backbone_layer3_2_conv3_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_2_conv3_bias_to_fp16"), val = tensor<fp16, [304]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3322368)))];
            tensor<fp16, [1, 304, 16, 12]> x_13_cast = conv(bias = pose_model_backbone_layer3_2_conv3_bias_to_fp16, dilations = var_884, groups = var_133, pad = x_13_pad_0, pad_type = x_13_pad_type_0, strides = var_882, weight = pose_model_backbone_layer3_2_conv3_weight_to_fp16, x = input_217_cast);
            tensor<int32, [3]> var_897 = const()[name = tensor<string, []>("op_897"), val = tensor<int32, [3]>([1, 304, 192])];
            tensor<fp16, [1, 304, 192]> input_x_25_cast = reshape(shape = var_897, x = x_13_cast);
            tensor<int32, [1]> input_x_27_axes_0 = const()[name = tensor<string, []>("input_x_27_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 304, 192]> input_x_27_cast = expand_dims(axes = input_x_27_axes_0, x = input_x_25_cast);
            tensor<int32, [2]> var_902 = const()[name = tensor<string, []>("op_902"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_904 = const()[name = tensor<string, []>("op_904"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> context_mask_37_pad_type_0 = const()[name = tensor<string, []>("context_mask_37_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> context_mask_37_pad_0 = const()[name = tensor<string, []>("context_mask_37_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1, 304, 1, 1]> pose_model_backbone_layer3_2_attention_conv_mask_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_2_attention_conv_mask_weight_to_fp16"), val = tensor<fp16, [1, 304, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3323072)))];
            tensor<fp16, [1]> pose_model_backbone_layer3_2_attention_conv_mask_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_2_attention_conv_mask_bias_to_fp16"), val = tensor<fp16, [1]>([-0x1.dp-20])];
            tensor<fp16, [1, 1, 16, 12]> context_mask_37_cast = conv(bias = pose_model_backbone_layer3_2_attention_conv_mask_bias_to_fp16, dilations = var_904, groups = var_133, pad = context_mask_37_pad_0, pad_type = context_mask_37_pad_type_0, strides = var_902, weight = pose_model_backbone_layer3_2_attention_conv_mask_weight_to_fp16, x = x_13_cast);
            tensor<int32, [3]> var_909 = const()[name = tensor<string, []>("op_909"), val = tensor<int32, [3]>([1, 1, 192])];
            tensor<fp16, [1, 1, 192]> input_219_cast = reshape(shape = var_909, x = context_mask_37_cast);
            tensor<fp16, [1, 1, 192]> context_mask_39_cast = softmax(axis = var_135, x = input_219_cast);
            tensor<int32, [1]> context_mask_41_axes_0 = const()[name = tensor<string, []>("context_mask_41_axes_0"), val = tensor<int32, [1]>([-1])];
            tensor<fp16, [1, 1, 192, 1]> context_mask_41_cast = expand_dims(axes = context_mask_41_axes_0, x = context_mask_39_cast);
            tensor<bool, []> context_13_transpose_x_0 = const()[name = tensor<string, []>("context_13_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> context_13_transpose_y_0 = const()[name = tensor<string, []>("context_13_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1, 304, 1]> context_13_cast = matmul(transpose_x = context_13_transpose_x_0, transpose_y = context_13_transpose_y_0, x = input_x_27_cast, y = context_mask_41_cast);
            tensor<int32, [4]> var_914 = const()[name = tensor<string, []>("op_914"), val = tensor<int32, [4]>([1, 304, 1, 1])];
            tensor<fp16, [1, 304, 1, 1]> input_221_cast = reshape(shape = var_914, x = context_13_cast);
            tensor<int32, [2]> var_921 = const()[name = tensor<string, []>("op_921"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_923 = const()[name = tensor<string, []>("op_923"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_223_pad_type_0 = const()[name = tensor<string, []>("input_223_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_223_pad_0 = const()[name = tensor<string, []>("input_223_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [19, 304, 1, 1]> pose_model_backbone_layer3_2_attention_channel_add_conv_0_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_2_attention_channel_add_conv_0_weight_to_fp16"), val = tensor<fp16, [19, 304, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3323776)))];
            tensor<fp16, [19]> pose_model_backbone_layer3_2_attention_channel_add_conv_0_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_2_attention_channel_add_conv_0_bias_to_fp16"), val = tensor<fp16, [19]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3335424)))];
            tensor<fp16, [1, 19, 1, 1]> input_223_cast = conv(bias = pose_model_backbone_layer3_2_attention_channel_add_conv_0_bias_to_fp16, dilations = var_923, groups = var_133, pad = input_223_pad_0, pad_type = input_223_pad_type_0, strides = var_921, weight = pose_model_backbone_layer3_2_attention_channel_add_conv_0_weight_to_fp16, x = input_221_cast);
            tensor<int32, [3]> input_225_axes_0 = const()[name = tensor<string, []>("input_225_axes_0"), val = tensor<int32, [3]>([-3, -2, -1])];
            tensor<fp16, [19, 1, 1]> pose_model_backbone_layer3_2_attention_channel_add_conv_1_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_2_attention_channel_add_conv_1_weight_to_fp16"), val = tensor<fp16, [19, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3335552)))];
            tensor<fp16, [19, 1, 1]> pose_model_backbone_layer3_2_attention_channel_add_conv_1_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_2_attention_channel_add_conv_1_bias_to_fp16"), val = tensor<fp16, [19, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3335680)))];
            tensor<fp16, [1, 19, 1, 1]> input_225_cast = layer_norm(axes = input_225_axes_0, beta = pose_model_backbone_layer3_2_attention_channel_add_conv_1_bias_to_fp16, epsilon = var_138_to_fp16, gamma = pose_model_backbone_layer3_2_attention_channel_add_conv_1_weight_to_fp16, x = input_223_cast);
            tensor<fp16, [1, 19, 1, 1]> input_227_cast = relu(x = input_225_cast);
            tensor<int32, [2]> var_933 = const()[name = tensor<string, []>("op_933"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_935 = const()[name = tensor<string, []>("op_935"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> channel_add_term_13_pad_type_0 = const()[name = tensor<string, []>("channel_add_term_13_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> channel_add_term_13_pad_0 = const()[name = tensor<string, []>("channel_add_term_13_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [304, 19, 1, 1]> pose_model_backbone_layer3_2_attention_channel_add_conv_3_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_2_attention_channel_add_conv_3_weight_to_fp16"), val = tensor<fp16, [304, 19, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3335808)))];
            tensor<fp16, [304]> pose_model_backbone_layer3_2_attention_channel_add_conv_3_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_2_attention_channel_add_conv_3_bias_to_fp16"), val = tensor<fp16, [304]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3347456)))];
            tensor<fp16, [1, 304, 1, 1]> channel_add_term_13_cast = conv(bias = pose_model_backbone_layer3_2_attention_channel_add_conv_3_bias_to_fp16, dilations = var_935, groups = var_133, pad = channel_add_term_13_pad_0, pad_type = channel_add_term_13_pad_type_0, strides = var_933, weight = pose_model_backbone_layer3_2_attention_channel_add_conv_3_weight_to_fp16, x = input_227_cast);
            tensor<fp16, [1, 304, 16, 12]> out_25_cast = add(x = x_13_cast, y = channel_add_term_13_cast);
            tensor<fp16, [1, 304, 16, 12]> input_229_cast = add(x = out_25_cast, y = input_209_cast);
            tensor<fp16, [1, 304, 16, 12]> input_231_cast = relu(x = input_229_cast);
            tensor<int32, [2]> var_947 = const()[name = tensor<string, []>("op_947"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_949 = const()[name = tensor<string, []>("op_949"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_233_pad_type_0 = const()[name = tensor<string, []>("input_233_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_233_pad_0 = const()[name = tensor<string, []>("input_233_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [304, 304, 1, 1]> pose_model_backbone_layer3_3_conv1_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_3_conv1_weight_to_fp16"), val = tensor<fp16, [304, 304, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3348160)))];
            tensor<fp16, [304]> pose_model_backbone_layer3_3_conv1_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_3_conv1_bias_to_fp16"), val = tensor<fp16, [304]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3533056)))];
            tensor<fp16, [1, 304, 16, 12]> input_233_cast = conv(bias = pose_model_backbone_layer3_3_conv1_bias_to_fp16, dilations = var_949, groups = var_133, pad = input_233_pad_0, pad_type = input_233_pad_type_0, strides = var_947, weight = pose_model_backbone_layer3_3_conv1_weight_to_fp16, x = input_231_cast);
            tensor<fp16, [1, 304, 16, 12]> input_235_cast = relu(x = input_233_cast);
            tensor<int32, [2]> var_955 = const()[name = tensor<string, []>("op_955"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_957 = const()[name = tensor<string, []>("op_957"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_237_pad_type_0 = const()[name = tensor<string, []>("input_237_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_237_pad_0 = const()[name = tensor<string, []>("input_237_pad_0"), val = tensor<int32, [4]>([2, 2, 2, 2])];
            tensor<fp16, [304, 19, 5, 5]> pose_model_backbone_layer3_3_conv2_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_3_conv2_weight_to_fp16"), val = tensor<fp16, [304, 19, 5, 5]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3533760)))];
            tensor<fp16, [304]> pose_model_backbone_layer3_3_conv2_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_3_conv2_bias_to_fp16"), val = tensor<fp16, [304]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3822656)))];
            tensor<fp16, [1, 304, 16, 12]> input_237_cast = conv(bias = pose_model_backbone_layer3_3_conv2_bias_to_fp16, dilations = var_957, groups = var_137, pad = input_237_pad_0, pad_type = input_237_pad_type_0, strides = var_955, weight = pose_model_backbone_layer3_3_conv2_weight_to_fp16, x = input_235_cast);
            tensor<fp16, [1, 304, 16, 12]> input_239_cast = relu(x = input_237_cast);
            tensor<int32, [2]> var_963 = const()[name = tensor<string, []>("op_963"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_965 = const()[name = tensor<string, []>("op_965"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_15_pad_type_0 = const()[name = tensor<string, []>("x_15_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_15_pad_0 = const()[name = tensor<string, []>("x_15_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [304, 304, 1, 1]> pose_model_backbone_layer3_3_conv3_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_3_conv3_weight_to_fp16"), val = tensor<fp16, [304, 304, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3823360)))];
            tensor<fp16, [304]> pose_model_backbone_layer3_3_conv3_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_3_conv3_bias_to_fp16"), val = tensor<fp16, [304]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4008256)))];
            tensor<fp16, [1, 304, 16, 12]> x_15_cast = conv(bias = pose_model_backbone_layer3_3_conv3_bias_to_fp16, dilations = var_965, groups = var_133, pad = x_15_pad_0, pad_type = x_15_pad_type_0, strides = var_963, weight = pose_model_backbone_layer3_3_conv3_weight_to_fp16, x = input_239_cast);
            tensor<int32, [3]> var_978 = const()[name = tensor<string, []>("op_978"), val = tensor<int32, [3]>([1, 304, 192])];
            tensor<fp16, [1, 304, 192]> input_x_29_cast = reshape(shape = var_978, x = x_15_cast);
            tensor<int32, [1]> input_x_31_axes_0 = const()[name = tensor<string, []>("input_x_31_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 304, 192]> input_x_31_cast = expand_dims(axes = input_x_31_axes_0, x = input_x_29_cast);
            tensor<int32, [2]> var_983 = const()[name = tensor<string, []>("op_983"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_985 = const()[name = tensor<string, []>("op_985"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> context_mask_43_pad_type_0 = const()[name = tensor<string, []>("context_mask_43_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> context_mask_43_pad_0 = const()[name = tensor<string, []>("context_mask_43_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1, 304, 1, 1]> pose_model_backbone_layer3_3_attention_conv_mask_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_3_attention_conv_mask_weight_to_fp16"), val = tensor<fp16, [1, 304, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4008960)))];
            tensor<fp16, [1]> pose_model_backbone_layer3_3_attention_conv_mask_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_3_attention_conv_mask_bias_to_fp16"), val = tensor<fp16, [1]>([-0x1.4p-21])];
            tensor<fp16, [1, 1, 16, 12]> context_mask_43_cast = conv(bias = pose_model_backbone_layer3_3_attention_conv_mask_bias_to_fp16, dilations = var_985, groups = var_133, pad = context_mask_43_pad_0, pad_type = context_mask_43_pad_type_0, strides = var_983, weight = pose_model_backbone_layer3_3_attention_conv_mask_weight_to_fp16, x = x_15_cast);
            tensor<int32, [3]> var_990 = const()[name = tensor<string, []>("op_990"), val = tensor<int32, [3]>([1, 1, 192])];
            tensor<fp16, [1, 1, 192]> input_241_cast = reshape(shape = var_990, x = context_mask_43_cast);
            tensor<fp16, [1, 1, 192]> context_mask_45_cast = softmax(axis = var_135, x = input_241_cast);
            tensor<int32, [1]> context_mask_47_axes_0 = const()[name = tensor<string, []>("context_mask_47_axes_0"), val = tensor<int32, [1]>([-1])];
            tensor<fp16, [1, 1, 192, 1]> context_mask_47_cast = expand_dims(axes = context_mask_47_axes_0, x = context_mask_45_cast);
            tensor<bool, []> context_15_transpose_x_0 = const()[name = tensor<string, []>("context_15_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> context_15_transpose_y_0 = const()[name = tensor<string, []>("context_15_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1, 304, 1]> context_15_cast = matmul(transpose_x = context_15_transpose_x_0, transpose_y = context_15_transpose_y_0, x = input_x_31_cast, y = context_mask_47_cast);
            tensor<int32, [4]> var_995 = const()[name = tensor<string, []>("op_995"), val = tensor<int32, [4]>([1, 304, 1, 1])];
            tensor<fp16, [1, 304, 1, 1]> input_243_cast = reshape(shape = var_995, x = context_15_cast);
            tensor<int32, [2]> var_1002 = const()[name = tensor<string, []>("op_1002"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1004 = const()[name = tensor<string, []>("op_1004"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_245_pad_type_0 = const()[name = tensor<string, []>("input_245_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_245_pad_0 = const()[name = tensor<string, []>("input_245_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [19, 304, 1, 1]> pose_model_backbone_layer3_3_attention_channel_add_conv_0_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_3_attention_channel_add_conv_0_weight_to_fp16"), val = tensor<fp16, [19, 304, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4009664)))];
            tensor<fp16, [19]> pose_model_backbone_layer3_3_attention_channel_add_conv_0_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_3_attention_channel_add_conv_0_bias_to_fp16"), val = tensor<fp16, [19]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4021312)))];
            tensor<fp16, [1, 19, 1, 1]> input_245_cast = conv(bias = pose_model_backbone_layer3_3_attention_channel_add_conv_0_bias_to_fp16, dilations = var_1004, groups = var_133, pad = input_245_pad_0, pad_type = input_245_pad_type_0, strides = var_1002, weight = pose_model_backbone_layer3_3_attention_channel_add_conv_0_weight_to_fp16, x = input_243_cast);
            tensor<int32, [3]> input_247_axes_0 = const()[name = tensor<string, []>("input_247_axes_0"), val = tensor<int32, [3]>([-3, -2, -1])];
            tensor<fp16, [19, 1, 1]> pose_model_backbone_layer3_3_attention_channel_add_conv_1_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_3_attention_channel_add_conv_1_weight_to_fp16"), val = tensor<fp16, [19, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4021440)))];
            tensor<fp16, [19, 1, 1]> pose_model_backbone_layer3_3_attention_channel_add_conv_1_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_3_attention_channel_add_conv_1_bias_to_fp16"), val = tensor<fp16, [19, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4021568)))];
            tensor<fp16, [1, 19, 1, 1]> input_247_cast = layer_norm(axes = input_247_axes_0, beta = pose_model_backbone_layer3_3_attention_channel_add_conv_1_bias_to_fp16, epsilon = var_138_to_fp16, gamma = pose_model_backbone_layer3_3_attention_channel_add_conv_1_weight_to_fp16, x = input_245_cast);
            tensor<fp16, [1, 19, 1, 1]> input_249_cast = relu(x = input_247_cast);
            tensor<int32, [2]> var_1014 = const()[name = tensor<string, []>("op_1014"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1016 = const()[name = tensor<string, []>("op_1016"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> channel_add_term_15_pad_type_0 = const()[name = tensor<string, []>("channel_add_term_15_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> channel_add_term_15_pad_0 = const()[name = tensor<string, []>("channel_add_term_15_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [304, 19, 1, 1]> pose_model_backbone_layer3_3_attention_channel_add_conv_3_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_3_attention_channel_add_conv_3_weight_to_fp16"), val = tensor<fp16, [304, 19, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4021696)))];
            tensor<fp16, [304]> pose_model_backbone_layer3_3_attention_channel_add_conv_3_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_3_attention_channel_add_conv_3_bias_to_fp16"), val = tensor<fp16, [304]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4033344)))];
            tensor<fp16, [1, 304, 1, 1]> channel_add_term_15_cast = conv(bias = pose_model_backbone_layer3_3_attention_channel_add_conv_3_bias_to_fp16, dilations = var_1016, groups = var_133, pad = channel_add_term_15_pad_0, pad_type = channel_add_term_15_pad_type_0, strides = var_1014, weight = pose_model_backbone_layer3_3_attention_channel_add_conv_3_weight_to_fp16, x = input_249_cast);
            tensor<fp16, [1, 304, 16, 12]> out_27_cast = add(x = x_15_cast, y = channel_add_term_15_cast);
            tensor<fp16, [1, 304, 16, 12]> input_251_cast = add(x = out_27_cast, y = input_231_cast);
            tensor<fp16, [1, 304, 16, 12]> input_253_cast = relu(x = input_251_cast);
            tensor<int32, [2]> var_1028 = const()[name = tensor<string, []>("op_1028"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1030 = const()[name = tensor<string, []>("op_1030"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_255_pad_type_0 = const()[name = tensor<string, []>("input_255_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_255_pad_0 = const()[name = tensor<string, []>("input_255_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [304, 304, 1, 1]> pose_model_backbone_layer3_4_conv1_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_4_conv1_weight_to_fp16"), val = tensor<fp16, [304, 304, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4034048)))];
            tensor<fp16, [304]> pose_model_backbone_layer3_4_conv1_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_4_conv1_bias_to_fp16"), val = tensor<fp16, [304]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4218944)))];
            tensor<fp16, [1, 304, 16, 12]> input_255_cast = conv(bias = pose_model_backbone_layer3_4_conv1_bias_to_fp16, dilations = var_1030, groups = var_133, pad = input_255_pad_0, pad_type = input_255_pad_type_0, strides = var_1028, weight = pose_model_backbone_layer3_4_conv1_weight_to_fp16, x = input_253_cast);
            tensor<fp16, [1, 304, 16, 12]> input_257_cast = relu(x = input_255_cast);
            tensor<int32, [2]> var_1036 = const()[name = tensor<string, []>("op_1036"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1038 = const()[name = tensor<string, []>("op_1038"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_259_pad_type_0 = const()[name = tensor<string, []>("input_259_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_259_pad_0 = const()[name = tensor<string, []>("input_259_pad_0"), val = tensor<int32, [4]>([2, 2, 2, 2])];
            tensor<fp16, [304, 19, 5, 5]> pose_model_backbone_layer3_4_conv2_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_4_conv2_weight_to_fp16"), val = tensor<fp16, [304, 19, 5, 5]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4219648)))];
            tensor<fp16, [304]> pose_model_backbone_layer3_4_conv2_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_4_conv2_bias_to_fp16"), val = tensor<fp16, [304]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4508544)))];
            tensor<fp16, [1, 304, 16, 12]> input_259_cast = conv(bias = pose_model_backbone_layer3_4_conv2_bias_to_fp16, dilations = var_1038, groups = var_137, pad = input_259_pad_0, pad_type = input_259_pad_type_0, strides = var_1036, weight = pose_model_backbone_layer3_4_conv2_weight_to_fp16, x = input_257_cast);
            tensor<fp16, [1, 304, 16, 12]> input_261_cast = relu(x = input_259_cast);
            tensor<int32, [2]> var_1044 = const()[name = tensor<string, []>("op_1044"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1046 = const()[name = tensor<string, []>("op_1046"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_17_pad_type_0 = const()[name = tensor<string, []>("x_17_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_17_pad_0 = const()[name = tensor<string, []>("x_17_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [304, 304, 1, 1]> pose_model_backbone_layer3_4_conv3_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_4_conv3_weight_to_fp16"), val = tensor<fp16, [304, 304, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4509248)))];
            tensor<fp16, [304]> pose_model_backbone_layer3_4_conv3_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_4_conv3_bias_to_fp16"), val = tensor<fp16, [304]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4694144)))];
            tensor<fp16, [1, 304, 16, 12]> x_17_cast = conv(bias = pose_model_backbone_layer3_4_conv3_bias_to_fp16, dilations = var_1046, groups = var_133, pad = x_17_pad_0, pad_type = x_17_pad_type_0, strides = var_1044, weight = pose_model_backbone_layer3_4_conv3_weight_to_fp16, x = input_261_cast);
            tensor<int32, [3]> var_1059 = const()[name = tensor<string, []>("op_1059"), val = tensor<int32, [3]>([1, 304, 192])];
            tensor<fp16, [1, 304, 192]> input_x_33_cast = reshape(shape = var_1059, x = x_17_cast);
            tensor<int32, [1]> input_x_35_axes_0 = const()[name = tensor<string, []>("input_x_35_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 304, 192]> input_x_35_cast = expand_dims(axes = input_x_35_axes_0, x = input_x_33_cast);
            tensor<int32, [2]> var_1064 = const()[name = tensor<string, []>("op_1064"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1066 = const()[name = tensor<string, []>("op_1066"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> context_mask_49_pad_type_0 = const()[name = tensor<string, []>("context_mask_49_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> context_mask_49_pad_0 = const()[name = tensor<string, []>("context_mask_49_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1, 304, 1, 1]> pose_model_backbone_layer3_4_attention_conv_mask_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_4_attention_conv_mask_weight_to_fp16"), val = tensor<fp16, [1, 304, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4694848)))];
            tensor<fp16, [1]> pose_model_backbone_layer3_4_attention_conv_mask_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_4_attention_conv_mask_bias_to_fp16"), val = tensor<fp16, [1]>([0x1.cp-20])];
            tensor<fp16, [1, 1, 16, 12]> context_mask_49_cast = conv(bias = pose_model_backbone_layer3_4_attention_conv_mask_bias_to_fp16, dilations = var_1066, groups = var_133, pad = context_mask_49_pad_0, pad_type = context_mask_49_pad_type_0, strides = var_1064, weight = pose_model_backbone_layer3_4_attention_conv_mask_weight_to_fp16, x = x_17_cast);
            tensor<int32, [3]> var_1071 = const()[name = tensor<string, []>("op_1071"), val = tensor<int32, [3]>([1, 1, 192])];
            tensor<fp16, [1, 1, 192]> input_263_cast = reshape(shape = var_1071, x = context_mask_49_cast);
            tensor<fp16, [1, 1, 192]> context_mask_51_cast = softmax(axis = var_135, x = input_263_cast);
            tensor<int32, [1]> context_mask_53_axes_0 = const()[name = tensor<string, []>("context_mask_53_axes_0"), val = tensor<int32, [1]>([-1])];
            tensor<fp16, [1, 1, 192, 1]> context_mask_53_cast = expand_dims(axes = context_mask_53_axes_0, x = context_mask_51_cast);
            tensor<bool, []> context_17_transpose_x_0 = const()[name = tensor<string, []>("context_17_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> context_17_transpose_y_0 = const()[name = tensor<string, []>("context_17_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1, 304, 1]> context_17_cast = matmul(transpose_x = context_17_transpose_x_0, transpose_y = context_17_transpose_y_0, x = input_x_35_cast, y = context_mask_53_cast);
            tensor<int32, [4]> var_1076 = const()[name = tensor<string, []>("op_1076"), val = tensor<int32, [4]>([1, 304, 1, 1])];
            tensor<fp16, [1, 304, 1, 1]> input_265_cast = reshape(shape = var_1076, x = context_17_cast);
            tensor<int32, [2]> var_1083 = const()[name = tensor<string, []>("op_1083"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1085 = const()[name = tensor<string, []>("op_1085"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_267_pad_type_0 = const()[name = tensor<string, []>("input_267_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_267_pad_0 = const()[name = tensor<string, []>("input_267_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [19, 304, 1, 1]> pose_model_backbone_layer3_4_attention_channel_add_conv_0_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_4_attention_channel_add_conv_0_weight_to_fp16"), val = tensor<fp16, [19, 304, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4695552)))];
            tensor<fp16, [19]> pose_model_backbone_layer3_4_attention_channel_add_conv_0_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_4_attention_channel_add_conv_0_bias_to_fp16"), val = tensor<fp16, [19]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4707200)))];
            tensor<fp16, [1, 19, 1, 1]> input_267_cast = conv(bias = pose_model_backbone_layer3_4_attention_channel_add_conv_0_bias_to_fp16, dilations = var_1085, groups = var_133, pad = input_267_pad_0, pad_type = input_267_pad_type_0, strides = var_1083, weight = pose_model_backbone_layer3_4_attention_channel_add_conv_0_weight_to_fp16, x = input_265_cast);
            tensor<int32, [3]> input_269_axes_0 = const()[name = tensor<string, []>("input_269_axes_0"), val = tensor<int32, [3]>([-3, -2, -1])];
            tensor<fp16, [19, 1, 1]> pose_model_backbone_layer3_4_attention_channel_add_conv_1_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_4_attention_channel_add_conv_1_weight_to_fp16"), val = tensor<fp16, [19, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4707328)))];
            tensor<fp16, [19, 1, 1]> pose_model_backbone_layer3_4_attention_channel_add_conv_1_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_4_attention_channel_add_conv_1_bias_to_fp16"), val = tensor<fp16, [19, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4707456)))];
            tensor<fp16, [1, 19, 1, 1]> input_269_cast = layer_norm(axes = input_269_axes_0, beta = pose_model_backbone_layer3_4_attention_channel_add_conv_1_bias_to_fp16, epsilon = var_138_to_fp16, gamma = pose_model_backbone_layer3_4_attention_channel_add_conv_1_weight_to_fp16, x = input_267_cast);
            tensor<fp16, [1, 19, 1, 1]> input_271_cast = relu(x = input_269_cast);
            tensor<int32, [2]> var_1095 = const()[name = tensor<string, []>("op_1095"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1097 = const()[name = tensor<string, []>("op_1097"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> channel_add_term_17_pad_type_0 = const()[name = tensor<string, []>("channel_add_term_17_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> channel_add_term_17_pad_0 = const()[name = tensor<string, []>("channel_add_term_17_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [304, 19, 1, 1]> pose_model_backbone_layer3_4_attention_channel_add_conv_3_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_4_attention_channel_add_conv_3_weight_to_fp16"), val = tensor<fp16, [304, 19, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4707584)))];
            tensor<fp16, [304]> pose_model_backbone_layer3_4_attention_channel_add_conv_3_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_4_attention_channel_add_conv_3_bias_to_fp16"), val = tensor<fp16, [304]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4719232)))];
            tensor<fp16, [1, 304, 1, 1]> channel_add_term_17_cast = conv(bias = pose_model_backbone_layer3_4_attention_channel_add_conv_3_bias_to_fp16, dilations = var_1097, groups = var_133, pad = channel_add_term_17_pad_0, pad_type = channel_add_term_17_pad_type_0, strides = var_1095, weight = pose_model_backbone_layer3_4_attention_channel_add_conv_3_weight_to_fp16, x = input_271_cast);
            tensor<fp16, [1, 304, 16, 12]> out_29_cast = add(x = x_17_cast, y = channel_add_term_17_cast);
            tensor<fp16, [1, 304, 16, 12]> input_273_cast = add(x = out_29_cast, y = input_253_cast);
            tensor<fp16, [1, 304, 16, 12]> input_275_cast = relu(x = input_273_cast);
            tensor<int32, [2]> var_1109 = const()[name = tensor<string, []>("op_1109"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1111 = const()[name = tensor<string, []>("op_1111"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_277_pad_type_0 = const()[name = tensor<string, []>("input_277_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_277_pad_0 = const()[name = tensor<string, []>("input_277_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [304, 304, 1, 1]> pose_model_backbone_layer3_5_conv1_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_5_conv1_weight_to_fp16"), val = tensor<fp16, [304, 304, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4719936)))];
            tensor<fp16, [304]> pose_model_backbone_layer3_5_conv1_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_5_conv1_bias_to_fp16"), val = tensor<fp16, [304]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4904832)))];
            tensor<fp16, [1, 304, 16, 12]> input_277_cast = conv(bias = pose_model_backbone_layer3_5_conv1_bias_to_fp16, dilations = var_1111, groups = var_133, pad = input_277_pad_0, pad_type = input_277_pad_type_0, strides = var_1109, weight = pose_model_backbone_layer3_5_conv1_weight_to_fp16, x = input_275_cast);
            tensor<fp16, [1, 304, 16, 12]> input_279_cast = relu(x = input_277_cast);
            tensor<int32, [2]> var_1117 = const()[name = tensor<string, []>("op_1117"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1119 = const()[name = tensor<string, []>("op_1119"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_281_pad_type_0 = const()[name = tensor<string, []>("input_281_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_281_pad_0 = const()[name = tensor<string, []>("input_281_pad_0"), val = tensor<int32, [4]>([2, 2, 2, 2])];
            tensor<fp16, [304, 19, 5, 5]> pose_model_backbone_layer3_5_conv2_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_5_conv2_weight_to_fp16"), val = tensor<fp16, [304, 19, 5, 5]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4905536)))];
            tensor<fp16, [304]> pose_model_backbone_layer3_5_conv2_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_5_conv2_bias_to_fp16"), val = tensor<fp16, [304]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5194432)))];
            tensor<fp16, [1, 304, 16, 12]> input_281_cast = conv(bias = pose_model_backbone_layer3_5_conv2_bias_to_fp16, dilations = var_1119, groups = var_137, pad = input_281_pad_0, pad_type = input_281_pad_type_0, strides = var_1117, weight = pose_model_backbone_layer3_5_conv2_weight_to_fp16, x = input_279_cast);
            tensor<fp16, [1, 304, 16, 12]> input_283_cast = relu(x = input_281_cast);
            tensor<int32, [2]> var_1125 = const()[name = tensor<string, []>("op_1125"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1127 = const()[name = tensor<string, []>("op_1127"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_19_pad_type_0 = const()[name = tensor<string, []>("x_19_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_19_pad_0 = const()[name = tensor<string, []>("x_19_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [304, 304, 1, 1]> pose_model_backbone_layer3_5_conv3_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_5_conv3_weight_to_fp16"), val = tensor<fp16, [304, 304, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5195136)))];
            tensor<fp16, [304]> pose_model_backbone_layer3_5_conv3_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_5_conv3_bias_to_fp16"), val = tensor<fp16, [304]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5380032)))];
            tensor<fp16, [1, 304, 16, 12]> x_19_cast = conv(bias = pose_model_backbone_layer3_5_conv3_bias_to_fp16, dilations = var_1127, groups = var_133, pad = x_19_pad_0, pad_type = x_19_pad_type_0, strides = var_1125, weight = pose_model_backbone_layer3_5_conv3_weight_to_fp16, x = input_283_cast);
            tensor<int32, [3]> var_1140 = const()[name = tensor<string, []>("op_1140"), val = tensor<int32, [3]>([1, 304, 192])];
            tensor<fp16, [1, 304, 192]> input_x_37_cast = reshape(shape = var_1140, x = x_19_cast);
            tensor<int32, [1]> input_x_39_axes_0 = const()[name = tensor<string, []>("input_x_39_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 304, 192]> input_x_39_cast = expand_dims(axes = input_x_39_axes_0, x = input_x_37_cast);
            tensor<int32, [2]> var_1145 = const()[name = tensor<string, []>("op_1145"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1147 = const()[name = tensor<string, []>("op_1147"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> context_mask_55_pad_type_0 = const()[name = tensor<string, []>("context_mask_55_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> context_mask_55_pad_0 = const()[name = tensor<string, []>("context_mask_55_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1, 304, 1, 1]> pose_model_backbone_layer3_5_attention_conv_mask_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_5_attention_conv_mask_weight_to_fp16"), val = tensor<fp16, [1, 304, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5380736)))];
            tensor<fp16, [1]> pose_model_backbone_layer3_5_attention_conv_mask_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_5_attention_conv_mask_bias_to_fp16"), val = tensor<fp16, [1]>([-0x1.ap-21])];
            tensor<fp16, [1, 1, 16, 12]> context_mask_55_cast = conv(bias = pose_model_backbone_layer3_5_attention_conv_mask_bias_to_fp16, dilations = var_1147, groups = var_133, pad = context_mask_55_pad_0, pad_type = context_mask_55_pad_type_0, strides = var_1145, weight = pose_model_backbone_layer3_5_attention_conv_mask_weight_to_fp16, x = x_19_cast);
            tensor<int32, [3]> var_1152 = const()[name = tensor<string, []>("op_1152"), val = tensor<int32, [3]>([1, 1, 192])];
            tensor<fp16, [1, 1, 192]> input_285_cast = reshape(shape = var_1152, x = context_mask_55_cast);
            tensor<fp16, [1, 1, 192]> context_mask_57_cast = softmax(axis = var_135, x = input_285_cast);
            tensor<int32, [1]> context_mask_59_axes_0 = const()[name = tensor<string, []>("context_mask_59_axes_0"), val = tensor<int32, [1]>([-1])];
            tensor<fp16, [1, 1, 192, 1]> context_mask_59_cast = expand_dims(axes = context_mask_59_axes_0, x = context_mask_57_cast);
            tensor<bool, []> context_19_transpose_x_0 = const()[name = tensor<string, []>("context_19_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> context_19_transpose_y_0 = const()[name = tensor<string, []>("context_19_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1, 304, 1]> context_19_cast = matmul(transpose_x = context_19_transpose_x_0, transpose_y = context_19_transpose_y_0, x = input_x_39_cast, y = context_mask_59_cast);
            tensor<int32, [4]> var_1157 = const()[name = tensor<string, []>("op_1157"), val = tensor<int32, [4]>([1, 304, 1, 1])];
            tensor<fp16, [1, 304, 1, 1]> input_287_cast = reshape(shape = var_1157, x = context_19_cast);
            tensor<int32, [2]> var_1164 = const()[name = tensor<string, []>("op_1164"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1166 = const()[name = tensor<string, []>("op_1166"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_289_pad_type_0 = const()[name = tensor<string, []>("input_289_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_289_pad_0 = const()[name = tensor<string, []>("input_289_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [19, 304, 1, 1]> pose_model_backbone_layer3_5_attention_channel_add_conv_0_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_5_attention_channel_add_conv_0_weight_to_fp16"), val = tensor<fp16, [19, 304, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5381440)))];
            tensor<fp16, [19]> pose_model_backbone_layer3_5_attention_channel_add_conv_0_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_5_attention_channel_add_conv_0_bias_to_fp16"), val = tensor<fp16, [19]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5393088)))];
            tensor<fp16, [1, 19, 1, 1]> input_289_cast = conv(bias = pose_model_backbone_layer3_5_attention_channel_add_conv_0_bias_to_fp16, dilations = var_1166, groups = var_133, pad = input_289_pad_0, pad_type = input_289_pad_type_0, strides = var_1164, weight = pose_model_backbone_layer3_5_attention_channel_add_conv_0_weight_to_fp16, x = input_287_cast);
            tensor<int32, [3]> input_291_axes_0 = const()[name = tensor<string, []>("input_291_axes_0"), val = tensor<int32, [3]>([-3, -2, -1])];
            tensor<fp16, [19, 1, 1]> pose_model_backbone_layer3_5_attention_channel_add_conv_1_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_5_attention_channel_add_conv_1_weight_to_fp16"), val = tensor<fp16, [19, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5393216)))];
            tensor<fp16, [19, 1, 1]> pose_model_backbone_layer3_5_attention_channel_add_conv_1_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_5_attention_channel_add_conv_1_bias_to_fp16"), val = tensor<fp16, [19, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5393344)))];
            tensor<fp16, [1, 19, 1, 1]> input_291_cast = layer_norm(axes = input_291_axes_0, beta = pose_model_backbone_layer3_5_attention_channel_add_conv_1_bias_to_fp16, epsilon = var_138_to_fp16, gamma = pose_model_backbone_layer3_5_attention_channel_add_conv_1_weight_to_fp16, x = input_289_cast);
            tensor<fp16, [1, 19, 1, 1]> input_293_cast = relu(x = input_291_cast);
            tensor<int32, [2]> var_1176 = const()[name = tensor<string, []>("op_1176"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1178 = const()[name = tensor<string, []>("op_1178"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> channel_add_term_19_pad_type_0 = const()[name = tensor<string, []>("channel_add_term_19_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> channel_add_term_19_pad_0 = const()[name = tensor<string, []>("channel_add_term_19_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [304, 19, 1, 1]> pose_model_backbone_layer3_5_attention_channel_add_conv_3_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_5_attention_channel_add_conv_3_weight_to_fp16"), val = tensor<fp16, [304, 19, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5393472)))];
            tensor<fp16, [304]> pose_model_backbone_layer3_5_attention_channel_add_conv_3_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_5_attention_channel_add_conv_3_bias_to_fp16"), val = tensor<fp16, [304]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5405120)))];
            tensor<fp16, [1, 304, 1, 1]> channel_add_term_19_cast = conv(bias = pose_model_backbone_layer3_5_attention_channel_add_conv_3_bias_to_fp16, dilations = var_1178, groups = var_133, pad = channel_add_term_19_pad_0, pad_type = channel_add_term_19_pad_type_0, strides = var_1176, weight = pose_model_backbone_layer3_5_attention_channel_add_conv_3_weight_to_fp16, x = input_293_cast);
            tensor<fp16, [1, 304, 16, 12]> out_31_cast = add(x = x_19_cast, y = channel_add_term_19_cast);
            tensor<fp16, [1, 304, 16, 12]> input_295_cast = add(x = out_31_cast, y = input_275_cast);
            tensor<fp16, [1, 304, 16, 12]> input_297_cast = relu(x = input_295_cast);
            tensor<int32, [2]> var_1190 = const()[name = tensor<string, []>("op_1190"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1192 = const()[name = tensor<string, []>("op_1192"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_299_pad_type_0 = const()[name = tensor<string, []>("input_299_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_299_pad_0 = const()[name = tensor<string, []>("input_299_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [304, 304, 1, 1]> pose_model_backbone_layer3_6_conv1_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_6_conv1_weight_to_fp16"), val = tensor<fp16, [304, 304, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5405824)))];
            tensor<fp16, [304]> pose_model_backbone_layer3_6_conv1_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_6_conv1_bias_to_fp16"), val = tensor<fp16, [304]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5590720)))];
            tensor<fp16, [1, 304, 16, 12]> input_299_cast = conv(bias = pose_model_backbone_layer3_6_conv1_bias_to_fp16, dilations = var_1192, groups = var_133, pad = input_299_pad_0, pad_type = input_299_pad_type_0, strides = var_1190, weight = pose_model_backbone_layer3_6_conv1_weight_to_fp16, x = input_297_cast);
            tensor<fp16, [1, 304, 16, 12]> input_301_cast = relu(x = input_299_cast);
            tensor<int32, [2]> var_1198 = const()[name = tensor<string, []>("op_1198"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1200 = const()[name = tensor<string, []>("op_1200"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_303_pad_type_0 = const()[name = tensor<string, []>("input_303_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_303_pad_0 = const()[name = tensor<string, []>("input_303_pad_0"), val = tensor<int32, [4]>([2, 2, 2, 2])];
            tensor<fp16, [304, 19, 5, 5]> pose_model_backbone_layer3_6_conv2_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_6_conv2_weight_to_fp16"), val = tensor<fp16, [304, 19, 5, 5]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5591424)))];
            tensor<fp16, [304]> pose_model_backbone_layer3_6_conv2_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_6_conv2_bias_to_fp16"), val = tensor<fp16, [304]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5880320)))];
            tensor<fp16, [1, 304, 16, 12]> input_303_cast = conv(bias = pose_model_backbone_layer3_6_conv2_bias_to_fp16, dilations = var_1200, groups = var_137, pad = input_303_pad_0, pad_type = input_303_pad_type_0, strides = var_1198, weight = pose_model_backbone_layer3_6_conv2_weight_to_fp16, x = input_301_cast);
            tensor<fp16, [1, 304, 16, 12]> input_305_cast = relu(x = input_303_cast);
            tensor<int32, [2]> var_1206 = const()[name = tensor<string, []>("op_1206"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1208 = const()[name = tensor<string, []>("op_1208"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_21_pad_type_0 = const()[name = tensor<string, []>("x_21_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_21_pad_0 = const()[name = tensor<string, []>("x_21_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [304, 304, 1, 1]> pose_model_backbone_layer3_6_conv3_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_6_conv3_weight_to_fp16"), val = tensor<fp16, [304, 304, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5881024)))];
            tensor<fp16, [304]> pose_model_backbone_layer3_6_conv3_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_6_conv3_bias_to_fp16"), val = tensor<fp16, [304]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6065920)))];
            tensor<fp16, [1, 304, 16, 12]> x_21_cast = conv(bias = pose_model_backbone_layer3_6_conv3_bias_to_fp16, dilations = var_1208, groups = var_133, pad = x_21_pad_0, pad_type = x_21_pad_type_0, strides = var_1206, weight = pose_model_backbone_layer3_6_conv3_weight_to_fp16, x = input_305_cast);
            tensor<int32, [3]> var_1221 = const()[name = tensor<string, []>("op_1221"), val = tensor<int32, [3]>([1, 304, 192])];
            tensor<fp16, [1, 304, 192]> input_x_41_cast = reshape(shape = var_1221, x = x_21_cast);
            tensor<int32, [1]> input_x_43_axes_0 = const()[name = tensor<string, []>("input_x_43_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 304, 192]> input_x_43_cast = expand_dims(axes = input_x_43_axes_0, x = input_x_41_cast);
            tensor<int32, [2]> var_1226 = const()[name = tensor<string, []>("op_1226"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1228 = const()[name = tensor<string, []>("op_1228"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> context_mask_61_pad_type_0 = const()[name = tensor<string, []>("context_mask_61_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> context_mask_61_pad_0 = const()[name = tensor<string, []>("context_mask_61_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1, 304, 1, 1]> pose_model_backbone_layer3_6_attention_conv_mask_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_6_attention_conv_mask_weight_to_fp16"), val = tensor<fp16, [1, 304, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6066624)))];
            tensor<fp16, [1]> pose_model_backbone_layer3_6_attention_conv_mask_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_6_attention_conv_mask_bias_to_fp16"), val = tensor<fp16, [1]>([0x1.2p-21])];
            tensor<fp16, [1, 1, 16, 12]> context_mask_61_cast = conv(bias = pose_model_backbone_layer3_6_attention_conv_mask_bias_to_fp16, dilations = var_1228, groups = var_133, pad = context_mask_61_pad_0, pad_type = context_mask_61_pad_type_0, strides = var_1226, weight = pose_model_backbone_layer3_6_attention_conv_mask_weight_to_fp16, x = x_21_cast);
            tensor<int32, [3]> var_1233 = const()[name = tensor<string, []>("op_1233"), val = tensor<int32, [3]>([1, 1, 192])];
            tensor<fp16, [1, 1, 192]> input_307_cast = reshape(shape = var_1233, x = context_mask_61_cast);
            tensor<fp16, [1, 1, 192]> context_mask_63_cast = softmax(axis = var_135, x = input_307_cast);
            tensor<int32, [1]> context_mask_65_axes_0 = const()[name = tensor<string, []>("context_mask_65_axes_0"), val = tensor<int32, [1]>([-1])];
            tensor<fp16, [1, 1, 192, 1]> context_mask_65_cast = expand_dims(axes = context_mask_65_axes_0, x = context_mask_63_cast);
            tensor<bool, []> context_21_transpose_x_0 = const()[name = tensor<string, []>("context_21_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> context_21_transpose_y_0 = const()[name = tensor<string, []>("context_21_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1, 304, 1]> context_21_cast = matmul(transpose_x = context_21_transpose_x_0, transpose_y = context_21_transpose_y_0, x = input_x_43_cast, y = context_mask_65_cast);
            tensor<int32, [4]> var_1238 = const()[name = tensor<string, []>("op_1238"), val = tensor<int32, [4]>([1, 304, 1, 1])];
            tensor<fp16, [1, 304, 1, 1]> input_309_cast = reshape(shape = var_1238, x = context_21_cast);
            tensor<int32, [2]> var_1245 = const()[name = tensor<string, []>("op_1245"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1247 = const()[name = tensor<string, []>("op_1247"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_311_pad_type_0 = const()[name = tensor<string, []>("input_311_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_311_pad_0 = const()[name = tensor<string, []>("input_311_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [19, 304, 1, 1]> pose_model_backbone_layer3_6_attention_channel_add_conv_0_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_6_attention_channel_add_conv_0_weight_to_fp16"), val = tensor<fp16, [19, 304, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6067328)))];
            tensor<fp16, [19]> pose_model_backbone_layer3_6_attention_channel_add_conv_0_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_6_attention_channel_add_conv_0_bias_to_fp16"), val = tensor<fp16, [19]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6078976)))];
            tensor<fp16, [1, 19, 1, 1]> input_311_cast = conv(bias = pose_model_backbone_layer3_6_attention_channel_add_conv_0_bias_to_fp16, dilations = var_1247, groups = var_133, pad = input_311_pad_0, pad_type = input_311_pad_type_0, strides = var_1245, weight = pose_model_backbone_layer3_6_attention_channel_add_conv_0_weight_to_fp16, x = input_309_cast);
            tensor<int32, [3]> input_313_axes_0 = const()[name = tensor<string, []>("input_313_axes_0"), val = tensor<int32, [3]>([-3, -2, -1])];
            tensor<fp16, [19, 1, 1]> pose_model_backbone_layer3_6_attention_channel_add_conv_1_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_6_attention_channel_add_conv_1_weight_to_fp16"), val = tensor<fp16, [19, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6079104)))];
            tensor<fp16, [19, 1, 1]> pose_model_backbone_layer3_6_attention_channel_add_conv_1_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_6_attention_channel_add_conv_1_bias_to_fp16"), val = tensor<fp16, [19, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6079232)))];
            tensor<fp16, [1, 19, 1, 1]> input_313_cast = layer_norm(axes = input_313_axes_0, beta = pose_model_backbone_layer3_6_attention_channel_add_conv_1_bias_to_fp16, epsilon = var_138_to_fp16, gamma = pose_model_backbone_layer3_6_attention_channel_add_conv_1_weight_to_fp16, x = input_311_cast);
            tensor<fp16, [1, 19, 1, 1]> input_315_cast = relu(x = input_313_cast);
            tensor<int32, [2]> var_1257 = const()[name = tensor<string, []>("op_1257"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1259 = const()[name = tensor<string, []>("op_1259"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> channel_add_term_21_pad_type_0 = const()[name = tensor<string, []>("channel_add_term_21_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> channel_add_term_21_pad_0 = const()[name = tensor<string, []>("channel_add_term_21_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [304, 19, 1, 1]> pose_model_backbone_layer3_6_attention_channel_add_conv_3_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_6_attention_channel_add_conv_3_weight_to_fp16"), val = tensor<fp16, [304, 19, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6079360)))];
            tensor<fp16, [304]> pose_model_backbone_layer3_6_attention_channel_add_conv_3_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer3_6_attention_channel_add_conv_3_bias_to_fp16"), val = tensor<fp16, [304]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6091008)))];
            tensor<fp16, [1, 304, 1, 1]> channel_add_term_21_cast = conv(bias = pose_model_backbone_layer3_6_attention_channel_add_conv_3_bias_to_fp16, dilations = var_1259, groups = var_133, pad = channel_add_term_21_pad_0, pad_type = channel_add_term_21_pad_type_0, strides = var_1257, weight = pose_model_backbone_layer3_6_attention_channel_add_conv_3_weight_to_fp16, x = input_315_cast);
            tensor<fp16, [1, 304, 16, 12]> out_33_cast = add(x = x_21_cast, y = channel_add_term_21_cast);
            tensor<fp16, [1, 304, 16, 12]> input_317_cast = add(x = out_33_cast, y = input_297_cast);
            tensor<fp16, [1, 304, 16, 12]> input_319_cast = relu(x = input_317_cast);
            tensor<int32, [2]> var_1275 = const()[name = tensor<string, []>("op_1275"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1277 = const()[name = tensor<string, []>("op_1277"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_321_pad_type_0 = const()[name = tensor<string, []>("input_321_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_321_pad_0 = const()[name = tensor<string, []>("input_321_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [608, 304, 1, 1]> pose_model_backbone_layer4_0_conv1_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer4_0_conv1_weight_to_fp16"), val = tensor<fp16, [608, 304, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6091712)))];
            tensor<fp16, [608]> pose_model_backbone_layer4_0_conv1_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer4_0_conv1_bias_to_fp16"), val = tensor<fp16, [608]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6461440)))];
            tensor<fp16, [1, 608, 16, 12]> input_321_cast = conv(bias = pose_model_backbone_layer4_0_conv1_bias_to_fp16, dilations = var_1277, groups = var_133, pad = input_321_pad_0, pad_type = input_321_pad_type_0, strides = var_1275, weight = pose_model_backbone_layer4_0_conv1_weight_to_fp16, x = input_319_cast);
            tensor<fp16, [1, 608, 16, 12]> input_323_cast = relu(x = input_321_cast);
            tensor<int32, [2]> var_1283 = const()[name = tensor<string, []>("op_1283"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_1285 = const()[name = tensor<string, []>("op_1285"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_325_pad_type_0 = const()[name = tensor<string, []>("input_325_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_325_pad_0 = const()[name = tensor<string, []>("input_325_pad_0"), val = tensor<int32, [4]>([2, 2, 2, 2])];
            tensor<fp16, [608, 38, 5, 5]> pose_model_backbone_layer4_0_conv2_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer4_0_conv2_weight_to_fp16"), val = tensor<fp16, [608, 38, 5, 5]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6462720)))];
            tensor<fp16, [608]> pose_model_backbone_layer4_0_conv2_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer4_0_conv2_bias_to_fp16"), val = tensor<fp16, [608]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7617984)))];
            tensor<fp16, [1, 608, 8, 6]> input_325_cast = conv(bias = pose_model_backbone_layer4_0_conv2_bias_to_fp16, dilations = var_1285, groups = var_137, pad = input_325_pad_0, pad_type = input_325_pad_type_0, strides = var_1283, weight = pose_model_backbone_layer4_0_conv2_weight_to_fp16, x = input_323_cast);
            tensor<fp16, [1, 608, 8, 6]> input_327_cast = relu(x = input_325_cast);
            tensor<int32, [2]> var_1291 = const()[name = tensor<string, []>("op_1291"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1293 = const()[name = tensor<string, []>("op_1293"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_23_pad_type_0 = const()[name = tensor<string, []>("x_23_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_23_pad_0 = const()[name = tensor<string, []>("x_23_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [608, 608, 1, 1]> pose_model_backbone_layer4_0_conv3_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer4_0_conv3_weight_to_fp16"), val = tensor<fp16, [608, 608, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7619264)))];
            tensor<fp16, [608]> pose_model_backbone_layer4_0_conv3_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer4_0_conv3_bias_to_fp16"), val = tensor<fp16, [608]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8358656)))];
            tensor<fp16, [1, 608, 8, 6]> x_23_cast = conv(bias = pose_model_backbone_layer4_0_conv3_bias_to_fp16, dilations = var_1293, groups = var_133, pad = x_23_pad_0, pad_type = x_23_pad_type_0, strides = var_1291, weight = pose_model_backbone_layer4_0_conv3_weight_to_fp16, x = input_327_cast);
            tensor<int32, [3]> var_1306 = const()[name = tensor<string, []>("op_1306"), val = tensor<int32, [3]>([1, 608, 48])];
            tensor<fp16, [1, 608, 48]> input_x_45_cast = reshape(shape = var_1306, x = x_23_cast);
            tensor<int32, [1]> input_x_47_axes_0 = const()[name = tensor<string, []>("input_x_47_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 608, 48]> input_x_47_cast = expand_dims(axes = input_x_47_axes_0, x = input_x_45_cast);
            tensor<int32, [2]> var_1311 = const()[name = tensor<string, []>("op_1311"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1313 = const()[name = tensor<string, []>("op_1313"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> context_mask_67_pad_type_0 = const()[name = tensor<string, []>("context_mask_67_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> context_mask_67_pad_0 = const()[name = tensor<string, []>("context_mask_67_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1, 608, 1, 1]> pose_model_backbone_layer4_0_attention_conv_mask_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer4_0_attention_conv_mask_weight_to_fp16"), val = tensor<fp16, [1, 608, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8359936)))];
            tensor<fp16, [1]> pose_model_backbone_layer4_0_attention_conv_mask_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer4_0_attention_conv_mask_bias_to_fp16"), val = tensor<fp16, [1]>([0x1.6p-20])];
            tensor<fp16, [1, 1, 8, 6]> context_mask_67_cast = conv(bias = pose_model_backbone_layer4_0_attention_conv_mask_bias_to_fp16, dilations = var_1313, groups = var_133, pad = context_mask_67_pad_0, pad_type = context_mask_67_pad_type_0, strides = var_1311, weight = pose_model_backbone_layer4_0_attention_conv_mask_weight_to_fp16, x = x_23_cast);
            tensor<int32, [3]> var_1318 = const()[name = tensor<string, []>("op_1318"), val = tensor<int32, [3]>([1, 1, 48])];
            tensor<fp16, [1, 1, 48]> input_329_cast = reshape(shape = var_1318, x = context_mask_67_cast);
            tensor<fp16, [1, 1, 48]> context_mask_69_cast = softmax(axis = var_135, x = input_329_cast);
            tensor<int32, [1]> context_mask_71_axes_0 = const()[name = tensor<string, []>("context_mask_71_axes_0"), val = tensor<int32, [1]>([-1])];
            tensor<fp16, [1, 1, 48, 1]> context_mask_71_cast = expand_dims(axes = context_mask_71_axes_0, x = context_mask_69_cast);
            tensor<bool, []> context_23_transpose_x_0 = const()[name = tensor<string, []>("context_23_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> context_23_transpose_y_0 = const()[name = tensor<string, []>("context_23_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1, 608, 1]> context_23_cast = matmul(transpose_x = context_23_transpose_x_0, transpose_y = context_23_transpose_y_0, x = input_x_47_cast, y = context_mask_71_cast);
            tensor<int32, [4]> var_1323 = const()[name = tensor<string, []>("op_1323"), val = tensor<int32, [4]>([1, 608, 1, 1])];
            tensor<fp16, [1, 608, 1, 1]> input_331_cast = reshape(shape = var_1323, x = context_23_cast);
            tensor<int32, [2]> var_1330 = const()[name = tensor<string, []>("op_1330"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1332 = const()[name = tensor<string, []>("op_1332"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_333_pad_type_0 = const()[name = tensor<string, []>("input_333_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_333_pad_0 = const()[name = tensor<string, []>("input_333_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [38, 608, 1, 1]> pose_model_backbone_layer4_0_attention_channel_add_conv_0_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer4_0_attention_channel_add_conv_0_weight_to_fp16"), val = tensor<fp16, [38, 608, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8361216)))];
            tensor<fp16, [38]> pose_model_backbone_layer4_0_attention_channel_add_conv_0_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer4_0_attention_channel_add_conv_0_bias_to_fp16"), val = tensor<fp16, [38]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8407488)))];
            tensor<fp16, [1, 38, 1, 1]> input_333_cast = conv(bias = pose_model_backbone_layer4_0_attention_channel_add_conv_0_bias_to_fp16, dilations = var_1332, groups = var_133, pad = input_333_pad_0, pad_type = input_333_pad_type_0, strides = var_1330, weight = pose_model_backbone_layer4_0_attention_channel_add_conv_0_weight_to_fp16, x = input_331_cast);
            tensor<int32, [3]> input_335_axes_0 = const()[name = tensor<string, []>("input_335_axes_0"), val = tensor<int32, [3]>([-3, -2, -1])];
            tensor<fp16, [38, 1, 1]> pose_model_backbone_layer4_0_attention_channel_add_conv_1_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer4_0_attention_channel_add_conv_1_weight_to_fp16"), val = tensor<fp16, [38, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8407680)))];
            tensor<fp16, [38, 1, 1]> pose_model_backbone_layer4_0_attention_channel_add_conv_1_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer4_0_attention_channel_add_conv_1_bias_to_fp16"), val = tensor<fp16, [38, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8407872)))];
            tensor<fp16, [1, 38, 1, 1]> input_335_cast = layer_norm(axes = input_335_axes_0, beta = pose_model_backbone_layer4_0_attention_channel_add_conv_1_bias_to_fp16, epsilon = var_138_to_fp16, gamma = pose_model_backbone_layer4_0_attention_channel_add_conv_1_weight_to_fp16, x = input_333_cast);
            tensor<fp16, [1, 38, 1, 1]> input_337_cast = relu(x = input_335_cast);
            tensor<int32, [2]> var_1342 = const()[name = tensor<string, []>("op_1342"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1344 = const()[name = tensor<string, []>("op_1344"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> channel_add_term_23_pad_type_0 = const()[name = tensor<string, []>("channel_add_term_23_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> channel_add_term_23_pad_0 = const()[name = tensor<string, []>("channel_add_term_23_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [608, 38, 1, 1]> pose_model_backbone_layer4_0_attention_channel_add_conv_3_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer4_0_attention_channel_add_conv_3_weight_to_fp16"), val = tensor<fp16, [608, 38, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8408064)))];
            tensor<fp16, [608]> pose_model_backbone_layer4_0_attention_channel_add_conv_3_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer4_0_attention_channel_add_conv_3_bias_to_fp16"), val = tensor<fp16, [608]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8454336)))];
            tensor<fp16, [1, 608, 1, 1]> channel_add_term_23_cast = conv(bias = pose_model_backbone_layer4_0_attention_channel_add_conv_3_bias_to_fp16, dilations = var_1344, groups = var_133, pad = channel_add_term_23_pad_0, pad_type = channel_add_term_23_pad_type_0, strides = var_1342, weight = pose_model_backbone_layer4_0_attention_channel_add_conv_3_weight_to_fp16, x = input_337_cast);
            tensor<fp16, [1, 608, 8, 6]> out_35_cast = add(x = x_23_cast, y = channel_add_term_23_cast);
            tensor<int32, [2]> var_1351 = const()[name = tensor<string, []>("op_1351"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_1353 = const()[name = tensor<string, []>("op_1353"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> identity_pad_type_0 = const()[name = tensor<string, []>("identity_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> identity_pad_0 = const()[name = tensor<string, []>("identity_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [608, 304, 1, 1]> pose_model_backbone_layer4_0_downsample_0_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer4_0_downsample_0_weight_to_fp16"), val = tensor<fp16, [608, 304, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8455616)))];
            tensor<fp16, [608]> pose_model_backbone_layer4_0_downsample_0_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer4_0_downsample_0_bias_to_fp16"), val = tensor<fp16, [608]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8825344)))];
            tensor<fp16, [1, 608, 8, 6]> identity_cast = conv(bias = pose_model_backbone_layer4_0_downsample_0_bias_to_fp16, dilations = var_1353, groups = var_133, pad = identity_pad_0, pad_type = identity_pad_type_0, strides = var_1351, weight = pose_model_backbone_layer4_0_downsample_0_weight_to_fp16, x = input_319_cast);
            tensor<fp16, [1, 608, 8, 6]> input_339_cast = add(x = out_35_cast, y = identity_cast);
            tensor<fp16, [1, 608, 8, 6]> input_341_cast = relu(x = input_339_cast);
            tensor<int32, [2]> var_1364 = const()[name = tensor<string, []>("op_1364"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1366 = const()[name = tensor<string, []>("op_1366"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_343_pad_type_0 = const()[name = tensor<string, []>("input_343_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_343_pad_0 = const()[name = tensor<string, []>("input_343_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [608, 608, 1, 1]> pose_model_backbone_layer4_1_conv1_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer4_1_conv1_weight_to_fp16"), val = tensor<fp16, [608, 608, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8826624)))];
            tensor<fp16, [608]> pose_model_backbone_layer4_1_conv1_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer4_1_conv1_bias_to_fp16"), val = tensor<fp16, [608]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9566016)))];
            tensor<fp16, [1, 608, 8, 6]> input_343_cast = conv(bias = pose_model_backbone_layer4_1_conv1_bias_to_fp16, dilations = var_1366, groups = var_133, pad = input_343_pad_0, pad_type = input_343_pad_type_0, strides = var_1364, weight = pose_model_backbone_layer4_1_conv1_weight_to_fp16, x = input_341_cast);
            tensor<fp16, [1, 608, 8, 6]> input_345_cast = relu(x = input_343_cast);
            tensor<int32, [2]> var_1372 = const()[name = tensor<string, []>("op_1372"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1374 = const()[name = tensor<string, []>("op_1374"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_347_pad_type_0 = const()[name = tensor<string, []>("input_347_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_347_pad_0 = const()[name = tensor<string, []>("input_347_pad_0"), val = tensor<int32, [4]>([2, 2, 2, 2])];
            tensor<fp16, [608, 38, 5, 5]> pose_model_backbone_layer4_1_conv2_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer4_1_conv2_weight_to_fp16"), val = tensor<fp16, [608, 38, 5, 5]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9567296)))];
            tensor<fp16, [608]> pose_model_backbone_layer4_1_conv2_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer4_1_conv2_bias_to_fp16"), val = tensor<fp16, [608]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10722560)))];
            tensor<fp16, [1, 608, 8, 6]> input_347_cast = conv(bias = pose_model_backbone_layer4_1_conv2_bias_to_fp16, dilations = var_1374, groups = var_137, pad = input_347_pad_0, pad_type = input_347_pad_type_0, strides = var_1372, weight = pose_model_backbone_layer4_1_conv2_weight_to_fp16, x = input_345_cast);
            tensor<fp16, [1, 608, 8, 6]> input_349_cast = relu(x = input_347_cast);
            tensor<int32, [2]> var_1380 = const()[name = tensor<string, []>("op_1380"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1382 = const()[name = tensor<string, []>("op_1382"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_25_pad_type_0 = const()[name = tensor<string, []>("x_25_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_25_pad_0 = const()[name = tensor<string, []>("x_25_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [608, 608, 1, 1]> pose_model_backbone_layer4_1_conv3_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer4_1_conv3_weight_to_fp16"), val = tensor<fp16, [608, 608, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10723840)))];
            tensor<fp16, [608]> pose_model_backbone_layer4_1_conv3_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer4_1_conv3_bias_to_fp16"), val = tensor<fp16, [608]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11463232)))];
            tensor<fp16, [1, 608, 8, 6]> x_25_cast = conv(bias = pose_model_backbone_layer4_1_conv3_bias_to_fp16, dilations = var_1382, groups = var_133, pad = x_25_pad_0, pad_type = x_25_pad_type_0, strides = var_1380, weight = pose_model_backbone_layer4_1_conv3_weight_to_fp16, x = input_349_cast);
            tensor<int32, [3]> var_1395 = const()[name = tensor<string, []>("op_1395"), val = tensor<int32, [3]>([1, 608, 48])];
            tensor<fp16, [1, 608, 48]> input_x_49_cast = reshape(shape = var_1395, x = x_25_cast);
            tensor<int32, [1]> input_x_51_axes_0 = const()[name = tensor<string, []>("input_x_51_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 608, 48]> input_x_51_cast = expand_dims(axes = input_x_51_axes_0, x = input_x_49_cast);
            tensor<int32, [2]> var_1400 = const()[name = tensor<string, []>("op_1400"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1402 = const()[name = tensor<string, []>("op_1402"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> context_mask_73_pad_type_0 = const()[name = tensor<string, []>("context_mask_73_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> context_mask_73_pad_0 = const()[name = tensor<string, []>("context_mask_73_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1, 608, 1, 1]> pose_model_backbone_layer4_1_attention_conv_mask_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer4_1_attention_conv_mask_weight_to_fp16"), val = tensor<fp16, [1, 608, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11464512)))];
            tensor<fp16, [1]> pose_model_backbone_layer4_1_attention_conv_mask_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer4_1_attention_conv_mask_bias_to_fp16"), val = tensor<fp16, [1]>([-0x1.cp-22])];
            tensor<fp16, [1, 1, 8, 6]> context_mask_73_cast = conv(bias = pose_model_backbone_layer4_1_attention_conv_mask_bias_to_fp16, dilations = var_1402, groups = var_133, pad = context_mask_73_pad_0, pad_type = context_mask_73_pad_type_0, strides = var_1400, weight = pose_model_backbone_layer4_1_attention_conv_mask_weight_to_fp16, x = x_25_cast);
            tensor<int32, [3]> var_1407 = const()[name = tensor<string, []>("op_1407"), val = tensor<int32, [3]>([1, 1, 48])];
            tensor<fp16, [1, 1, 48]> input_351_cast = reshape(shape = var_1407, x = context_mask_73_cast);
            tensor<fp16, [1, 1, 48]> context_mask_75_cast = softmax(axis = var_135, x = input_351_cast);
            tensor<int32, [1]> context_mask_77_axes_0 = const()[name = tensor<string, []>("context_mask_77_axes_0"), val = tensor<int32, [1]>([-1])];
            tensor<fp16, [1, 1, 48, 1]> context_mask_77_cast = expand_dims(axes = context_mask_77_axes_0, x = context_mask_75_cast);
            tensor<bool, []> context_25_transpose_x_0 = const()[name = tensor<string, []>("context_25_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> context_25_transpose_y_0 = const()[name = tensor<string, []>("context_25_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1, 608, 1]> context_25_cast = matmul(transpose_x = context_25_transpose_x_0, transpose_y = context_25_transpose_y_0, x = input_x_51_cast, y = context_mask_77_cast);
            tensor<int32, [4]> var_1412 = const()[name = tensor<string, []>("op_1412"), val = tensor<int32, [4]>([1, 608, 1, 1])];
            tensor<fp16, [1, 608, 1, 1]> input_353_cast = reshape(shape = var_1412, x = context_25_cast);
            tensor<int32, [2]> var_1419 = const()[name = tensor<string, []>("op_1419"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1421 = const()[name = tensor<string, []>("op_1421"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_355_pad_type_0 = const()[name = tensor<string, []>("input_355_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_355_pad_0 = const()[name = tensor<string, []>("input_355_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [38, 608, 1, 1]> pose_model_backbone_layer4_1_attention_channel_add_conv_0_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer4_1_attention_channel_add_conv_0_weight_to_fp16"), val = tensor<fp16, [38, 608, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11465792)))];
            tensor<fp16, [38]> pose_model_backbone_layer4_1_attention_channel_add_conv_0_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer4_1_attention_channel_add_conv_0_bias_to_fp16"), val = tensor<fp16, [38]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11512064)))];
            tensor<fp16, [1, 38, 1, 1]> input_355_cast = conv(bias = pose_model_backbone_layer4_1_attention_channel_add_conv_0_bias_to_fp16, dilations = var_1421, groups = var_133, pad = input_355_pad_0, pad_type = input_355_pad_type_0, strides = var_1419, weight = pose_model_backbone_layer4_1_attention_channel_add_conv_0_weight_to_fp16, x = input_353_cast);
            tensor<int32, [3]> input_357_axes_0 = const()[name = tensor<string, []>("input_357_axes_0"), val = tensor<int32, [3]>([-3, -2, -1])];
            tensor<fp16, [38, 1, 1]> pose_model_backbone_layer4_1_attention_channel_add_conv_1_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer4_1_attention_channel_add_conv_1_weight_to_fp16"), val = tensor<fp16, [38, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11512256)))];
            tensor<fp16, [38, 1, 1]> pose_model_backbone_layer4_1_attention_channel_add_conv_1_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer4_1_attention_channel_add_conv_1_bias_to_fp16"), val = tensor<fp16, [38, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11512448)))];
            tensor<fp16, [1, 38, 1, 1]> input_357_cast = layer_norm(axes = input_357_axes_0, beta = pose_model_backbone_layer4_1_attention_channel_add_conv_1_bias_to_fp16, epsilon = var_138_to_fp16, gamma = pose_model_backbone_layer4_1_attention_channel_add_conv_1_weight_to_fp16, x = input_355_cast);
            tensor<fp16, [1, 38, 1, 1]> input_359_cast = relu(x = input_357_cast);
            tensor<int32, [2]> var_1431 = const()[name = tensor<string, []>("op_1431"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1433 = const()[name = tensor<string, []>("op_1433"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> channel_add_term_25_pad_type_0 = const()[name = tensor<string, []>("channel_add_term_25_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> channel_add_term_25_pad_0 = const()[name = tensor<string, []>("channel_add_term_25_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [608, 38, 1, 1]> pose_model_backbone_layer4_1_attention_channel_add_conv_3_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer4_1_attention_channel_add_conv_3_weight_to_fp16"), val = tensor<fp16, [608, 38, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11512640)))];
            tensor<fp16, [608]> pose_model_backbone_layer4_1_attention_channel_add_conv_3_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer4_1_attention_channel_add_conv_3_bias_to_fp16"), val = tensor<fp16, [608]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11558912)))];
            tensor<fp16, [1, 608, 1, 1]> channel_add_term_25_cast = conv(bias = pose_model_backbone_layer4_1_attention_channel_add_conv_3_bias_to_fp16, dilations = var_1433, groups = var_133, pad = channel_add_term_25_pad_0, pad_type = channel_add_term_25_pad_type_0, strides = var_1431, weight = pose_model_backbone_layer4_1_attention_channel_add_conv_3_weight_to_fp16, x = input_359_cast);
            tensor<fp16, [1, 608, 8, 6]> out_37_cast = add(x = x_25_cast, y = channel_add_term_25_cast);
            tensor<fp16, [1, 608, 8, 6]> input_361_cast = add(x = out_37_cast, y = input_341_cast);
            tensor<fp16, [1, 608, 8, 6]> input_363_cast = relu(x = input_361_cast);
            tensor<int32, [2]> var_1445 = const()[name = tensor<string, []>("op_1445"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1447 = const()[name = tensor<string, []>("op_1447"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_365_pad_type_0 = const()[name = tensor<string, []>("input_365_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_365_pad_0 = const()[name = tensor<string, []>("input_365_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [608, 608, 1, 1]> pose_model_backbone_layer4_2_conv1_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer4_2_conv1_weight_to_fp16"), val = tensor<fp16, [608, 608, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11560192)))];
            tensor<fp16, [608]> pose_model_backbone_layer4_2_conv1_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer4_2_conv1_bias_to_fp16"), val = tensor<fp16, [608]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12299584)))];
            tensor<fp16, [1, 608, 8, 6]> input_365_cast = conv(bias = pose_model_backbone_layer4_2_conv1_bias_to_fp16, dilations = var_1447, groups = var_133, pad = input_365_pad_0, pad_type = input_365_pad_type_0, strides = var_1445, weight = pose_model_backbone_layer4_2_conv1_weight_to_fp16, x = input_363_cast);
            tensor<fp16, [1, 608, 8, 6]> input_367_cast = relu(x = input_365_cast);
            tensor<int32, [2]> var_1453 = const()[name = tensor<string, []>("op_1453"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1455 = const()[name = tensor<string, []>("op_1455"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_369_pad_type_0 = const()[name = tensor<string, []>("input_369_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_369_pad_0 = const()[name = tensor<string, []>("input_369_pad_0"), val = tensor<int32, [4]>([2, 2, 2, 2])];
            tensor<fp16, [608, 38, 5, 5]> pose_model_backbone_layer4_2_conv2_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer4_2_conv2_weight_to_fp16"), val = tensor<fp16, [608, 38, 5, 5]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12300864)))];
            tensor<fp16, [608]> pose_model_backbone_layer4_2_conv2_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer4_2_conv2_bias_to_fp16"), val = tensor<fp16, [608]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13456128)))];
            tensor<fp16, [1, 608, 8, 6]> input_369_cast = conv(bias = pose_model_backbone_layer4_2_conv2_bias_to_fp16, dilations = var_1455, groups = var_137, pad = input_369_pad_0, pad_type = input_369_pad_type_0, strides = var_1453, weight = pose_model_backbone_layer4_2_conv2_weight_to_fp16, x = input_367_cast);
            tensor<fp16, [1, 608, 8, 6]> input_371_cast = relu(x = input_369_cast);
            tensor<int32, [2]> var_1461 = const()[name = tensor<string, []>("op_1461"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1463 = const()[name = tensor<string, []>("op_1463"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_pad_type_0 = const()[name = tensor<string, []>("x_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_pad_0 = const()[name = tensor<string, []>("x_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [608, 608, 1, 1]> pose_model_backbone_layer4_2_conv3_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer4_2_conv3_weight_to_fp16"), val = tensor<fp16, [608, 608, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13457408)))];
            tensor<fp16, [608]> pose_model_backbone_layer4_2_conv3_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer4_2_conv3_bias_to_fp16"), val = tensor<fp16, [608]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14196800)))];
            tensor<fp16, [1, 608, 8, 6]> x_cast = conv(bias = pose_model_backbone_layer4_2_conv3_bias_to_fp16, dilations = var_1463, groups = var_133, pad = x_pad_0, pad_type = x_pad_type_0, strides = var_1461, weight = pose_model_backbone_layer4_2_conv3_weight_to_fp16, x = input_371_cast);
            tensor<int32, [3]> var_1476 = const()[name = tensor<string, []>("op_1476"), val = tensor<int32, [3]>([1, 608, 48])];
            tensor<fp16, [1, 608, 48]> input_x_53_cast = reshape(shape = var_1476, x = x_cast);
            tensor<int32, [1]> input_x_axes_0 = const()[name = tensor<string, []>("input_x_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 608, 48]> input_x_cast = expand_dims(axes = input_x_axes_0, x = input_x_53_cast);
            tensor<int32, [2]> var_1481 = const()[name = tensor<string, []>("op_1481"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1483 = const()[name = tensor<string, []>("op_1483"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> context_mask_79_pad_type_0 = const()[name = tensor<string, []>("context_mask_79_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> context_mask_79_pad_0 = const()[name = tensor<string, []>("context_mask_79_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1, 608, 1, 1]> pose_model_backbone_layer4_2_attention_conv_mask_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer4_2_attention_conv_mask_weight_to_fp16"), val = tensor<fp16, [1, 608, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14198080)))];
            tensor<fp16, [1]> pose_model_backbone_layer4_2_attention_conv_mask_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer4_2_attention_conv_mask_bias_to_fp16"), val = tensor<fp16, [1]>([0x1.bp-20])];
            tensor<fp16, [1, 1, 8, 6]> context_mask_79_cast = conv(bias = pose_model_backbone_layer4_2_attention_conv_mask_bias_to_fp16, dilations = var_1483, groups = var_133, pad = context_mask_79_pad_0, pad_type = context_mask_79_pad_type_0, strides = var_1481, weight = pose_model_backbone_layer4_2_attention_conv_mask_weight_to_fp16, x = x_cast);
            tensor<int32, [3]> var_1488 = const()[name = tensor<string, []>("op_1488"), val = tensor<int32, [3]>([1, 1, 48])];
            tensor<fp16, [1, 1, 48]> input_373_cast = reshape(shape = var_1488, x = context_mask_79_cast);
            tensor<fp16, [1, 1, 48]> context_mask_81_cast = softmax(axis = var_135, x = input_373_cast);
            tensor<int32, [1]> context_mask_axes_0 = const()[name = tensor<string, []>("context_mask_axes_0"), val = tensor<int32, [1]>([-1])];
            tensor<fp16, [1, 1, 48, 1]> context_mask_cast = expand_dims(axes = context_mask_axes_0, x = context_mask_81_cast);
            tensor<bool, []> context_transpose_x_0 = const()[name = tensor<string, []>("context_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> context_transpose_y_0 = const()[name = tensor<string, []>("context_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1, 608, 1]> context_cast = matmul(transpose_x = context_transpose_x_0, transpose_y = context_transpose_y_0, x = input_x_cast, y = context_mask_cast);
            tensor<int32, [4]> var_1493 = const()[name = tensor<string, []>("op_1493"), val = tensor<int32, [4]>([1, 608, 1, 1])];
            tensor<fp16, [1, 608, 1, 1]> input_375_cast = reshape(shape = var_1493, x = context_cast);
            tensor<int32, [2]> var_1500 = const()[name = tensor<string, []>("op_1500"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1502 = const()[name = tensor<string, []>("op_1502"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_377_pad_type_0 = const()[name = tensor<string, []>("input_377_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_377_pad_0 = const()[name = tensor<string, []>("input_377_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [38, 608, 1, 1]> pose_model_backbone_layer4_2_attention_channel_add_conv_0_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer4_2_attention_channel_add_conv_0_weight_to_fp16"), val = tensor<fp16, [38, 608, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14199360)))];
            tensor<fp16, [38]> pose_model_backbone_layer4_2_attention_channel_add_conv_0_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer4_2_attention_channel_add_conv_0_bias_to_fp16"), val = tensor<fp16, [38]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14245632)))];
            tensor<fp16, [1, 38, 1, 1]> input_377_cast = conv(bias = pose_model_backbone_layer4_2_attention_channel_add_conv_0_bias_to_fp16, dilations = var_1502, groups = var_133, pad = input_377_pad_0, pad_type = input_377_pad_type_0, strides = var_1500, weight = pose_model_backbone_layer4_2_attention_channel_add_conv_0_weight_to_fp16, x = input_375_cast);
            tensor<int32, [3]> input_379_axes_0 = const()[name = tensor<string, []>("input_379_axes_0"), val = tensor<int32, [3]>([-3, -2, -1])];
            tensor<fp16, [38, 1, 1]> pose_model_backbone_layer4_2_attention_channel_add_conv_1_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer4_2_attention_channel_add_conv_1_weight_to_fp16"), val = tensor<fp16, [38, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14245824)))];
            tensor<fp16, [38, 1, 1]> pose_model_backbone_layer4_2_attention_channel_add_conv_1_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer4_2_attention_channel_add_conv_1_bias_to_fp16"), val = tensor<fp16, [38, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14246016)))];
            tensor<fp16, [1, 38, 1, 1]> input_379_cast = layer_norm(axes = input_379_axes_0, beta = pose_model_backbone_layer4_2_attention_channel_add_conv_1_bias_to_fp16, epsilon = var_138_to_fp16, gamma = pose_model_backbone_layer4_2_attention_channel_add_conv_1_weight_to_fp16, x = input_377_cast);
            tensor<fp16, [1, 38, 1, 1]> input_381_cast = relu(x = input_379_cast);
            tensor<int32, [2]> var_1512 = const()[name = tensor<string, []>("op_1512"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1514 = const()[name = tensor<string, []>("op_1514"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> channel_add_term_pad_type_0 = const()[name = tensor<string, []>("channel_add_term_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> channel_add_term_pad_0 = const()[name = tensor<string, []>("channel_add_term_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [608, 38, 1, 1]> pose_model_backbone_layer4_2_attention_channel_add_conv_3_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer4_2_attention_channel_add_conv_3_weight_to_fp16"), val = tensor<fp16, [608, 38, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14246208)))];
            tensor<fp16, [608]> pose_model_backbone_layer4_2_attention_channel_add_conv_3_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_backbone_layer4_2_attention_channel_add_conv_3_bias_to_fp16"), val = tensor<fp16, [608]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14292480)))];
            tensor<fp16, [1, 608, 1, 1]> channel_add_term_cast = conv(bias = pose_model_backbone_layer4_2_attention_channel_add_conv_3_bias_to_fp16, dilations = var_1514, groups = var_133, pad = channel_add_term_pad_0, pad_type = channel_add_term_pad_type_0, strides = var_1512, weight = pose_model_backbone_layer4_2_attention_channel_add_conv_3_weight_to_fp16, x = input_381_cast);
            tensor<fp16, [1, 608, 8, 6]> out_cast = add(x = x_cast, y = channel_add_term_cast);
            tensor<fp16, [1, 608, 8, 6]> input_383_cast = add(x = out_cast, y = input_363_cast);
            tensor<fp16, [1, 608, 8, 6]> input_385_cast = relu(x = input_383_cast);
            tensor<int32, [2]> var_1529 = const()[name = tensor<string, []>("op_1529"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_1531 = const()[name = tensor<string, []>("op_1531"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_387_pad_type_0 = const()[name = tensor<string, []>("input_387_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_387_pad_0 = const()[name = tensor<string, []>("input_387_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [4]> input_387_has_output_shape_output_shape_0 = const()[name = tensor<string, []>("input_387_has_output_shape_output_shape_0"), val = tensor<int32, [4]>([1, 144, 16, 12])];
            tensor<fp16, [608, 9, 4, 4]> input_389_weight_0_to_fp16 = const()[name = tensor<string, []>("input_389_weight_0_to_fp16"), val = tensor<fp16, [608, 9, 4, 4]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14293760)))];
            tensor<fp16, [144]> input_389_bias_0_to_fp16 = const()[name = tensor<string, []>("input_389_bias_0_to_fp16"), val = tensor<fp16, [144]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14468928)))];
            tensor<fp16, [1, 144, 16, 12]> input_389_cast = conv_transpose(bias = input_389_bias_0_to_fp16, dilations = var_1531, groups = var_137, output_shape = input_387_has_output_shape_output_shape_0, pad = input_387_pad_0, pad_type = input_387_pad_type_0, strides = var_1529, weight = input_389_weight_0_to_fp16, x = input_385_cast);
            tensor<fp16, [1, 144, 16, 12]> input_391_cast = relu(x = input_389_cast);
            tensor<int32, [2]> var_1541 = const()[name = tensor<string, []>("op_1541"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_1543 = const()[name = tensor<string, []>("op_1543"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_393_pad_type_0 = const()[name = tensor<string, []>("input_393_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_393_pad_0 = const()[name = tensor<string, []>("input_393_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [4]> input_393_has_output_shape_output_shape_0 = const()[name = tensor<string, []>("input_393_has_output_shape_output_shape_0"), val = tensor<int32, [4]>([1, 144, 32, 24])];
            tensor<fp16, [144, 9, 4, 4]> input_395_weight_0_to_fp16 = const()[name = tensor<string, []>("input_395_weight_0_to_fp16"), val = tensor<fp16, [144, 9, 4, 4]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14469312)))];
            tensor<fp16, [144]> input_395_bias_0_to_fp16 = const()[name = tensor<string, []>("input_395_bias_0_to_fp16"), val = tensor<fp16, [144]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14510848)))];
            tensor<fp16, [1, 144, 32, 24]> input_395_cast = conv_transpose(bias = input_395_bias_0_to_fp16, dilations = var_1543, groups = var_137, output_shape = input_393_has_output_shape_output_shape_0, pad = input_393_pad_0, pad_type = input_393_pad_type_0, strides = var_1541, weight = input_395_weight_0_to_fp16, x = input_391_cast);
            tensor<fp16, [1, 144, 32, 24]> input_397_cast = relu(x = input_395_cast);
            tensor<int32, [2]> var_1553 = const()[name = tensor<string, []>("op_1553"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_1555 = const()[name = tensor<string, []>("op_1555"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_399_pad_type_0 = const()[name = tensor<string, []>("input_399_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_399_pad_0 = const()[name = tensor<string, []>("input_399_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [4]> input_399_has_output_shape_output_shape_0 = const()[name = tensor<string, []>("input_399_has_output_shape_output_shape_0"), val = tensor<int32, [4]>([1, 144, 64, 48])];
            tensor<fp16, [144, 9, 4, 4]> input_401_weight_0_to_fp16 = const()[name = tensor<string, []>("input_401_weight_0_to_fp16"), val = tensor<fp16, [144, 9, 4, 4]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14511232)))];
            tensor<fp16, [144]> input_401_bias_0_to_fp16 = const()[name = tensor<string, []>("input_401_bias_0_to_fp16"), val = tensor<fp16, [144]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14552768)))];
            tensor<fp16, [1, 144, 64, 48]> input_401_cast = conv_transpose(bias = input_401_bias_0_to_fp16, dilations = var_1555, groups = var_137, output_shape = input_399_has_output_shape_output_shape_0, pad = input_399_pad_0, pad_type = input_399_pad_type_0, strides = var_1553, weight = input_401_weight_0_to_fp16, x = input_397_cast);
            tensor<fp16, [1, 144, 64, 48]> input_cast = relu(x = input_401_cast);
            tensor<int32, [2]> var_1566 = const()[name = tensor<string, []>("op_1566"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1568 = const()[name = tensor<string, []>("op_1568"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> heatmap_pad_type_0 = const()[name = tensor<string, []>("heatmap_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> heatmap_pad_0 = const()[name = tensor<string, []>("heatmap_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [17, 144, 1, 1]> pose_model_keypoint_head_final_layer_weight_to_fp16 = const()[name = tensor<string, []>("pose_model_keypoint_head_final_layer_weight_to_fp16"), val = tensor<fp16, [17, 144, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14553152)))];
            tensor<fp16, [17]> pose_model_keypoint_head_final_layer_bias_to_fp16 = const()[name = tensor<string, []>("pose_model_keypoint_head_final_layer_bias_to_fp16"), val = tensor<fp16, [17]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14558144)))];
            tensor<fp16, [1, 17, 64, 48]> heatmap_cast = conv(bias = pose_model_keypoint_head_final_layer_bias_to_fp16, dilations = var_1568, groups = var_133, pad = heatmap_pad_0, pad_type = heatmap_pad_type_0, strides = var_1566, weight = pose_model_keypoint_head_final_layer_weight_to_fp16, x = input_cast);
            tensor<int32, []> var_1572 = const()[name = tensor<string, []>("op_1572"), val = tensor<int32, []>(0)];
            tensor<fp16, [2]> var_1573_cast = stack(axis = var_1572, values = (center_x_cast, center_y_cast));
            tensor<int32, [1]> center_axes_0 = const()[name = tensor<string, []>("center_axes_0"), val = tensor<int32, [1]>([0])];
            tensor<fp16, [1, 2]> center_cast = expand_dims(axes = center_axes_0, x = var_1573_cast);
            tensor<int32, []> var_1584 = const()[name = tensor<string, []>("op_1584"), val = tensor<int32, []>(2)];
            tensor<int32, []> var_1586 = const()[name = tensor<string, []>("op_1586"), val = tensor<int32, []>(3)];
            tensor<int32, [3]> var_1593 = const()[name = tensor<string, []>("op_1593"), val = tensor<int32, [3]>([1, 17, -1])];
            tensor<fp16, [1, 17, 3072]> heatmap_flat_cast = reshape(shape = var_1593, x = heatmap_cast);
            tensor<int32, [1]> reduce_max_0_axes_0 = const()[name = tensor<string, []>("reduce_max_0_axes_0"), val = tensor<int32, [1]>([2])];
            tensor<bool, []> reduce_max_0_keep_dims_0 = const()[name = tensor<string, []>("reduce_max_0_keep_dims_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 17]> reduce_max_0_cast = reduce_max(axes = reduce_max_0_axes_0, keep_dims = reduce_max_0_keep_dims_0, x = heatmap_flat_cast);
            tensor<string, []> reduce_max_0_cast_to_fp32_dtype_0 = const()[name = tensor<string, []>("reduce_max_0_cast_to_fp32_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<int32, []> reduce_argmax_0_axis_0 = const()[name = tensor<string, []>("reduce_argmax_0_axis_0"), val = tensor<int32, []>(2)];
            tensor<bool, []> reduce_argmax_0_keep_dims_0 = const()[name = tensor<string, []>("reduce_argmax_0_keep_dims_0"), val = tensor<bool, []>(false)];
            tensor<int32, [1, 17]> reduce_argmax_0_cast = reduce_argmax(axis = reduce_argmax_0_axis_0, keep_dims = reduce_argmax_0_keep_dims_0, x = heatmap_flat_cast);
            tensor<int32, [1]> var_1597_axes_0 = const()[name = tensor<string, []>("op_1597_axes_0"), val = tensor<int32, [1]>([-1])];
            tensor<int32, [1, 17, 1]> var_1597 = expand_dims(axes = var_1597_axes_0, x = reduce_argmax_0_cast);
            tensor<int32, [3]> var_1598 = const()[name = tensor<string, []>("op_1598"), val = tensor<int32, [3]>([1, 1, 2])];
            tensor<int32, [1, 17, 2]> var_1599 = tile(reps = var_1598, x = var_1597);
            tensor<int32, [1]> var_1601_axes_0 = const()[name = tensor<string, []>("op_1601_axes_0"), val = tensor<int32, [1]>([-1])];
            tensor<fp16, [1, 17, 1]> var_1601_cast = expand_dims(axes = var_1601_axes_0, x = reduce_max_0_cast);
            tensor<int32, [3]> var_1602 = const()[name = tensor<string, []>("op_1602"), val = tensor<int32, [3]>([1, 1, 2])];
            tensor<fp16, [1, 17, 2]> scores_cast = tile(reps = var_1602, x = var_1601_cast);
            tensor<int32, [3]> var_1606_begin_0 = const()[name = tensor<string, []>("op_1606_begin_0"), val = tensor<int32, [3]>([0, 0, 0])];
            tensor<int32, [3]> var_1606_end_0 = const()[name = tensor<string, []>("op_1606_end_0"), val = tensor<int32, [3]>([1, 17, 1])];
            tensor<bool, [3]> var_1606_end_mask_0 = const()[name = tensor<string, []>("op_1606_end_mask_0"), val = tensor<bool, [3]>([true, true, false])];
            tensor<bool, [3]> var_1606_squeeze_mask_0 = const()[name = tensor<string, []>("op_1606_squeeze_mask_0"), val = tensor<bool, [3]>([false, false, true])];
            tensor<string, []> preds_1_to_fp16_dtype_0 = const()[name = tensor<string, []>("preds_1_to_fp16_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<fp16, [1, 17, 2]> cast_133 = cast(dtype = preds_1_to_fp16_dtype_0, x = var_1599);
            tensor<fp16, [1, 17]> var_1606_cast = slice_by_index(begin = var_1606_begin_0, end = var_1606_end_0, end_mask = var_1606_end_mask_0, squeeze_mask = var_1606_squeeze_mask_0, x = cast_133);
            tensor<fp16, [1]> W_1_promoted = const()[name = tensor<string, []>("W_1_promoted"), val = tensor<fp16, [1]>([0x1.8p+5])];
            tensor<fp16, [1, 17]> var_1610_cast = floor_div(x = var_1606_cast, y = W_1_promoted);
            tensor<fp16, [1]> W_1_promoted_0 = const()[name = tensor<string, []>("W_1_promoted_0"), val = tensor<fp16, [1]>([0x1.8p+5])];
            tensor<fp16, [1, 17]> var_1611_cast = mul(x = var_1610_cast, y = W_1_promoted_0);
            tensor<fp16, [1, 17]> var_1612_cast = sub(x = var_1606_cast, y = var_1611_cast);
            tensor<int32, [3]> transpose_0_perm_0 = const()[name = tensor<string, []>("transpose_0_perm_0"), val = tensor<int32, [3]>([2, 0, 1])];
            tensor<int32, [1]> expand_dims_0_axes_0 = const()[name = tensor<string, []>("expand_dims_0_axes_0"), val = tensor<int32, [1]>([0])];
            tensor<fp16, [1, 1, 17]> expand_dims_0_cast = expand_dims(axes = expand_dims_0_axes_0, x = var_1612_cast);
            tensor<int32, [1]> scatter_0_indices_0 = const()[name = tensor<string, []>("scatter_0_indices_0"), val = tensor<int32, [1]>([0])];
            tensor<int32, []> scatter_0_axis_0 = const()[name = tensor<string, []>("scatter_0_axis_0"), val = tensor<int32, []>(0)];
            tensor<string, []> scatter_0_mode_0 = const()[name = tensor<string, []>("scatter_0_mode_0"), val = tensor<string, []>("update")];
            tensor<fp16, [2, 1, 17]> transpose_14 = transpose(perm = transpose_0_perm_0, x = cast_133);
            tensor<fp16, [2, 1, 17]> scatter_0_cast = scatter(axis = scatter_0_axis_0, data = transpose_14, indices = scatter_0_indices_0, mode = scatter_0_mode_0, updates = expand_dims_0_cast);
            tensor<int32, [3]> var_1619_begin_0 = const()[name = tensor<string, []>("op_1619_begin_0"), val = tensor<int32, [3]>([0, 0, 1])];
            tensor<int32, [3]> var_1619_end_0 = const()[name = tensor<string, []>("op_1619_end_0"), val = tensor<int32, [3]>([1, 17, 2])];
            tensor<bool, [3]> var_1619_end_mask_0 = const()[name = tensor<string, []>("op_1619_end_mask_0"), val = tensor<bool, [3]>([true, true, false])];
            tensor<bool, [3]> var_1619_squeeze_mask_0 = const()[name = tensor<string, []>("op_1619_squeeze_mask_0"), val = tensor<bool, [3]>([false, false, true])];
            tensor<int32, [3]> transpose_4_perm_0 = const()[name = tensor<string, []>("transpose_4_perm_0"), val = tensor<int32, [3]>([1, 2, 0])];
            tensor<fp16, [1, 17, 2]> transpose_13 = transpose(perm = transpose_4_perm_0, x = scatter_0_cast);
            tensor<fp16, [1, 17]> var_1619_cast = slice_by_index(begin = var_1619_begin_0, end = var_1619_end_0, end_mask = var_1619_end_mask_0, squeeze_mask = var_1619_squeeze_mask_0, x = transpose_13);
            tensor<fp16, [1]> W_1_promoted_0_1 = const()[name = tensor<string, []>("W_1_promoted_0_1"), val = tensor<fp16, [1]>([0x1.8p+5])];
            tensor<fp16, [1, 17]> floor_div_0_cast = floor_div(x = var_1619_cast, y = W_1_promoted_0_1);
            tensor<int32, [1]> expand_dims_1_axes_0 = const()[name = tensor<string, []>("expand_dims_1_axes_0"), val = tensor<int32, [1]>([0])];
            tensor<fp16, [1, 1, 17]> expand_dims_1_cast = expand_dims(axes = expand_dims_1_axes_0, x = floor_div_0_cast);
            tensor<int32, [1]> scatter_1_indices_0 = const()[name = tensor<string, []>("scatter_1_indices_0"), val = tensor<int32, [1]>([1])];
            tensor<int32, []> scatter_1_axis_0 = const()[name = tensor<string, []>("scatter_1_axis_0"), val = tensor<int32, []>(0)];
            tensor<string, []> scatter_1_mode_0 = const()[name = tensor<string, []>("scatter_1_mode_0"), val = tensor<string, []>("update")];
            tensor<fp16, [2, 1, 17]> scatter_1_cast = scatter(axis = scatter_1_axis_0, data = scatter_0_cast, indices = scatter_1_indices_0, mode = scatter_1_mode_0, updates = expand_dims_1_cast);
            tensor<int32, [3]> preds_1_internal_tensor_assign_2_perm_0 = const()[name = tensor<string, []>("preds_1_internal_tensor_assign_2_perm_0"), val = tensor<int32, [3]>([1, 2, 0])];
            tensor<fp16, []> var_1577_to_fp16 = const()[name = tensor<string, []>("op_1577_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<bool, [1, 17, 2]> var_1629_cast = greater(x = scores_cast, y = var_1577_to_fp16);
            tensor<fp16, [1, 17, 2]> invalid_after_broadcast_to_fp16 = const()[name = tensor<string, []>("invalid_after_broadcast_to_fp16"), val = tensor<fp16, [1, 17, 2]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14558272)))];
            tensor<fp16, [1, 17, 2]> transpose_12 = transpose(perm = preds_1_internal_tensor_assign_2_perm_0, x = scatter_1_cast);
            tensor<fp16, [1, 17, 2]> preds_3_cast = select(a = transpose_12, b = invalid_after_broadcast_to_fp16, cond = var_1629_cast);
            tensor<int32, [3]> var_1637_begin_0 = const()[name = tensor<string, []>("op_1637_begin_0"), val = tensor<int32, [3]>([0, 0, 0])];
            tensor<int32, [3]> var_1637_end_0 = const()[name = tensor<string, []>("op_1637_end_0"), val = tensor<int32, [3]>([1, 17, 1])];
            tensor<bool, [3]> var_1637_end_mask_0 = const()[name = tensor<string, []>("op_1637_end_mask_0"), val = tensor<bool, [3]>([true, true, false])];
            tensor<bool, [3]> var_1637_squeeze_mask_0 = const()[name = tensor<string, []>("op_1637_squeeze_mask_0"), val = tensor<bool, [3]>([false, false, true])];
            tensor<fp16, [1, 17]> var_1637_cast = slice_by_index(begin = var_1637_begin_0, end = var_1637_end_0, end_mask = var_1637_end_mask_0, squeeze_mask = var_1637_squeeze_mask_0, x = preds_3_cast);
            tensor<int32, [3]> var_1640_begin_0 = const()[name = tensor<string, []>("op_1640_begin_0"), val = tensor<int32, [3]>([0, 0, 1])];
            tensor<int32, [3]> var_1640_end_0 = const()[name = tensor<string, []>("op_1640_end_0"), val = tensor<int32, [3]>([1, 17, 2])];
            tensor<bool, [3]> var_1640_end_mask_0 = const()[name = tensor<string, []>("op_1640_end_mask_0"), val = tensor<bool, [3]>([true, true, false])];
            tensor<bool, [3]> var_1640_squeeze_mask_0 = const()[name = tensor<string, []>("op_1640_squeeze_mask_0"), val = tensor<bool, [3]>([false, false, true])];
            tensor<fp16, [1, 17]> var_1640_cast = slice_by_index(begin = var_1640_begin_0, end = var_1640_end_0, end_mask = var_1640_end_mask_0, squeeze_mask = var_1640_squeeze_mask_0, x = preds_3_cast);
            tensor<fp16, [1]> W_3_promoted = const()[name = tensor<string, []>("W_3_promoted"), val = tensor<fp16, [1]>([0x1.8p+5])];
            tensor<fp16, [1, 17]> var_1641_cast = mul(x = var_1640_cast, y = W_3_promoted);
            tensor<fp16, [1, 17]> preds_idx_1_cast = add(x = var_1637_cast, y = var_1641_cast);
            tensor<int32, [1]> var_1643_axes_0 = const()[name = tensor<string, []>("op_1643_axes_0"), val = tensor<int32, [1]>([-1])];
            tensor<fp16, [1, 17, 1]> var_1643_cast = expand_dims(axes = var_1643_axes_0, x = preds_idx_1_cast);
            tensor<int32, [4]> var_1648_begin_0 = const()[name = tensor<string, []>("op_1648_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1])];
            tensor<int32, [4]> var_1648_end_0 = const()[name = tensor<string, []>("op_1648_end_0"), val = tensor<int32, [4]>([1, 17, 64, 48])];
            tensor<bool, [4]> var_1648_end_mask_0 = const()[name = tensor<string, []>("op_1648_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 17, 64, 47]> var_1648_cast = slice_by_index(begin = var_1648_begin_0, end = var_1648_end_0, end_mask = var_1648_end_mask_0, x = heatmap_cast);
            tensor<int32, [4]> var_1652_begin_0 = const()[name = tensor<string, []>("op_1652_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 47])];
            tensor<int32, [4]> var_1652_end_0 = const()[name = tensor<string, []>("op_1652_end_0"), val = tensor<int32, [4]>([1, 17, 64, 48])];
            tensor<bool, [4]> var_1652_end_mask_0 = const()[name = tensor<string, []>("op_1652_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 17, 64, 1]> var_1652_cast = slice_by_index(begin = var_1652_begin_0, end = var_1652_end_0, end_mask = var_1652_end_mask_0, x = heatmap_cast);
            tensor<bool, []> left_interleave_0 = const()[name = tensor<string, []>("left_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 17, 64, 48]> left_cast = concat(axis = var_1586, interleave = left_interleave_0, values = (var_1648_cast, var_1652_cast));
            tensor<int32, [4]> var_1658_begin_0 = const()[name = tensor<string, []>("op_1658_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1658_end_0 = const()[name = tensor<string, []>("op_1658_end_0"), val = tensor<int32, [4]>([1, 17, 64, 1])];
            tensor<bool, [4]> var_1658_end_mask_0 = const()[name = tensor<string, []>("op_1658_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 17, 64, 1]> var_1658_cast = slice_by_index(begin = var_1658_begin_0, end = var_1658_end_0, end_mask = var_1658_end_mask_0, x = heatmap_cast);
            tensor<int32, [4]> var_1662_begin_0 = const()[name = tensor<string, []>("op_1662_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1662_end_0 = const()[name = tensor<string, []>("op_1662_end_0"), val = tensor<int32, [4]>([1, 17, 64, 47])];
            tensor<bool, [4]> var_1662_end_mask_0 = const()[name = tensor<string, []>("op_1662_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 17, 64, 47]> var_1662_cast = slice_by_index(begin = var_1662_begin_0, end = var_1662_end_0, end_mask = var_1662_end_mask_0, x = heatmap_cast);
            tensor<bool, []> right_interleave_0 = const()[name = tensor<string, []>("right_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 17, 64, 48]> right_cast = concat(axis = var_1586, interleave = right_interleave_0, values = (var_1658_cast, var_1662_cast));
            tensor<fp16, [1, 17, 64, 48]> var_1665_cast = sub(x = left_cast, y = right_cast);
            tensor<fp16, [1, 17, 64, 48]> var_1666_cast = sign(x = var_1665_cast);
            tensor<int32, [3]> var_1667 = const()[name = tensor<string, []>("op_1667"), val = tensor<int32, [3]>([1, 17, -1])];
            tensor<fp16, [1, 17, 3072]> dx_1_cast = reshape(shape = var_1667, x = var_1666_cast);
            tensor<string, []> cast_519_dtype_0 = const()[name = tensor<string, []>("cast_519_dtype_0"), val = tensor<string, []>("int32")];
            tensor<int32, [1, 17, 1]> cast_519 = cast(dtype = cast_519_dtype_0, x = var_1643_cast);
            tensor<fp16, [1, 17, 1]> dx_cast = gather_along_axis(axis = var_1584, indices = cast_519, x = dx_1_cast);
            tensor<int32, [4]> var_1670 = const()[name = tensor<string, []>("op_1670"), val = tensor<int32, [4]>([0, 1, 3, 2])];
            tensor<int32, [4]> var_1675_begin_0 = const()[name = tensor<string, []>("op_1675_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1])];
            tensor<int32, [4]> var_1675_end_0 = const()[name = tensor<string, []>("op_1675_end_0"), val = tensor<int32, [4]>([1, 17, 48, 64])];
            tensor<bool, [4]> var_1675_end_mask_0 = const()[name = tensor<string, []>("op_1675_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 17, 48, 64]> transpose_11 = transpose(perm = var_1670, x = heatmap_cast);
            tensor<fp16, [1, 17, 48, 63]> var_1675_cast = slice_by_index(begin = var_1675_begin_0, end = var_1675_end_0, end_mask = var_1675_end_mask_0, x = transpose_11);
            tensor<int32, [4]> var_1679_begin_0 = const()[name = tensor<string, []>("op_1679_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 63])];
            tensor<int32, [4]> var_1679_end_0 = const()[name = tensor<string, []>("op_1679_end_0"), val = tensor<int32, [4]>([1, 17, 48, 64])];
            tensor<bool, [4]> var_1679_end_mask_0 = const()[name = tensor<string, []>("op_1679_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 17, 48, 1]> var_1679_cast = slice_by_index(begin = var_1679_begin_0, end = var_1679_end_0, end_mask = var_1679_end_mask_0, x = transpose_11);
            tensor<bool, []> var_1681_interleave_0 = const()[name = tensor<string, []>("op_1681_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 17, 48, 64]> var_1681_cast = concat(axis = var_1586, interleave = var_1681_interleave_0, values = (var_1675_cast, var_1679_cast));
            tensor<int32, [4]> var_1689_begin_0 = const()[name = tensor<string, []>("op_1689_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1689_end_0 = const()[name = tensor<string, []>("op_1689_end_0"), val = tensor<int32, [4]>([1, 17, 48, 1])];
            tensor<bool, [4]> var_1689_end_mask_0 = const()[name = tensor<string, []>("op_1689_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 17, 48, 1]> var_1689_cast = slice_by_index(begin = var_1689_begin_0, end = var_1689_end_0, end_mask = var_1689_end_mask_0, x = transpose_11);
            tensor<int32, [4]> var_1693_begin_0 = const()[name = tensor<string, []>("op_1693_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1693_end_0 = const()[name = tensor<string, []>("op_1693_end_0"), val = tensor<int32, [4]>([1, 17, 48, 63])];
            tensor<bool, [4]> var_1693_end_mask_0 = const()[name = tensor<string, []>("op_1693_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 17, 48, 63]> var_1693_cast = slice_by_index(begin = var_1693_begin_0, end = var_1693_end_0, end_mask = var_1693_end_mask_0, x = transpose_11);
            tensor<bool, []> var_1695_interleave_0 = const()[name = tensor<string, []>("op_1695_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 17, 48, 64]> var_1695_cast = concat(axis = var_1586, interleave = var_1695_interleave_0, values = (var_1689_cast, var_1693_cast));
            tensor<fp16, [1, 17, 48, 64]> var_1698_cast = sub(x = var_1681_cast, y = var_1695_cast);
            tensor<fp16, [1, 17, 48, 64]> var_1699_cast = sign(x = var_1698_cast);
            tensor<int32, [3]> var_1700 = const()[name = tensor<string, []>("op_1700"), val = tensor<int32, [3]>([1, 17, -1])];
            tensor<int32, [4]> transpose_6_perm_0 = const()[name = tensor<string, []>("transpose_6_perm_0"), val = tensor<int32, [4]>([0, 1, 3, 2])];
            tensor<fp16, [1, 17, 64, 48]> transpose_10 = transpose(perm = transpose_6_perm_0, x = var_1699_cast);
            tensor<fp16, [1, 17, 3072]> dy_1_cast = reshape(shape = var_1700, x = transpose_10);
            tensor<fp16, [1, 17, 1]> dy_cast = gather_along_axis(axis = var_1584, indices = cast_519, x = dy_1_cast);
            tensor<bool, []> var_1704_interleave_0 = const()[name = tensor<string, []>("op_1704_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 17, 2]> var_1704_cast = concat(axis = var_1584, interleave = var_1704_interleave_0, values = (dx_cast, dy_cast));
            tensor<fp16, []> var_1705_to_fp16 = const()[name = tensor<string, []>("op_1705_to_fp16"), val = tensor<fp16, []>(0x1p-2)];
            tensor<fp16, [1, 17, 2]> dxdy_cast = mul(x = var_1704_cast, y = var_1705_to_fp16);
            tensor<fp16, [1, 17, 2]> preds_cast = add(x = preds_3_cast, y = dxdy_cast);
            tensor<fp16, []> var_1708_to_fp16 = const()[name = tensor<string, []>("op_1708_to_fp16"), val = tensor<fp16, []>(0x1.9p+7)];
            tensor<fp16, [1, 2]> s_cast = mul(x = scale_cast, y = var_1708_to_fp16);
            tensor<int32, [2]> var_1715_begin_0 = const()[name = tensor<string, []>("op_1715_begin_0"), val = tensor<int32, [2]>([0, 0])];
            tensor<int32, [2]> var_1715_end_0 = const()[name = tensor<string, []>("op_1715_end_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<bool, [2]> var_1715_end_mask_0 = const()[name = tensor<string, []>("op_1715_end_mask_0"), val = tensor<bool, [2]>([true, false])];
            tensor<bool, [2]> var_1715_squeeze_mask_0 = const()[name = tensor<string, []>("op_1715_squeeze_mask_0"), val = tensor<bool, [2]>([false, true])];
            tensor<fp16, [1]> var_1715_cast = slice_by_index(begin = var_1715_begin_0, end = var_1715_end_0, end_mask = var_1715_end_mask_0, squeeze_mask = var_1715_squeeze_mask_0, x = s_cast);
            tensor<fp16, [1]> _inversed_scale_x_y_0_to_fp16 = const()[name = tensor<string, []>("_inversed_scale_x_y_0_to_fp16"), val = tensor<fp16, [1]>([0x1.554p-6])];
            tensor<fp16, [1]> _inversed_scale_x_cast = mul(x = var_1715_cast, y = _inversed_scale_x_y_0_to_fp16);
            tensor<int32, [2]> var_1718_begin_0 = const()[name = tensor<string, []>("op_1718_begin_0"), val = tensor<int32, [2]>([0, 1])];
            tensor<int32, [2]> var_1718_end_0 = const()[name = tensor<string, []>("op_1718_end_0"), val = tensor<int32, [2]>([1, 2])];
            tensor<bool, [2]> var_1718_end_mask_0 = const()[name = tensor<string, []>("op_1718_end_mask_0"), val = tensor<bool, [2]>([true, false])];
            tensor<bool, [2]> var_1718_squeeze_mask_0 = const()[name = tensor<string, []>("op_1718_squeeze_mask_0"), val = tensor<bool, [2]>([false, true])];
            tensor<fp16, [1]> var_1718_cast = slice_by_index(begin = var_1718_begin_0, end = var_1718_end_0, end_mask = var_1718_end_mask_0, squeeze_mask = var_1718_squeeze_mask_0, x = s_cast);
            tensor<fp16, [1]> _inversed_scale_y_y_0_to_fp16 = const()[name = tensor<string, []>("_inversed_scale_y_y_0_to_fp16"), val = tensor<fp16, [1]>([0x1p-6])];
            tensor<fp16, [1]> _inversed_scale_y_cast = mul(x = var_1718_cast, y = _inversed_scale_y_y_0_to_fp16);
            tensor<int32, [3]> var_1722_begin_0 = const()[name = tensor<string, []>("op_1722_begin_0"), val = tensor<int32, [3]>([0, 0, 0])];
            tensor<int32, [3]> var_1722_end_0 = const()[name = tensor<string, []>("op_1722_end_0"), val = tensor<int32, [3]>([1, 17, 1])];
            tensor<bool, [3]> var_1722_end_mask_0 = const()[name = tensor<string, []>("op_1722_end_mask_0"), val = tensor<bool, [3]>([true, true, false])];
            tensor<bool, [3]> var_1722_squeeze_mask_0 = const()[name = tensor<string, []>("op_1722_squeeze_mask_0"), val = tensor<bool, [3]>([false, false, true])];
            tensor<fp16, [1, 17]> var_1722_cast = slice_by_index(begin = var_1722_begin_0, end = var_1722_end_0, end_mask = var_1722_end_mask_0, squeeze_mask = var_1722_squeeze_mask_0, x = preds_cast);
            tensor<fp16, [1, 17]> var_1723_cast = mul(x = var_1722_cast, y = _inversed_scale_x_cast);
            tensor<int32, [2]> var_1725_begin_0 = const()[name = tensor<string, []>("op_1725_begin_0"), val = tensor<int32, [2]>([0, 0])];
            tensor<int32, [2]> var_1725_end_0 = const()[name = tensor<string, []>("op_1725_end_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<bool, [2]> var_1725_end_mask_0 = const()[name = tensor<string, []>("op_1725_end_mask_0"), val = tensor<bool, [2]>([true, false])];
            tensor<bool, [2]> var_1725_squeeze_mask_0 = const()[name = tensor<string, []>("op_1725_squeeze_mask_0"), val = tensor<bool, [2]>([false, true])];
            tensor<fp16, [1]> var_1725_cast = slice_by_index(begin = var_1725_begin_0, end = var_1725_end_0, end_mask = var_1725_end_mask_0, squeeze_mask = var_1725_squeeze_mask_0, x = center_cast);
            tensor<fp16, [1, 17]> var_1726_cast = add(x = var_1723_cast, y = var_1725_cast);
            tensor<fp16, []> var_1729_to_fp16 = const()[name = tensor<string, []>("op_1729_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1]> var_1730_cast = mul(x = var_1715_cast, y = var_1729_to_fp16);
            tensor<fp16, [1, 17]> var_1731_cast = sub(x = var_1726_cast, y = var_1730_cast);
            tensor<int32, [3]> transpose_2_perm_0 = const()[name = tensor<string, []>("transpose_2_perm_0"), val = tensor<int32, [3]>([2, 0, 1])];
            tensor<int32, [1]> expand_dims_2_axes_0 = const()[name = tensor<string, []>("expand_dims_2_axes_0"), val = tensor<int32, [1]>([0])];
            tensor<fp16, [1, 1, 17]> expand_dims_2_cast = expand_dims(axes = expand_dims_2_axes_0, x = var_1731_cast);
            tensor<int32, [1]> scatter_2_indices_0 = const()[name = tensor<string, []>("scatter_2_indices_0"), val = tensor<int32, [1]>([0])];
            tensor<int32, []> scatter_2_axis_0 = const()[name = tensor<string, []>("scatter_2_axis_0"), val = tensor<int32, []>(0)];
            tensor<string, []> scatter_2_mode_0 = const()[name = tensor<string, []>("scatter_2_mode_0"), val = tensor<string, []>("update")];
            tensor<fp16, [2, 1, 17]> transpose_9 = transpose(perm = transpose_2_perm_0, x = preds_cast);
            tensor<fp16, [2, 1, 17]> scatter_2_cast = scatter(axis = scatter_2_axis_0, data = transpose_9, indices = scatter_2_indices_0, mode = scatter_2_mode_0, updates = expand_dims_2_cast);
            tensor<int32, [3]> var_1738_begin_0 = const()[name = tensor<string, []>("op_1738_begin_0"), val = tensor<int32, [3]>([0, 0, 1])];
            tensor<int32, [3]> var_1738_end_0 = const()[name = tensor<string, []>("op_1738_end_0"), val = tensor<int32, [3]>([1, 17, 2])];
            tensor<bool, [3]> var_1738_end_mask_0 = const()[name = tensor<string, []>("op_1738_end_mask_0"), val = tensor<bool, [3]>([true, true, false])];
            tensor<bool, [3]> var_1738_squeeze_mask_0 = const()[name = tensor<string, []>("op_1738_squeeze_mask_0"), val = tensor<bool, [3]>([false, false, true])];
            tensor<int32, [3]> transpose_5_perm_0 = const()[name = tensor<string, []>("transpose_5_perm_0"), val = tensor<int32, [3]>([1, 2, 0])];
            tensor<fp16, [1, 17, 2]> transpose_8 = transpose(perm = transpose_5_perm_0, x = scatter_2_cast);
            tensor<fp16, [1, 17]> var_1738_cast = slice_by_index(begin = var_1738_begin_0, end = var_1738_end_0, end_mask = var_1738_end_mask_0, squeeze_mask = var_1738_squeeze_mask_0, x = transpose_8);
            tensor<fp16, [1, 17]> var_1739_cast = mul(x = var_1738_cast, y = _inversed_scale_y_cast);
            tensor<int32, [2]> var_1741_begin_0 = const()[name = tensor<string, []>("op_1741_begin_0"), val = tensor<int32, [2]>([0, 1])];
            tensor<int32, [2]> var_1741_end_0 = const()[name = tensor<string, []>("op_1741_end_0"), val = tensor<int32, [2]>([1, 2])];
            tensor<bool, [2]> var_1741_end_mask_0 = const()[name = tensor<string, []>("op_1741_end_mask_0"), val = tensor<bool, [2]>([true, false])];
            tensor<bool, [2]> var_1741_squeeze_mask_0 = const()[name = tensor<string, []>("op_1741_squeeze_mask_0"), val = tensor<bool, [2]>([false, true])];
            tensor<fp16, [1]> var_1741_cast = slice_by_index(begin = var_1741_begin_0, end = var_1741_end_0, end_mask = var_1741_end_mask_0, squeeze_mask = var_1741_squeeze_mask_0, x = center_cast);
            tensor<fp16, [1, 17]> var_1742_cast = add(x = var_1739_cast, y = var_1741_cast);
            tensor<int32, [2]> var_1744_begin_0 = const()[name = tensor<string, []>("op_1744_begin_0"), val = tensor<int32, [2]>([0, 1])];
            tensor<int32, [2]> var_1744_end_0 = const()[name = tensor<string, []>("op_1744_end_0"), val = tensor<int32, [2]>([1, 2])];
            tensor<bool, [2]> var_1744_end_mask_0 = const()[name = tensor<string, []>("op_1744_end_mask_0"), val = tensor<bool, [2]>([true, false])];
            tensor<bool, [2]> var_1744_squeeze_mask_0 = const()[name = tensor<string, []>("op_1744_squeeze_mask_0"), val = tensor<bool, [2]>([false, true])];
            tensor<fp16, [1]> var_1744_cast = slice_by_index(begin = var_1744_begin_0, end = var_1744_end_0, end_mask = var_1744_end_mask_0, squeeze_mask = var_1744_squeeze_mask_0, x = s_cast);
            tensor<fp16, []> var_1745_to_fp16 = const()[name = tensor<string, []>("op_1745_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1]> var_1746_cast = mul(x = var_1744_cast, y = var_1745_to_fp16);
            tensor<fp16, [1, 17]> var_1747_cast = sub(x = var_1742_cast, y = var_1746_cast);
            tensor<int32, [1]> expand_dims_3_axes_0 = const()[name = tensor<string, []>("expand_dims_3_axes_0"), val = tensor<int32, [1]>([0])];
            tensor<fp16, [1, 1, 17]> expand_dims_3_cast = expand_dims(axes = expand_dims_3_axes_0, x = var_1747_cast);
            tensor<int32, [1]> scatter_3_indices_0 = const()[name = tensor<string, []>("scatter_3_indices_0"), val = tensor<int32, [1]>([1])];
            tensor<int32, []> scatter_3_axis_0 = const()[name = tensor<string, []>("scatter_3_axis_0"), val = tensor<int32, []>(0)];
            tensor<string, []> scatter_3_mode_0 = const()[name = tensor<string, []>("scatter_3_mode_0"), val = tensor<string, []>("update")];
            tensor<fp16, [2, 1, 17]> scatter_3_cast = scatter(axis = scatter_3_axis_0, data = scatter_2_cast, indices = scatter_3_indices_0, mode = scatter_3_mode_0, updates = expand_dims_3_cast);
            tensor<int32, [3]> keypoints_perm_0 = const()[name = tensor<string, []>("keypoints_perm_0"), val = tensor<int32, [3]>([1, 2, 0])];
            tensor<string, []> keypoints_cast_to_fp32_dtype_0 = const()[name = tensor<string, []>("keypoints_cast_to_fp32_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<fp16, [1, 17, 2]> transpose_7 = transpose(perm = keypoints_perm_0, x = scatter_3_cast);
            tensor<fp32, [1, 17, 2]> keypoints = cast(dtype = keypoints_cast_to_fp32_dtype_0, x = transpose_7);
            tensor<fp32, [1, 17]> scores = cast(dtype = reduce_max_0_cast_to_fp32_dtype_0, x = reduce_max_0_cast);
        } -> (keypoints, scores);
}